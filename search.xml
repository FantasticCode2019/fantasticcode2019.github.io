<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>逐步求和得到正数的最小值</title>
      <link href="/2022/10/01/1413-%E9%80%90%E6%AD%A5%E6%B1%82%E5%92%8C%E5%BE%97%E5%88%B0%E6%AD%A3%E6%95%B0%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC/"/>
      <url>/2022/10/01/1413-%E9%80%90%E6%AD%A5%E6%B1%82%E5%92%8C%E5%BE%97%E5%88%B0%E6%AD%A3%E6%95%B0%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC/</url>
      
        <content type="html"><![CDATA[<h4 id="1413-逐步求和得到正数的最小值">1413.逐步求和得到正数的最小值</h4><h5 id="题目"><a href="https://leetcode.cn/problems/minimum-value-to-get-positive-step-by-step-sum">题目</a></h5><p>给你一个整数数组 <code>nums</code> 。你可以选定任意的 正数 <code>startValue</code> 作为初始值。</p><p>你需要从左到右遍历 <code>nums</code> 数组，并将 <code>startValue</code> 依次累加上 <code>nums</code> 数组中的值。</p><p>请你在确保累加和始终大于等于 <code>1</code> 的前提下，选出一个最小的 <strong>正数</strong> 作为 <code>startValue</code> 。</p><h5 id="范围提示">范围提示</h5><ul><li><code>1 &lt;= nums.length &lt;= 100</code></li><li><code>-100 &lt;= nums[i] &lt;= 100</code></li></ul><h5 id="示例">示例</h5><blockquote><p>输入：nums = [-3,2,-3,4,2]<br>输出：5<br>解释：如果你选择 startValue = 4，在第三次累加时，和小于 1 。<br>累加求和<br>startValue = 4 | startValue = 5 | nums<br>(4 -3 ) = 1       | (5 -3 ) = 2          |  -3<br>(1 +2 ) = 3      | (2 +2 ) = 4         |   2<br>(3 -3 ) = 0       | (4 -3 ) = 1          |  -3<br>(0 +4 ) = 4      | (1 +4 ) = 5         |   4<br>(4 +2 ) = 6      | (5 +2 ) = 7         |   2</p></blockquote><blockquote><p>输入：nums = [1,2]<br>输出：1<br>解释：最小的 startValue 需要是正数。</p></blockquote><blockquote><p>输入：nums = [1,-2,-3]<br>输出：5</p></blockquote><h5 id="解题思路">解题思路</h5><p>要保证所有的累加和 <code>sum</code> 满足 sum+startValue≥1，只需保证累加和的最小值 sumMin 满足 sumMin+startValue≥1，那么 startValue 的最小值即可取 −sumMin+1(注意这里累加和必须是小于1)。</p><h5 id="代码">代码</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">minStartValue</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> sum = <span class="number">0</span>,res = <span class="number">10005</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; nums.<span class="built_in">size</span>();i ++)&#123;</span><br><span class="line">            sum += nums[i];</span><br><span class="line">            res = <span class="built_in">min</span>(sum, res);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (res &lt; <span class="number">1</span>) ? <span class="number">1</span> - res : <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">minStartValue</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        accSum, accSumMin = <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> num <span class="keyword">in</span> nums:</span><br><span class="line">            accSum += num</span><br><span class="line">            accSumMin = <span class="built_in">min</span>(accSumMin, accSum)</span><br><span class="line">        <span class="keyword">return</span> -accSumMin + <span class="number">1</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> 前缀和 </tag>
            
            <tag> 贪心 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>逐步求和得到正数的最小值</title>
      <link href="/2022/10/01/1417-%E9%87%8D%E6%96%B0%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
      <url>/2022/10/01/1417-%E9%87%8D%E6%96%B0%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
      
        <content type="html"><![CDATA[<h4 id="1417-重新格式化字符串">1417. 重新格式化字符串</h4><h5 id="题目"><a href="https://leetcode.cn/problems/reformat-the-string">题目</a></h5><p>给你一个混合了数字和字母的字符串 s，其中的字母均为小写英文字母。请你将该字符串重新格式化，使得任意两个相邻字符的类型都不同。也就是说，字母后面应该跟着数字，而数字后面应该跟着字母。</p><p>请你返回 <strong>重新格式化后</strong> 的字符串；如果无法按要求重新格式化，则返回一个 <strong>空字符串</strong> 。</p><h5 id="范围提示">范围提示</h5><ul><li><code>1 &lt;= s.length &lt;= 500</code></li><li><code>s</code> 仅由小写英文字母和/或数字组成。</li></ul><h5 id="示例">示例</h5><blockquote><p>输入：s = “a0b1c2”<br>输出：“0a1b2c”<br>解释：“0a1b2c” 中任意两个相邻字符的类型都不同。 “a0b1c2”, “0a1b2c”, “0c2a1b” 也是满足题目要求的答案。</p></blockquote><blockquote><p>输入：s = “leetcode”<br>输出：“”<br>解释：“leetcode” 中只有字母，所以无法满足重新格式化的条件。</p></blockquote><blockquote><p>输入：s = “1229857369”<br>输出：“”<br>解释：“1229857369” 中只有数字，所以无法满足重新格式化的条件。</p></blockquote><blockquote><p>输入：s = “covid2019”<br>输出：“c2o0v1i9d”</p></blockquote><blockquote><p>输入：s = “ab123”<br>输出：“1a2b3”</p></blockquote><h5 id="解题思路">解题思路</h5><p>思路一：将数字和字母分开统计，两者之间的大小差距大于1，无法满足格式化的条件；反之，则交替插入字母和数字，返回该字符串。注意：若字母多，字符串首位为字母；反之，则字符串首位是数字。</p><p>思路二：题目给定字符串 <code>s</code>，我们记 <code>sum_digit</code> 为字符串中数字的个数，<code>sum_alpha</code> 为字符串中字母的个数。那么能按照题目要求格式化字符串的充要条件为：<code>∣sum_digit−sum_alpha∣≤1</code></p><p>那么当给定字符串 <code>s</code> 满足上述条件时，我们把数字和字母中个数多的放在偶数位上（字符串下标从 <code>0</code> 开始），个数少的放在奇数位上，此时可以构造出满足题目条件的字符串。那么我们用 <code>i</code> 和 <code>j</code> 来分别表示个数多的和个数少的字符放置的下标，初始为 <code>i=0,j=1</code>，然后从左到右移动 <code>i</code>，当 <code>s[i]</code> 为个数少的字符类型时，那么向右移动 <code>j</code> 找到往后的第一个 <code>s[j]</code> 为个数多的字符类型，然后交换两个字符即可，不断重复该过程直至 <code>i</code> 移动到字符串结尾即可。</p><h5 id="代码">代码</h5><p>思路一：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">string <span class="title">reformat</span><span class="params">(string s)</span> </span>&#123;</span><br><span class="line">        vector&lt;<span class="type">char</span>&gt; digit;</span><br><span class="line">        vector&lt;<span class="type">char</span>&gt; letter;</span><br><span class="line">        <span class="type">int</span> d = <span class="number">0</span>, l = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; s.<span class="built_in">size</span>();i ++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i] &gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; s[i] &lt;= <span class="string">&#x27;9&#x27;</span>)&#123;digit.<span class="built_in">push_back</span>(s[i]);d++;&#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;letter.<span class="built_in">push_back</span>(s[i]);l++;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//cout&lt;&lt;digit.size()&lt;&lt;letter.size()&lt;&lt;endl;</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">fabs</span>(d-l) &gt; <span class="number">1</span>) <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        string res = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(digit.<span class="built_in">size</span>() &gt; letter.<span class="built_in">size</span>())&#123;</span><br><span class="line">            <span class="keyword">while</span>(i &lt; letter.<span class="built_in">size</span>())&#123;</span><br><span class="line">                res += digit[i];</span><br><span class="line">                res += letter[i];</span><br><span class="line">                i ++;</span><br><span class="line">            &#125;</span><br><span class="line">            res += digit[i];</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(digit.<span class="built_in">size</span>() &lt; letter.<span class="built_in">size</span>())&#123;</span><br><span class="line">            <span class="keyword">while</span>(i &lt; digit.<span class="built_in">size</span>())&#123;</span><br><span class="line">                res += letter[i];</span><br><span class="line">                res += digit[i];</span><br><span class="line">                i ++;</span><br><span class="line">            &#125;</span><br><span class="line">            res += letter[i];</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">while</span>(i &lt; digit.<span class="built_in">size</span>())&#123;</span><br><span class="line">                res += letter[i];</span><br><span class="line">                res += digit[i];</span><br><span class="line">                i ++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>思路二：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">string <span class="title">reformat</span><span class="params">(string s)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> sum_digit = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span>&amp; c : s) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">isdigit</span>(c)) &#123;</span><br><span class="line">                sum_digit++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> sum_alpha = s.<span class="built_in">size</span>() - sum_digit;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">abs</span>(sum_digit - sum_alpha) &gt; <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">bool</span> flag = sum_digit &gt; sum_alpha;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>, j = <span class="number">1</span>; i &lt; s.<span class="built_in">size</span>(); i += <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">isdigit</span>(s[i]) != flag) &#123;</span><br><span class="line">                <span class="keyword">while</span> (<span class="built_in">isdigit</span>(s[j]) != flag) &#123;</span><br><span class="line">                    j += <span class="number">2</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">swap</span>(s[i], s[j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> s;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> 模拟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用户分组</title>
      <link href="/2022/10/01/1282-%E7%94%A8%E6%88%B7%E5%88%86%E7%BB%84/"/>
      <url>/2022/10/01/1282-%E7%94%A8%E6%88%B7%E5%88%86%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<h4 id="1282-用户分组">1282. 用户分组</h4><h5 id="题目"><a href="https://leetcode.cn/problems/group-the-people-given-the-group-size-they-belong-to/">题目</a></h5><p>有 <code>n</code> 个人被分成数量未知的组。每个人都被标记为一个从 <code>0</code> 到 <code>n - 1</code> 的<strong>唯一ID</strong> 。</p><p>给定一个整数数组 <code>groupSizes</code> ，其中 <code>groupSizes[i]</code> 是第 <code>i</code> 个人所在的组的大小。例如，如果 <code>groupSizes[1] = 3</code> ，则第 <code>1</code> 个人必须位于大小为 <code>3</code> 的组中。</p><p>返回一个组列表，使每个人 <code>i</code> 都在一个大小为 <code>groupSizes[i]</code> 的组中。</p><p>每个人应该 <strong>恰好只</strong> 出现在 <strong>一个组</strong> 中，并且每个人必须在一个组中。如果有多个答案，返回其中 <strong>任何</strong> 一个。可以 <strong>保证</strong> 给定输入 <strong>至少有一个</strong> 有效的解。</p><h5 id="范围提示">范围提示</h5><ul><li><code>groupSizes.length == n</code></li><li><code>1 &lt;= n &lt;= 500</code></li><li><code>1 &lt;= groupSizes[i] &lt;= n</code></li></ul><h5 id="示例">示例</h5><blockquote><p>输入：groupSizes = [3,3,3,3,3,1,3]<br>输出：[[5],[0,1,2],[3,4,6]]<br>解释：<br>第一组是 [5]，大小为 1，groupSizes[5] = 1。<br>第二组是 [0,1,2]，大小为 3，groupSizes[0] = groupSizes[1] = groupSizes[2] = 3。<br>第三组是 [3,4,6]，大小为 3，groupSizes[3] = groupSizes[4] = groupSizes[6] = 3。<br>其他可能的解决方案有 [[2,1,6],[5],[0,4,3]] 和 [[5],[0,6,2],[4,3,1]]。</p></blockquote><blockquote><p>输入：groupSizes = [2,1,3,3,3,2]<br>输出：[[1],[0,5],[2,3,4]]</p></blockquote><h5 id="解题思路">解题思路</h5><p>思路一：贪心的思路。将数组<code>groupSizes</code>所有的值进行排序，将必须要分到大组人员优先组合，直至满足组的最大值之后并入vector数组中，最后放回这个vector。注意：每个人必须要安排至(等于)指定大小的组中去，我这里考虑过多的是<strong>大于等于这个组</strong>。</p><p>思路二：由于给定的输入一定存在有效的解，因此对于数组 <code>groupSizes</code> 中的每个元素 x，当 x 在数组中出现 y 次时，y 一定能被 x 整除，且大小为 xx 的组有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mi>y</mi><mi>x</mi></mfrac></mrow><annotation encoding="application/x-tex">\frac{y}{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0925em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7475em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4461em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 个。</p><p>首先将每个人的编号按照组的大小划分，使用哈希表记录每个组的大小对应的所有人的编号。然后遍历哈希表，对于大小为 xx 的组，得到对应的所有人编号列表，将列表的大小记为 y，则 y 一定能被 x 整除，将列表分成 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mi>y</mi><mi>x</mi></mfrac></mrow><annotation encoding="application/x-tex">\frac{y}{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0925em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7475em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4461em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 个大小为 xx 的组，并将每个组添加到答案中。遍历结束之后，即完成分组。</p><h5 id="代码">代码</h5><p>思路一：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">group</span>&#123;</span><br><span class="line">        <span class="type">int</span> sz;</span><br><span class="line">        <span class="type">int</span> index;</span><br><span class="line">    &#125;group;</span><br><span class="line">    <span class="function"><span class="type">static</span> <span class="type">bool</span> <span class="title">cmp</span><span class="params">(group x, group y)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> x.sz &lt; y.sz;</span><br><span class="line">    &#125;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">groupThePeople</span>(vector&lt;<span class="type">int</span>&gt;&amp; groupSizes) &#123;</span><br><span class="line">        vector&lt; vector&lt;<span class="type">int</span>&gt; &gt; res;</span><br><span class="line">        <span class="keyword">if</span>(groupSizes.<span class="built_in">size</span>() == <span class="number">1</span>)&#123;</span><br><span class="line">            vector&lt;<span class="type">int</span>&gt; t;</span><br><span class="line">            t.<span class="built_in">push_back</span>(<span class="number">0</span>);</span><br><span class="line">            res.<span class="built_in">push_back</span>(t);</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        &#125;</span><br><span class="line">        vector&lt;group&gt; p;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; groupSizes.<span class="built_in">size</span>();i ++)&#123;</span><br><span class="line">            group x;</span><br><span class="line">            x.sz = groupSizes[i];</span><br><span class="line">            x.index = i;</span><br><span class="line">            p.<span class="built_in">push_back</span>(x);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">sort</span>(p.<span class="built_in">begin</span>(),p.<span class="built_in">end</span>(),cmp);</span><br><span class="line">        vector&lt;<span class="type">int</span>&gt; tmp;</span><br><span class="line">        <span class="type">int</span> flag = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = p.<span class="built_in">size</span>()<span class="number">-1</span>;i &gt;= <span class="number">0</span>;i --)&#123;</span><br><span class="line">            <span class="keyword">if</span>(tmp.<span class="built_in">size</span>() == <span class="number">0</span>) flag = p[i].sz;</span><br><span class="line">            tmp.<span class="built_in">push_back</span>(p[i].index);</span><br><span class="line">            <span class="keyword">if</span>(tmp.<span class="built_in">size</span>() == flag)&#123;</span><br><span class="line">                res.<span class="built_in">push_back</span>(tmp);</span><br><span class="line">                tmp.<span class="built_in">clear</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>思路二：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">groupThePeople</span>(vector&lt;<span class="type">int</span>&gt;&amp; groupSizes) &#123;</span><br><span class="line">        unordered_map&lt;<span class="type">int</span>, vector&lt;<span class="type">int</span>&gt;&gt; groups;</span><br><span class="line">        <span class="type">int</span> n = groupSizes.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="type">int</span> size = groupSizes[i];</span><br><span class="line">            groups[size].<span class="built_in">emplace_back</span>(i);</span><br><span class="line">        &#125;</span><br><span class="line">        vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; groupList;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;[size, people] : groups) &#123;</span><br><span class="line">            <span class="type">int</span> groupCount = people.<span class="built_in">size</span>() / size;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; groupCount; i++) &#123;</span><br><span class="line">                vector&lt;<span class="type">int</span>&gt; group;</span><br><span class="line">                <span class="type">int</span> start = i * size;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; size; j++) &#123;</span><br><span class="line">                    group.<span class="built_in">emplace_back</span>(people[start + j]);</span><br><span class="line">                &#125;</span><br><span class="line">                groupList.<span class="built_in">emplace_back</span>(group);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> groupList;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> 贪心 </tag>
            
            <tag> 脑筋急转弯题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分割字符串的最大得分</title>
      <link href="/2022/10/01/1422-%E5%88%86%E5%89%B2%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E5%A4%A7%E5%BE%97%E5%88%86/"/>
      <url>/2022/10/01/1422-%E5%88%86%E5%89%B2%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E5%A4%A7%E5%BE%97%E5%88%86/</url>
      
        <content type="html"><![CDATA[<h4 id="1422-分割字符串的最大得分">1422. 分割字符串的最大得分</h4><h5 id="题目"><a href="https://leetcode.cn/problems/maximum-score-after-splitting-a-string">题目</a></h5><p>给你一个由若干 0 和 1 组成的字符串 s ，请你计算并返回将该字符串分割成两个 <strong>非空</strong> 子字符串（即 <strong>左</strong> 子字符串和 <strong>右</strong> 子字符串）所能获得的最大得分。</p><p>「分割字符串的得分」为 <strong>左</strong> 子字符串中 <strong>0</strong> 的数量加上 <strong>右</strong> 子字符串中 <strong>1</strong> 的数量。</p><h5 id="范围提示">范围提示</h5><ul><li><code>2 &lt;= s.length &lt;= 500</code></li><li>字符串 <code>s</code> 仅由字符 <code>'0'</code> 和 <code>'1'</code> 组成。</li></ul><h5 id="示例">示例</h5><blockquote><p>输入：s = “011101”<br>输出：5<br>解释：<br>将字符串 s 划分为两个非空子字符串的可行方案有：<br>左子字符串 = “0” 且 右子字符串 = “11101”，得分 = 1 + 4 = 5<br>左子字符串 = “01” 且 右子字符串 = “1101”，得分 = 1 + 3 = 4<br>左子字符串 = “011” 且 右子字符串 = “101”，得分 = 1 + 2 = 3<br>左子字符串 = “0111” 且 右子字符串 = “01”，得分 = 1 + 1 = 2<br>左子字符串 = “01110” 且 右子字符串 = “1”，得分 = 2 + 1 = 3</p></blockquote><blockquote><p>输入：s = “00111”<br>输出：5<br>解释：当 左子字符串 = “00” 且 右子字符串 = “111” 时，我们得到最大得分 = 2 + 3 = 5</p></blockquote><blockquote><p>输入：s = “1111”<br>输出：3</p></blockquote><h5 id="解题思路">解题思路</h5><p>本题的目标是计算出不同的字符串划分，左侧字符串0的个数与右侧字符串1的个数之和的最大值。解题思路如下：记录下字符串中1的个数。然后依次遍历字符串遇到1，one++；遇到0，zero++。最后统计zero+one的最大值。</p><h5 id="代码">代码</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">maxScore</span><span class="params">(string s)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> res = <span class="number">-1</span>,one = <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> len = s.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; len;i ++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i] ==<span class="string">&#x27;1&#x27;</span>) one++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> zero = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; len<span class="number">-1</span>;i ++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i] ==<span class="string">&#x27;0&#x27;</span>) zero++;</span><br><span class="line">            <span class="keyword">else</span> one --;</span><br><span class="line">            res = <span class="built_in">max</span>(res, zero+one);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> 模拟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>合并相似的物品</title>
      <link href="/2022/10/01/2363-%E5%90%88%E5%B9%B6%E7%9B%B8%E4%BC%BC%E7%9A%84%E7%89%A9%E5%93%81/"/>
      <url>/2022/10/01/2363-%E5%90%88%E5%B9%B6%E7%9B%B8%E4%BC%BC%E7%9A%84%E7%89%A9%E5%93%81/</url>
      
        <content type="html"><![CDATA[<h4 id="2363-合并相似的物品">2363. 合并相似的物品</h4><h5 id="题目"><a href="https://leetcode.cn/problems/merge-similar-items/">题目</a></h5><p>给你两个二维整数数组<code>items1</code>和<code>items2</code>，表示两个物品集合。每个数组<code>items</code>有以下特质：</p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mi>t</mi><mi>e</mi><mi>m</mi><mi>s</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>=</mo><mo stretchy="false">[</mo><mi>v</mi><mi>a</mi><mi>l</mi><mi>u</mi><msub><mi>e</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>w</mi><mi>e</mi><mi>i</mi><mi>g</mi><mi>h</mi><msub><mi>t</mi><mi>i</mi></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">items[i] = [value_i, weight_i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">u</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">e</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">h</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span> 其中$ value_i <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>表示第</mtext><mi>i</mi><mtext>件物品的价值，</mtext></mrow><annotation encoding="application/x-tex">表示第 i 件物品的 价值，</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">表示第</span><span class="mord mathnormal">i</span><span class="mord cjk_fallback">件物品的价值，</span></span></span></span> weight_i $表示第 i 件物品的重量 。</li><li><code>items</code>中每件物品的价值都是唯一的 。</li></ul><p>请你返回一个二维数组 <code>ret</code>，其中$ ret[i] = [value_i, weight_i] <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>，</mtext></mrow><annotation encoding="application/x-tex">，</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">，</span></span></span></span> weight_i <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>是所有价值为</mtext></mrow><annotation encoding="application/x-tex">是所有价值为</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">是所有价值为</span></span></span></span> value_i $物品的重量之和 。</p><p>注意：<code>ret</code>应该按价值升序排序后返回。</p><h5 id="范围提示">范围提示</h5><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>&lt;</mo><mo>=</mo><mi>i</mi><mi>t</mi><mi>e</mi><mi>m</mi><mi>s</mi><mn>1.</mn><mi>l</mi><mi>e</mi><mi>n</mi><mi>g</mi><mi>t</mi><mi>h</mi><mo separator="true">,</mo><mi>i</mi><mi>t</mi><mi>e</mi><mi>m</mi><mi>s</mi><mn>2.</mn><mi>l</mi><mi>e</mi><mi>n</mi><mi>g</mi><mi>t</mi><mi>h</mi><mo>&lt;</mo><mo>=</mo><mn>1000</mn></mrow><annotation encoding="application/x-tex">1 &lt;= items1.length, items2.length &lt;= 1000</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6835em;vertical-align:-0.0391em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span><span class="mord">1.</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span><span class="mord">2.</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1000</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mi>t</mi><mi>e</mi><mi>m</mi><mi>s</mi><mn>1</mn><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mi mathvariant="normal">.</mi><mi>l</mi><mi>e</mi><mi>n</mi><mi>g</mi><mi>t</mi><mi>h</mi><mo>=</mo><mo>=</mo><mi>i</mi><mi>t</mi><mi>e</mi><mi>m</mi><mi>s</mi><mn>2</mn><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mi mathvariant="normal">.</mi><mi>l</mi><mi>e</mi><mi>n</mi><mi>g</mi><mi>t</mi><mi>h</mi><mo>=</mo><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">items1[i].length == items2[i].length == 2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span><span class="mord">1</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">==</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span><span class="mord">2</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">==</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>&lt;</mo><mo>=</mo><mi>v</mi><mi>a</mi><mi>l</mi><mi>u</mi><msub><mi>e</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>w</mi><mi>e</mi><mi>i</mi><mi>g</mi><mi>h</mi><msub><mi>t</mi><mi>i</mi></msub><mo>&lt;</mo><mo>=</mo><mn>1000</mn></mrow><annotation encoding="application/x-tex">1 &lt;= value_i, weight_i &lt;= 1000</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6835em;vertical-align:-0.0391em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">u</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">e</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">h</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1000</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mi>t</mi><mi>e</mi><mi>m</mi><mi>s</mi><mn>1</mn><mtext>中每个</mtext><mi>v</mi><mi>a</mi><mi>l</mi><mi>u</mi><msub><mi>e</mi><mi>i</mi></msub><mtext>都是唯一的</mtext></mrow><annotation encoding="application/x-tex">items1 中每个 value_i 都是 唯一的</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span><span class="mord">1</span><span class="mord cjk_fallback">中每个</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">u</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">都是唯一的</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mi>t</mi><mi>e</mi><mi>m</mi><mi>s</mi><mn>2</mn><mtext>中每个</mtext></mrow><annotation encoding="application/x-tex">items2 中每个</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span><span class="mord">2</span><span class="mord cjk_fallback">中每个</span></span></span></span> value_i <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>都是唯一的</mtext></mrow><annotation encoding="application/x-tex">都是 唯一的</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">都是唯一的</span></span></span></span></li></ul><h5 id="示例">示例</h5><blockquote><p>输入：items1 = [[1,1],[4,5],[3,8]], items2 = [[3,1],[1,5]]<br>输出：[[1,6],[3,9],[4,5]]<br>解释：<br>value = 1 的物品在 items1 中 weight = 1 ，在 items2 中 weight = 5 ，总重量为 1 + 5 = 6 。<br>value = 3 的物品再 items1 中 weight = 8 ，在 items2 中 weight = 1 ，总重量为 8 + 1 = 9 。<br>value = 4 的物品在 items1 中 weight = 5 ，总重量为 5 。<br>所以，我们返回 [[1,6],[3,9],[4,5]] 。</p></blockquote><blockquote><p>输入：items1 = [[1,1],[3,2],[2,3]], items2 = [[2,1],[3,2],[1,3]]<br>输出：[[1,4],[2,4],[3,4]]<br>解释：<br>value = 1 的物品在 items1 中 weight = 1 ，在 items2 中 weight = 3 ，总重量为 1 + 3 = 4 。<br>value = 2 的物品在 items1 中 weight = 3 ，在 items2 中 weight = 1 ，总重量为 3 + 1 = 4 。<br>value = 3 的物品在 items1 中 weight = 2 ，在 items2 中 weight = 2 ，总重量为 2 + 2 = 4 。<br>所以，我们返回 [[1,4],[2,4],[3,4]] 。</p></blockquote><blockquote><p>输入：items1 = [[1,3],[2,2]], items2 = [[7,1],[2,2],[1,4]]<br>输出：[[1,7],[2,4],[7,1]]<br>解释：<br>value = 1 的物品在 items1 中 weight = 3 ，在 items2 中 weight = 4 ，总重量为 3 + 4 = 7 。<br>value = 2 的物品在 items1 中 weight = 2 ，在 items2 中 weight = 2 ，总重量为 2 + 2 = 4 。<br>value = 7 的物品在 items2 中 weight = 1 ，总重量为 1 。<br>所以，我们返回 [[1,7],[2,4],[7,1]] 。</p></blockquote><h5 id="解题思路">解题思路</h5><p>题意是将所有具有同一价值的物品合并到一起，最后排序返回。将所有的物品的价值和重量存入<code>map</code>中，最后将<code>map</code>中每一个<code>key</code>，<code>value</code>合成一个<code>vector</code>存入目标类型中。由于<code>map</code>是有序的，直接返回该目标类型就ok。时间复杂度是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">O</mi><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mi>m</mi><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mi>m</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathcal{O}((n + m)\log(n + m))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathcal" style="margin-right:0.02778em;">O</span><span class="mopen">((</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mclose">))</span></span></span></span>，其中 n 和 m 分别是两个物品集合的大小。详情看代码。</p><h5 id="代码">代码</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">mergeSimilarItems</span>(vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&amp; items1, vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&amp; items2) &#123;</span><br><span class="line">        vector&lt; vector&lt;<span class="type">int</span>&gt; &gt; res;</span><br><span class="line">        map&lt;<span class="type">int</span>, <span class="type">int</span>&gt; mp;</span><br><span class="line">        <span class="keyword">for</span>(vector&lt;<span class="type">int</span>&gt; x : items1)&#123;</span><br><span class="line">            mp[x[<span class="number">0</span>]] += x[<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(vector&lt;<span class="type">int</span>&gt; x : items2)&#123;</span><br><span class="line">            mp[x[<span class="number">0</span>]] += x[<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> it = mp.<span class="built_in">begin</span>();it != mp.<span class="built_in">end</span>();it ++)&#123;</span><br><span class="line">            vector&lt;<span class="type">int</span>&gt; s;</span><br><span class="line">            s.<span class="built_in">push_back</span>(it-&gt;first);</span><br><span class="line">            s.<span class="built_in">push_back</span>(it-&gt;second);</span><br><span class="line">            res.<span class="built_in">push_back</span>(s);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">sort</span>(res.<span class="built_in">begin</span>(),res.<span class="built_in">end</span>());</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>Python的一行写法，由于每个元素都是一个长为 2 的列表，所以可以直接作为键值对传入 dict，然后通过 Counter 把值加起来。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">mergeSimilarItems</span>(<span class="params">self, items1: <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]], items2: <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]]</span>) -&gt; <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]]:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sorted</span>((Counter(<span class="built_in">dict</span>(items1)) + Counter(<span class="built_in">dict</span>(items2))).items())</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> 模拟 </tag>
            
            <tag> 排序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>任务调度器II</title>
      <link href="/2022/10/01/2365-%E4%BB%BB%E5%8A%A1%E8%B0%83%E5%BA%A6%E5%99%A8%20II/"/>
      <url>/2022/10/01/2365-%E4%BB%BB%E5%8A%A1%E8%B0%83%E5%BA%A6%E5%99%A8%20II/</url>
      
        <content type="html"><![CDATA[<h4 id="2365-任务调度器-II">2365. 任务调度器 II</h4><h5 id="题目"><a href="https://leetcode.cn/problems/task-scheduler-ii/">题目</a></h5><p>给你一个下标从 <strong>0</strong> 开始的正整数数组 <code>tasks</code> ，表示需要 <strong>按顺序</strong> 完成的任务，其中 <code>tasks[i]</code> 表示第 <code>i</code> 件任务的 <strong>类型</strong> 。同时给你一个正整数 <code>space</code> ，表示一个任务完成<strong>后</strong>，另一个 <strong>相同</strong> 类型任务完成前需要间隔的 <strong>最少</strong> 天数。在所有任务完成前的每一天，你都必须进行以下两种操作中的一种：</p><ul><li><p>完成 <code>tasks</code> 中的下一个任务</p></li><li><p>休息一天</p></li></ul><p>请你返回完成所有任务所需的 <strong>最少</strong> 天数。</p><h5 id="范围提示">范围提示</h5><ul><li><code>$1 &lt;= tasks.length &lt;= 10^5$</code></li><li><code>$1 &lt;= tasks[i] &lt;= 10^9$</code></li><li><code>1 &lt;= space &lt;= tasks.length</code></li></ul><h5 id="示例">示例</h5><blockquote><p>输入：tasks = [1,2,1,2,3,1], space = 3<br>输出：9<br>解释：<br>9 天完成所有任务的一种方法是：<br>第 1 天：完成任务 0 。<br>第 2 天：完成任务 1 。<br>第 3 天：休息。<br>第 4 天：休息。<br>第 5 天：完成任务 2 。<br>第 6 天：完成任务 3 。<br>第 7 天：休息。<br>第 8 天：完成任务 4 。<br>第 9 天：完成任务 5 。<br>可以证明无法少于 9 天完成所有任务。</p></blockquote><blockquote><p>输入：tasks = [5,8,8,5], space = 2<br>输出：6<br>解释：<br>6 天完成所有任务的一种方法是：<br>第 1 天：完成任务 0 。<br>第 2 天：完成任务 1 。<br>第 3 天：休息。<br>第 4 天：休息。<br>第 5 天：完成任务 2 。<br>第 6 天：完成任务 3 。<br>可以证明无法少于 6 天完成所有任务。</p></blockquote><h5 id="解题思路">解题思路</h5><p>维护一个 unordered_map&lt;int, int&gt; mp，mp[x] 表示类型为 x 的任务最近一次的结束时间。按顺序枚举所有任务，设当前任务类型为 x，执行当前任务之前已经经过了 t 的时间，那么：</p><ul><li>若 t - mp[x] &gt;= space，说明冷却时间已经结束，可以直接执行任务。t += 1，并更新 mp[x] = t。</li><li>若 t - mp[x] &lt; space，说明冷却时间还未结束。根据题意，此时最早能执行类型 x 任务的时间是 mp[x] + space + 1。因此 t = mp[x] + space + 1，并更新 mp[x] = t。</li></ul><h5 id="代码">代码</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">long</span> <span class="type">long</span> <span class="title">taskSchedulerII</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; tasks, <span class="type">int</span> space)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n = tasks.<span class="built_in">size</span>();</span><br><span class="line">        unordered_map&lt;<span class="type">int</span>, <span class="type">long</span> <span class="type">long</span>&gt; mp;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> x : tasks) mp[x] = <span class="number">-1e18</span>;</span><br><span class="line">        <span class="type">long</span> <span class="type">long</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="type">long</span> <span class="type">long</span> &amp;last = mp[tasks[i]];</span><br><span class="line">            <span class="keyword">if</span> (ans - last &gt;= space) ans++, last = ans;</span><br><span class="line">            <span class="keyword">else</span> ans = last + space + <span class="number">1</span>, last = ans;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">long</span> <span class="type">long</span> <span class="title">taskSchedulerII</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; tasks, <span class="type">int</span> space)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(tasks.<span class="built_in">size</span>() == <span class="number">1</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        map&lt;<span class="type">int</span>,<span class="type">long</span> <span class="type">long</span>&gt; mp;</span><br><span class="line">        <span class="type">long</span> <span class="type">long</span> day = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; tasks.<span class="built_in">size</span>();i ++)</span><br><span class="line">        &#123;</span><br><span class="line">            day ++;</span><br><span class="line">            <span class="keyword">if</span>(mp.<span class="built_in">find</span>(tasks[i]) == mp.<span class="built_in">end</span>())&#123; mp[tasks[i]] = day;&#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(space &gt;= day - mp[tasks[i]])&#123;</span><br><span class="line">                    day = (<span class="type">long</span> <span class="type">long</span>)space + mp[tasks[i]] + <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                mp[tasks[i]] = day;  <span class="comment">//1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> day;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">[450,610,68,810,992,306,336,907,6,288,336,985,265,828,737,771,508,210,907,973,336,654,766,783,654,508,654,291,926,839,352,210,336,744,6,771,450,481,680,610,661,15,985,420,810,737,19,837,737,811,338,737,449,741,335,596,541,948,993,629,341,839,741,674,667,992,771,929,237,664,265,795,795,839,341,541,811,859,811,596,582,771,948,541,514,691,306,462,907,486,992,115]</span></span><br><span class="line"><span class="comment">25</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">这份代码是自己写的，一开始bug出现在1处代码，原本写在if条件括号内的是错误的。出现这个问题的原因是每次出现有相同的任务相隔超过space的就没有重置day。</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> 贪心 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>矩阵中的局部最大值</title>
      <link href="/2022/10/01/2373-%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E5%B1%80%E9%83%A8%E6%9C%80%E5%A4%A7%E5%80%BC/"/>
      <url>/2022/10/01/2373-%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E5%B1%80%E9%83%A8%E6%9C%80%E5%A4%A7%E5%80%BC/</url>
      
        <content type="html"><![CDATA[<h4 id="6148-矩阵中的局部最大值">6148. 矩阵中的局部最大值</h4><h5 id="题目"><a href="https://leetcode.cn/problems/largest-local-values-in-a-matrix/">题目</a></h5><p>给你一个大小为 <code>n x n</code> 的整数矩阵 <code>grid</code> 。生成一个大小为 <code>(n - 2) x (n - 2)</code> 的整数矩阵  maxLocal ，并满足：<code>maxLocal[i][j]</code> 等于 <code>grid</code> 中以 <code>i + 1</code> 行和 <code>j + 1</code> 列为中心的 <code>3 x 3</code> 矩阵中的 <strong>最大值</strong> 。换句话说，我们希望找出 grid 中每个 3 x 3 矩阵中的最大值。</p><p>返回生成的矩阵。</p><h5 id="范围提示">范围提示</h5><ul><li><code>n == grid.length == grid[i].length</code></li><li><code>3 &lt;= n &lt;= 100</code></li><li><code>1 &lt;= grid[i][j] &lt;= 100</code></li></ul><h5 id="示例">示例</h5><blockquote><p>输入：grid = [[9,9,8,1],[5,6,2,6],[8,2,6,4],[6,2,2,2]]<br>输出：[[9,9],[8,6]]<br>解释：原矩阵和生成的矩阵如上图所示。<br>注意，生成的矩阵中，每个值都对应 grid 中一个相接的 3 x 3 矩阵的最大值。</p></blockquote><blockquote><p>输入：grid = [[1,1,1,1,1],[1,1,1,1,1],[1,1,2,1,1],[1,1,1,1,1],[1,1,1,1,1]]<br>输出：[[2,2,2],[2,2,2],[2,2,2]]<br>解释：注意，2 包含在 grid 中每个 3 x 3 的矩阵中。</p></blockquote><h5 id="解题思路">解题思路</h5><p>这是一道模拟题，每次遍历3*3的矩阵算出最大值，最后返回此生成新的矩阵。</p><h5 id="代码">代码</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">largestLocal</span>(vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&amp; grid) &#123;</span><br><span class="line">        vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; res;</span><br><span class="line">        <span class="type">int</span> len = grid.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; len - <span class="number">2</span>;i ++)&#123;</span><br><span class="line">            vector&lt;<span class="type">int</span>&gt;  temp;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>;j &lt; len - <span class="number">2</span>;j ++)&#123;</span><br><span class="line">                <span class="type">int</span> ma = <span class="number">-1</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> m = <span class="number">0</span>;m &lt; <span class="number">3</span>;m ++)&#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="type">int</span> n = <span class="number">0</span>;n &lt; <span class="number">3</span>;n ++)&#123;</span><br><span class="line">                        ma = <span class="built_in">max</span>(ma, grid[i+m][j+n]);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                temp.<span class="built_in">push_back</span>(ma);</span><br><span class="line">            &#125;</span><br><span class="line">            res.<span class="built_in">push_back</span>(temp);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> 模拟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>求解方程</title>
      <link href="/2022/10/01/640-%E6%B1%82%E8%A7%A3%E6%96%B9%E7%A8%8B/"/>
      <url>/2022/10/01/640-%E6%B1%82%E8%A7%A3%E6%96%B9%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h4 id="640-求解方程">640. 求解方程</h4><h5 id="题目"><a href="https://leetcode.cn/problems/solve-the-equation/">题目</a></h5><p>求解一个给定的方程，将<code>x</code>以字符串 <code>&quot;x=#value&quot;</code> 的形式返回。该方程仅包含 <code>'+'</code> ， <code>'-'</code> 操作，变量 <code>x</code> 和其对应系数。如果方程没有解，请返回 <code>&quot;No solution&quot;</code> 。如果方程有无限解，则返回 <code>&quot;Infinite solutions&quot;</code> 。题目保证，如果方程中只有一个解，则 <code>'x'</code> 的值是一个整数。</p><h5 id="范围提示">范围提示</h5><ul><li><code>3 &lt;= equation.length &lt;= 1000</code></li><li><code>equation 只有一个 '='</code></li><li><code>equation 方程由整数组成，其绝对值在 [0, 100] 范围内，不含前导零和变量 'x' </code></li></ul><h5 id="示例">示例</h5><blockquote><p>输入: equation = “x+5-3+x=6+x-2”<br>输出: “x=2”</p></blockquote><blockquote><p>输入: equation = “x=x”<br>输出: “Infinite solutions”</p></blockquote><blockquote><p>输入: equation = “2x=x”<br>输出: “x=0”</p></blockquote><h5 id="解题思路">解题思路</h5><p>模拟题。将方程的两边进行合并，带有x项的合并到一起，常数项的合并到一起。最后将常数项值除以x项的系数(所有的数据能保证整除，题目要求的)，得到就是我们所求的值。注意有几个坑：x前面不带任何系数默认为1；注意<code>&quot;0x=0&quot;</code>这个方程式是无穷组解的，需要特判；</p><h5 id="代码">代码</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">string <span class="title">solveEquation</span><span class="params">(string equation)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> final_x = <span class="number">0</span>,final_val = <span class="number">0</span>,equal = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; equation.<span class="built_in">size</span>();i ++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(equation[i] == <span class="string">&#x27;=&#x27;</span>) equal = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> signal = <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> temp = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; equal;i ++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(equation[i] == <span class="string">&#x27;+&#x27;</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(temp) final_val += signal*temp;</span><br><span class="line">                temp = <span class="number">0</span>;</span><br><span class="line">                signal = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(equation[i] == <span class="string">&#x27;-&#x27;</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(temp) final_val += signal*temp;</span><br><span class="line">                signal = <span class="number">-1</span>;</span><br><span class="line">                temp = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(equation[i] == <span class="string">&#x27;x&#x27;</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(!temp&amp;&amp;(i == <span class="number">0</span> || equation[i<span class="number">-1</span>]==<span class="string">&#x27;+&#x27;</span>||equation[i<span class="number">-1</span>]==<span class="string">&#x27;-&#x27;</span>)) temp = <span class="number">1</span>;</span><br><span class="line">                <span class="comment">//cout&lt;&lt;temp&lt;&lt;signal&lt;&lt;endl;</span></span><br><span class="line">                final_x += signal*temp;</span><br><span class="line">                temp = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            temp = temp * <span class="number">10</span> + (equation[i]-<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(equation[equal - <span class="number">1</span>] != <span class="string">&#x27;x&#x27;</span>)&#123;</span><br><span class="line">            final_val += signal*temp;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        signal = <span class="number">-1</span>;</span><br><span class="line">        temp = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = equal+<span class="number">1</span>;i &lt; equation.<span class="built_in">size</span>();i ++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(equation[i] == <span class="string">&#x27;+&#x27;</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(temp) final_val += signal*temp;</span><br><span class="line">                temp = <span class="number">0</span>;</span><br><span class="line">                signal = <span class="number">-1</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(equation[i] == <span class="string">&#x27;-&#x27;</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(temp) final_val += signal*temp;</span><br><span class="line">                signal = <span class="number">1</span>;</span><br><span class="line">                temp = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(equation[i] == <span class="string">&#x27;x&#x27;</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(!temp&amp;&amp;(i == equal+<span class="number">1</span> || equation[i<span class="number">-1</span>]==<span class="string">&#x27;+&#x27;</span>||equation[i<span class="number">-1</span>]==<span class="string">&#x27;-&#x27;</span>)) temp = <span class="number">1</span>;</span><br><span class="line">                final_x += signal*temp;</span><br><span class="line">                temp = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            temp = temp * <span class="number">10</span> + (equation[i]-<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(equation[equation.<span class="built_in">size</span>() - <span class="number">1</span>] != <span class="string">&#x27;x&#x27;</span>)&#123;</span><br><span class="line">            final_val += signal*temp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//cout&lt;&lt;final_x &lt;&lt; final_val&lt;&lt;endl;</span></span><br><span class="line">        <span class="keyword">if</span>(final_val == <span class="number">0</span> &amp;&amp; final_x == <span class="number">0</span>) <span class="keyword">return</span> <span class="string">&quot;Infinite solutions&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(final_x == <span class="number">0</span>) <span class="keyword">return</span> <span class="string">&quot;No solution&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;x=&quot;</span>+<span class="built_in">to_string</span>(-final_val/final_x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> 模拟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计坏数对的数目</title>
      <link href="/2022/10/01/2364-%E7%BB%9F%E8%AE%A1%E5%9D%8F%E6%95%B0%E5%AF%B9%E7%9A%84%E6%95%B0%E7%9B%AE/"/>
      <url>/2022/10/01/2364-%E7%BB%9F%E8%AE%A1%E5%9D%8F%E6%95%B0%E5%AF%B9%E7%9A%84%E6%95%B0%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<h4 id="2364-统计坏数对的数目">2364. 统计坏数对的数目</h4><h5 id="题目"><a href="https://leetcode.cn/problems/count-number-of-bad-pairs/">题目</a></h5><p>给你一个下标从 <code>0</code> 开始的整数数组 <code>nums</code> 。如果<code>i &lt; j</code>且 <code>j - i != nums[j] - nums[i]</code> ，那么我们称 <code>(i, j)</code> 是一个坏数对 。</p><p>请你返回 <code>nums</code> 中 坏数对的总数目。</p><h5 id="范围提示">范围提示</h5><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>&lt;</mo><mo>=</mo><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi><mi mathvariant="normal">.</mi><mi>l</mi><mi>e</mi><mi>n</mi><mi>g</mi><mi>t</mi><mi>h</mi><mo>&lt;</mo><mo>=</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">1 &lt;= nums.length &lt;= 10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6835em;vertical-align:-0.0391em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>&lt;</mo><mo>=</mo><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>&lt;</mo><mo>=</mo><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup></mrow><annotation encoding="application/x-tex">1 &lt;= nums[i] &lt;= 10^9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6835em;vertical-align:-0.0391em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span></span></span></span></li></ul><h5 id="示例">示例</h5><blockquote><p>输入：nums = [4,1,3,3]<br>输出：5<br>解释：数对 (0, 1) 是坏数对，因为 1 - 0 != 1 - 4 。<br>数对 (0, 2) 是坏数对，因为 2 - 0 != 3 - 4, 2 != -1 。<br>数对 (0, 3) 是坏数对，因为 3 - 0 != 3 - 4, 3 != -1 。<br>数对 (1, 2) 是坏数对，因为 2 - 1 != 3 - 1, 1 != 2 。<br>数对 (2, 3) 是坏数对，因为 3 - 2 != 3 - 3, 1 != 0 。<br>总共有 5 个坏数对，所以我们返回 5 。</p></blockquote><blockquote><p>输入：nums = [1,2,3,4,5]<br>输出：0<br>解释：没有坏数对。</p></blockquote><h5 id="解题思路">解题思路</h5><p>将题目中的式子变形得 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>−</mo><mi>i</mi><mo mathvariant="normal">≠</mo><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>−</mo><mi>j</mi></mrow><annotation encoding="application/x-tex">nums[i]-i \ne nums[j]-j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span>.</p><p>为了方便计算，我们可以算出满足<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>−</mo><mi>i</mi><mo>=</mo><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>−</mo><mi>j</mi></mrow><annotation encoding="application/x-tex">nums[i]−i=nums[j]−j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span>的下标对数，这可以一边遍历，一边统计。然后用所有对数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mi>n</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{n(n-1)}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.355em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 减去统计结果，即为答案。</p><p><strong>（本题的解题思路并没有直接想出来，看到一部分别人的思路提示才写出整个代码）</strong></p><h5 id="代码">代码</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">countBadPairs</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        n, cnt = <span class="built_in">len</span>(nums), Counter()</span><br><span class="line">        ans = n * (n - <span class="number">1</span>) // <span class="number">2</span></span><br><span class="line">        <span class="keyword">for</span> i, num <span class="keyword">in</span> <span class="built_in">enumerate</span>(nums):</span><br><span class="line">            ans -= cnt[num - i]  <span class="comment"># 有 cnt[num - i] 个相同的</span></span><br><span class="line">            cnt[num - i] += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">long</span> <span class="type">long</span> <span class="title">countBadPairs</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="type">long</span> <span class="type">long</span> s = <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> len = nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span>(len &lt; <span class="number">2</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        vector&lt;<span class="type">int</span>&gt; tmp;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; len;i ++)&#123;</span><br><span class="line">            tmp.<span class="built_in">push_back</span>(nums[i]-i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">sort</span>(tmp.<span class="built_in">begin</span>(), tmp.<span class="built_in">end</span>());</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt; len;i ++)&#123;</span><br><span class="line">            <span class="type">long</span> <span class="type">long</span> c = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span>(i &lt; len &amp;&amp; tmp[i] == tmp[i - <span class="number">1</span>])&#123;</span><br><span class="line">                i++;</span><br><span class="line">                c++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//cout&lt;&lt;c&lt;&lt;endl;</span></span><br><span class="line">            <span class="keyword">if</span>(c&gt;<span class="number">1</span>)&#123;</span><br><span class="line">                s += ((c<span class="number">-1</span>)*c/<span class="number">2</span>);</span><br><span class="line">                i--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (((<span class="type">long</span> <span class="type">long</span>)(len<span class="number">-1</span>))*(<span class="type">long</span> <span class="type">long</span>)(len))/<span class="number">2</span>-s;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> math </tag>
            
            <tag> 排序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算术三元组的数目</title>
      <link href="/2022/10/01/2367-%E7%AE%97%E6%9C%AF%E4%B8%89%E5%85%83%E7%BB%84%E7%9A%84%E6%95%B0%E7%9B%AE/"/>
      <url>/2022/10/01/2367-%E7%AE%97%E6%9C%AF%E4%B8%89%E5%85%83%E7%BB%84%E7%9A%84%E6%95%B0%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<h4 id="2367-算术三元组的数目">2367. 算术三元组的数目</h4><h5 id="题目"><a href="https://leetcode.cn/problems/number-of-arithmetic-triplets">题目</a></h5><p>给你一个下标从 <code>0</code> 开始、<strong>严格递增</strong> 的整数数组 <code>nums</code> 和一个正整数 <code>diff</code> 。如果满足下述全部条件，则三元组 <code>(i, j, k)</code> 就是一个 <strong>算术三元组</strong> ：</p><ul><li><code>i &lt; j &lt; k </code></li><li><code>nums[j] - nums[i] == diff</code></li><li><code>nums[k] - nums[j] == diff</code></li></ul><p>返回不同 <strong>算术三元组</strong> 的数目。</p><h5 id="范围提示">范围提示</h5><ul><li><code>3 &lt;= nums.length &lt;= 200</code></li><li><code>0 &lt;= nums[i] &lt;= 200</code></li><li><code>1 &lt;= diff &lt;= 50</code></li><li><code>nums</code> <strong>严格</strong> 递增</li></ul><h5 id="示例">示例</h5><blockquote><p>输入：nums = [0,1,4,6,7,10], diff = 3<br>输出：2<br>解释：<br>(1, 2, 4) 是算术三元组：7 - 4 == 3 且 4 - 1 == 3 。<br>(2, 4, 5) 是算术三元组：10 - 7 == 3 且 7 - 4 == 3 。</p></blockquote><blockquote><p>输入：nums = [4,5,6,7,8,9], diff = 2<br>输出：2<br>解释：<br>(0, 2, 4) 是算术三元组：8 - 6 == 2 且 6 - 4 == 2 。<br>(1, 3, 5) 是算术三元组：9 - 7 == 2 且 7 - 5 == 2 。</p></blockquote><h5 id="解题思路">解题思路</h5><p>思路一：用visit数组记录每个元素，然后遍历 <code>nums</code>，看 <code>nums[j]−diff</code> 和 <code>nums[j]+diff</code> 是否都在visit数组中。</p><p>思路二：三指针。由于 <code>nums</code> 是严格递增的，遍历 <code>nums[k]</code> 时，<code>i</code> 和 <code>j</code> 只增不减，因此可以用三个指针来实现判断逻辑。</p><h5 id="代码">代码</h5><p>思路一</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">arithmeticTriplets</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> diff)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> vis[<span class="number">205</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">        <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; nums.<span class="built_in">size</span>();i ++)&#123;</span><br><span class="line">            vis[nums[i]]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; nums.<span class="built_in">size</span>();i ++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[i]+diff&lt;=<span class="number">200</span>&amp;&amp;nums[i]+<span class="number">2</span>*diff&lt;=<span class="number">200</span>&amp;&amp;vis[nums[i]+diff]&amp;&amp;vis[nums[i]+diff*<span class="number">2</span>]) res++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>思路二</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">arithmeticTriplets</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>], diff: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        ans, i, j = <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> nums:</span><br><span class="line">            <span class="keyword">while</span> nums[j] + diff &lt; x:</span><br><span class="line">                j += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> nums[j] + diff &gt; x:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">while</span> nums[i] + diff * <span class="number">2</span> &lt; x:</span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> nums[i] + diff * <span class="number">2</span> == x:</span><br><span class="line">                ans += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> 贪心 </tag>
            
            <tag> 三指针 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最多能完成排序的块II</title>
      <link href="/2022/10/01/768-%E6%9C%80%E5%A4%9A%E8%83%BD%E5%AE%8C%E6%88%90%E6%8E%92%E5%BA%8F%E7%9A%84%E5%9D%97%20II/"/>
      <url>/2022/10/01/768-%E6%9C%80%E5%A4%9A%E8%83%BD%E5%AE%8C%E6%88%90%E6%8E%92%E5%BA%8F%E7%9A%84%E5%9D%97%20II/</url>
      
        <content type="html"><![CDATA[<h4 id="768-最多能完成排序的块-II">768. 最多能完成排序的块 II</h4><h5 id="题目"><a href="https://leetcode.cn/problems/max-chunks-to-make-sorted-ii">题目</a></h5><p>这个问题和“最多能完成排序的块”相似，但给定数组中的元素可以重复，输入数组最大长度为<code>2000</code>，其中的元素最大为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>8</mn></msup></mrow><annotation encoding="application/x-tex">10^8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span></span></span></span>。arr是一个可能包含<strong>重复元素</strong>的整数数组，我们将这个数组分割成几个“块”，并将这些块分别进行排序。之后再连接起来，使得连接的结果和按升序排序后的原数组相同。</p><p>我们最多能将数组分成多少块？</p><h5 id="范围提示">范围提示</h5><ul><li><code>arr</code>的长度在<code>[1, 2000]</code>之间。</li><li><code>arr[i]</code>的大小在[0, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>8</mn></msup></mrow><annotation encoding="application/x-tex">10^8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span></span></span></span>]之间。</li></ul><h5 id="示例">示例</h5><blockquote><p>输入: arr = [5,4,3,2,1]<br>输出: 1<br>解释:<br>将数组分成2块或者更多块，都无法得到所需的结果。<br>例如，分成 [5, 4], [3, 2, 1] 的结果是 [4, 5, 1, 2, 3]，这不是有序的数组。</p></blockquote><blockquote><p>输入: arr = [2,1,3,4,4]<br>输出: 4<br>解释:<br>我们可以把它分成两块，例如 [2, 1], [3, 4, 4]。<br>然而，分成 [2, 1], [3], [4], [4] 可以得到最多的块数。</p></blockquote><h5 id="解题思路">解题思路</h5><p>首先我这道题目拿到之后一脸懵的状态，然后做了最多能完成排序的块第一个版本，有点思路写出来了，但是这个第二个版本拓宽了一个条件，就不会做了，于是参考这个大佬的<a href="https://leetcode.cn/problems/max-chunks-to-make-sorted-ii/solution/zui-duo-neng-wan-cheng-pai-xu-de-kuai-ii-deng-jie-/">思路</a>。</p><p>先定义一个排序块，设此块中最大数字为 head, 若此块后面的所有数字都 &gt;= head ，则此块为排序块。并且最短长度为 1，即单个元素可以独立看作一个排序块。以下有两种思路：</p><p>思路一：</p><ul><li>设定双指针指向数组头部，判断双指针内数字集合形成的块是否满足排序块条件，并尽量使窗口最小(贪心)。</li><li>每次形成排序块时计数，并越过此排序块重新指定双指针位置，重复以上步骤直到划分完整个数组。</li><li>此思路容易理解，但每次确定 1 个块都需要遍历整个数组，在某些极端情况（例如如 [1,2,3,4,5] ）时间复杂度达到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>N</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(N^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</li></ul><p>思路二(本题采用的方法)：</p><ul><li><p>判断是否是排序块只需要用到该块的 <strong>元素最大值</strong> head 。我们联想到，是否可以遍历一遍数组 arr ，动态判断到目前数字 num 为止最多能分出多少排序块，并保存每个排序块的最大值 head 。每遍历到下个数字 num ，动态判断前面所有的排序块是否成立，并更新所有排序块：</p><ul><li>当某排序块 num &lt; head ：将此排序块[A]与 num 合并，形成新排序块[A | num]，最大值仍为 head ；</li><li>当某排序块 num &gt;= head ：原排序块保留，并新加排序块 [num] 。</li></ul></li><li><p>而对于整个数组的排序块，其 head 大小是从左到右递增的。例如：数组 [1,2,1,3,4,7,5,6] 最多可划分为 [1∣2,1∣3∣4∣7,5,6] ，head 为 [1,2,3,4,7] 。因此，若给数组尾部加入一个随机正整数 n ，尾部的排序块更容易被合并(最先满足 num &lt; head)。当 n 值较小时(小于前面多个排序块的 head)，则需按尾部到首部的顺序合并多个排序块。</p></li><li><p>这种先入(首部到尾部添加排序块)后出(尾部到首部判断并合并排序块)的特性，让我们联想到使用 <strong>栈</strong> 保存排序块最大值 head 。在遍历过程中，通过维护栈的 head 序列，实现排序块的动态更新。</p></li><li><p>最后栈的大小就是所求的值</p></li></ul><h5 id="代码">代码</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">maxChunksToSorted</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; arr)</span> </span>&#123;</span><br><span class="line">        stack&lt;<span class="type">int</span>&gt; temp;</span><br><span class="line">        <span class="keyword">while</span>(!temp.<span class="built_in">empty</span>())&#123;</span><br><span class="line">            temp.<span class="built_in">pop</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> x : arr)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!temp.<span class="built_in">empty</span>() &amp;&amp; x &lt; temp.<span class="built_in">top</span>())&#123;</span><br><span class="line">                <span class="type">int</span> last = temp.<span class="built_in">top</span>();</span><br><span class="line">                temp.<span class="built_in">pop</span>();</span><br><span class="line">                <span class="keyword">while</span>(!temp.<span class="built_in">empty</span>() &amp;&amp; x &lt; temp.<span class="built_in">top</span>()) temp.<span class="built_in">pop</span>();</span><br><span class="line">                temp.<span class="built_in">push</span>(last);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                temp.<span class="built_in">push</span>(x);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> temp.<span class="built_in">size</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> 贪心 </tag>
            
            <tag> 栈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>特殊的二进制序列</title>
      <link href="/2022/10/01/761-%E7%89%B9%E6%AE%8A%E7%9A%84%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%BA%8F%E5%88%97/"/>
      <url>/2022/10/01/761-%E7%89%B9%E6%AE%8A%E7%9A%84%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%BA%8F%E5%88%97/</url>
      
        <content type="html"><![CDATA[<h4 id="761-特殊的二进制序列">761.特殊的二进制序列</h4><h5 id="题目"><a href="https://leetcode.cn/problems/special-binary-string">题目</a></h5><p>特殊的二进制序列是具有以下两个性质的二进制序列：</p><ul><li>0 的数量与 1 的数量相等。</li><li>二进制序列的每一个前缀码中 1 的数量要大于等于 0 的数量。</li></ul><p>给定一个特殊的二进制序列 S，以字符串形式表示。定义一个操作 为首先选择 S 的两个连续且非空的特殊的子串，然后将它们交换。（两个子串为连续的当且仅当第一个子串的最后一个字符恰好为第二个子串的第一个字符的前一个字符。)</p><p>在任意次数的操作之后，交换后的字符串按照字典序排列的最大的结果是什么？</p><h5 id="范围提示">范围提示</h5><ul><li><code>S</code> 的长度不超过 <code>50</code>。</li><li><code>S</code> 保证为一个满足上述定义的<em><strong>特殊</strong></em> 的二进制序列。</li></ul><h5 id="示例">示例</h5><blockquote><p>输入: S = “11011000”<br>输出: “11100100”<br>解释:<br>将子串 “10” （在S[1]出现） 和 “1100” （在S[3]出现）进行交换。<br>这是在进行若干次操作后按字典序排列最大的结果。</p></blockquote><h5 id="解题思路">解题思路</h5><p>本题的解题思路就是<code>dfs</code>深搜。今天这道题题意不好弄明白的，我们可以看成是有效的括号，<code>1</code>看成<code>(</code>，<code>0</code>看成<code>)</code>。比如，“1100” 可以看做是 <code>&quot;(())&quot;</code>，这样就比较好理解了。题目的目标是通过一系列操作(有效的括号子串交换位置)之后让左括号尽量在右括号前面。比如，对于 <code>&quot;(()(()))&quot;</code>，我们可以把中间 <code>&quot;()&quot;</code> 和 <code>&quot;(())&quot;</code> 交换之后变成 <code>&quot;((())())&quot;</code>，以满足上述规则。</p><p>那么代码思路就是：遍历整个字符串，找到它的有效子串，再把这些子串降序排列。但是这里在找到这些子串之后，子串内部也可以使用相同的规则去做处理，即使用递归。</p><h5 id="代码">代码</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">string <span class="title">makeLargestSpecial</span><span class="params">(string s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">dfs</span>(s, <span class="number">0</span>, s.<span class="built_in">size</span>() - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">string <span class="title">dfs</span><span class="params">(string s, <span class="type">int</span> start, <span class="type">int</span> end)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(start &gt; end) <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="type">int</span> pre = start,c = <span class="number">0</span>;</span><br><span class="line">        vector&lt;string&gt; res;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = start;i &lt;= end;i ++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i] == <span class="string">&#x27;1&#x27;</span>) c++;</span><br><span class="line">            <span class="keyword">else</span> c--;</span><br><span class="line">            <span class="keyword">if</span>(c == <span class="number">0</span>)&#123;</span><br><span class="line">                res.<span class="built_in">push_back</span>(<span class="string">&quot;1&quot;</span> + <span class="built_in">dfs</span>(s, pre + <span class="number">1</span>, i - <span class="number">1</span>) + <span class="string">&quot;0&quot;</span>);</span><br><span class="line">                pre = i + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">sort</span>(res.<span class="built_in">begin</span>(), res.<span class="built_in">end</span>(), greater&lt;string&gt;&#123;&#125;);</span><br><span class="line">        string k = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span>(string x : res) k += x;</span><br><span class="line">        <span class="keyword">return</span> k;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//&quot;1110010101010011100011010010&quot;</span></span><br><span class="line"><span class="comment">//&quot;111101000011101010001100&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> dfs </tag>
            
            <tag> 括号匹配 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>受限条件下可到达节点的数目</title>
      <link href="/2022/10/01/2368-%E5%8F%97%E9%99%90%E6%9D%A1%E4%BB%B6%E4%B8%8B%E5%8F%AF%E5%88%B0%E8%BE%BE%E8%8A%82%E7%82%B9%E7%9A%84%E6%95%B0%E7%9B%AE/"/>
      <url>/2022/10/01/2368-%E5%8F%97%E9%99%90%E6%9D%A1%E4%BB%B6%E4%B8%8B%E5%8F%AF%E5%88%B0%E8%BE%BE%E8%8A%82%E7%82%B9%E7%9A%84%E6%95%B0%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<h4 id="2368-受限条件下可到达节点的数目">2368. 受限条件下可到达节点的数目</h4><h5 id="题目"><a href="https://leetcode.cn/problems/reachable-nodes-with-restrictions">题目</a></h5><p>现有一棵由 <code>n</code> 个节点组成的无向树，节点编号从 <code>0</code> 到 <code>n - 1</code> ，共有 <code>n - 1</code> 条边。</p><p>给你一个二维整数数组 <code>edges</code> ，长度为 <code>n - 1</code> ，其中 <code>$edges[i] = [a_i, b_i]$</code> 表示树中节点 <code>$a_i$</code> 和 <code>$b_i$</code> 之间存在一条边。另给你一个整数数组 <code>restricted</code> 表示 <strong>受限</strong> 节点。</p><p>在不访问受限节点的前提下，返回你可以从节点 <code>0</code> 到达的 <strong>最多</strong> 节点数目。</p><p>注意，节点 <code>0</code> <strong>不</strong> 会标记为受限节点。</p><h5 id="范围提示">范围提示</h5><ul><li><code>$2 &lt;= n &lt;= 10^5$</code></li><li><code>edges.length == n - 1</code></li><li><code>edges[i].length == 2</code></li><li><code>$0 &lt;= a_i, b_i &lt; n$</code></li><li><code>$a_i != b_i$</code></li><li><code>edges</code> 表示一棵有效的树</li><li><code>1 &lt;= restricted.length &lt; n</code></li><li><code>1 &lt;= restricted[i] &lt; n</code></li><li><code>restricted</code> 中的所有值 <strong>互不相同</strong></li></ul><h5 id="示例">示例</h5><p><img src="https://imgbed.link/file/1375" alt=""></p><blockquote><p>输入：n = 7, edges = [[0,1],[1,2],[3,1],[4,0],[0,5],[5,6]], restricted = [4,5]<br>输出：4<br>解释：上图所示正是这棵树。<br>在不访问受限节点的前提下，只有节点 [0,1,2,3] 可以从节点 0 到达。</p></blockquote><p><img src="https://imgbed.link/file/1376" alt=""></p><blockquote><p>输入：n = 7, edges = [[0,1],[0,2],[0,5],[0,4],[3,2],[6,5]], restricted = [4,2,1]<br>输出：3<br>解释：上图所示正是这棵树。<br>在不访问受限节点的前提下，只有节点 [0,5,6] 可以从节点 0 到达。</p></blockquote><h5 id="解题思路">解题思路</h5><p>首先将图存入一个vector的数组(相当于二维数组)中，然后将限制点全部标记为<code>visited[i]=1</code>，从0节点开始遍历整个图，即进行<code>dfs</code>深度优先搜索，搜索到一个节点就+1，最后返回能访问到的节点个数</p><h5 id="代码">代码</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; a[<span class="number">100005</span>];</span><br><span class="line">    <span class="type">int</span> visited[<span class="number">100005</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> start)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!visited[start])&#123;</span><br><span class="line">            count++;</span><br><span class="line">            visited[start]=<span class="number">1</span>;</span><br><span class="line">            <span class="comment">//cout&lt;&lt;start&lt;&lt;endl;</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; a[start].<span class="built_in">size</span>();i ++)&#123;</span><br><span class="line">                <span class="built_in">dfs</span>(a[start][i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">reachableNodes</span><span class="params">(<span class="type">int</span> n, vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&amp; edges, vector&lt;<span class="type">int</span>&gt;&amp; restricted)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> x : restricted) visited[x]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; edges.<span class="built_in">size</span>();i ++)&#123;</span><br><span class="line">            a[edges[i][<span class="number">0</span>]].<span class="built_in">push_back</span>(edges[i][<span class="number">1</span>]);</span><br><span class="line">            a[edges[i][<span class="number">1</span>]].<span class="built_in">push_back</span>(edges[i][<span class="number">0</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">dfs</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> dfs </tag>
            
            <tag> 图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最多能完成排序的块</title>
      <link href="/2022/10/01/769-%E6%9C%80%E5%A4%9A%E8%83%BD%E5%AE%8C%E6%88%90%E6%8E%92%E5%BA%8F%E7%9A%84%E5%9D%97/"/>
      <url>/2022/10/01/769-%E6%9C%80%E5%A4%9A%E8%83%BD%E5%AE%8C%E6%88%90%E6%8E%92%E5%BA%8F%E7%9A%84%E5%9D%97/</url>
      
        <content type="html"><![CDATA[<h4 id="769-最多能完成排序的块">769. 最多能完成排序的块</h4><h5 id="题目"><a href="https://leetcode.cn/problems/max-chunks-to-make-sorted/">题目</a></h5><p>给定一个长度为 n 的整数数组 arr ，它表示在 [0, n - 1] 范围内的整数的排列。我们将 arr 分割成若干 块 (即分区)，并对每个块单独排序。将它们连接起来后，使得连接的结果和按升序排序后的原数组相同。</p><p>返回数组能分成的最多块数量。</p><h5 id="范围提示">范围提示</h5><ul><li><code>n == arr.length</code></li><li><code>1 &lt;= n &lt;= 10</code></li><li><code>0 &lt;= arr[i] &lt; n</code></li><li><code>arr</code> 中每个元素都 <strong>不同</strong></li></ul><h5 id="示例">示例</h5><blockquote><p>输入: arr = [4,3,2,1,0]<br>输出: 1<br>解释:<br>将数组分成2块或者更多块，都无法得到所需的结果。<br>例如，分成 [4, 3], [2, 1, 0] 的结果是 [3, 4, 0, 1, 2]，这不是有序的数组。</p></blockquote><blockquote><p>输入: arr = [1,0,2,3,4]<br>输出: 4<br>解释:<br>我们可以把它分成两块，例如 [1, 0], [2, 3, 4]。<br>然而，分成 [1, 0], [2], [3], [4] 可以得到最多的块数。</p></blockquote><h5 id="解题方法">解题方法</h5><p>题目给定数组是一个长度为n并表示在 [0, n - 1] 范围内的整数的排列<br>将整个数组升序排序之后，元素与对应下标之间存在 arr[i] == i;<br>这个也是我们分组的依据，<strong>我们选择的分组的最小依据为当前组中最大值应该位于对应下标之后</strong>。<br>也就是说比如 arr=[4,3,2,1,0] 我们遍历数组首先遇见 4 那么4分为一个组，当前组的大小最小为5 因为原数组排序之后4会被安排到ans[4]的位置.</p><p>我们遍历数组，每次保存遍历中的最大值，当最大值与当前位置下标相同时，说明到了最小的分组位置，分组+1</p><h5 id="代码">代码</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">maxChunksToSorted</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; arr)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> max = INT_MIN;<span class="comment">//保存每次遍历最大值</span></span><br><span class="line">        <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; arr.<span class="built_in">size</span>(); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            max = <span class="built_in">fmax</span>(max, arr[i]);</span><br><span class="line">            <span class="keyword">if</span>(max == i)<span class="comment">//最大值应该要在的下标</span></span><br><span class="line">                res++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> 贪心 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo新建第一篇博文</title>
      <link href="/2022/02/08/Hexo%E6%96%B0%E5%BB%BA%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E6%96%87/"/>
      <url>/2022/02/08/Hexo%E6%96%B0%E5%BB%BA%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E6%96%87/</url>
      
        <content type="html"><![CDATA[<h4 id="1-写文章">1. 写文章</h4><p>可以执行下列命令来创建一篇新文章或者新的页面</p><blockquote><p>$    hexo  new  [ <code>layout</code> ]  &lt; <code>title</code> &gt;</p></blockquote><p>可以在命令中指定文章的布局（layout），默认为 <code>post</code>，可以通过修改 <code>_config.yml</code> 中的 <code>default_layout</code> 参数来指定默认布局</p><p>Hexo 有三种默认布局：<code>post</code>、<code>page</code> 和 <code>draft</code>。在创建者三种不同类型的文件时，它们将会被保存到不同的路径；而您自定义的其他布局和 <code>post</code> 相同，都将储存到 <code>source/_posts</code> 文件夹。</p><table><thead><tr><th>布局</th><th>路径</th></tr></thead><tbody><tr><td><code>post</code></td><td><code>source/_posts</code></td></tr><tr><td><code>page</code></td><td><code>source</code></td></tr><tr><td><code>draft</code></td><td><code>source/_drafts</code></td></tr></tbody></table><blockquote><p>如果设置文章不被处理，可以将<code>Front-Matter</code>中<code>layout:</code>设为<code>false</code></p></blockquote><p>Hexo 默认以标题做为文件名称，但您可编辑 <code>new_post_name</code> 参数来改变默认的文件名称，举例来说，设为 <code>:year-:month-:day-:title.md</code> 可让您更方便的通过日期来管理文章。</p><table><thead><tr><th>变量</th><th>描述</th></tr></thead><tbody><tr><td><code>:title</code></td><td>标题（小写，空格将会被替换为短杠）</td></tr><tr><td><code>:year</code></td><td>建立的年份，比如， <code>2015</code></td></tr><tr><td><code>:month</code></td><td>建立的月份（有前导零），比如， <code>04</code></td></tr><tr><td><code>:i_month</code></td><td>建立的月份（无前导零），比如， <code>4</code></td></tr><tr><td><code>:day</code></td><td>建立的日期（有前导零），比如， <code>07</code></td></tr><tr><td><code>:i_day</code></td><td>建立的日期（无前导零），比如， <code>7</code></td></tr></tbody></table><p>刚刚提到了 Hexo 的一种特殊布局：<code>draft</code>，这种布局在建立时会被保存到 <code>source/_drafts</code> 文件夹，您可通过 <code>publish</code> 命令将草稿移动到 <code>source/_posts</code> 文件夹，该命令的使用方式与 <code>new</code> 十分类似，您也可在命令中指定 <code>layout</code> 来指定布局。</p><blockquote><p>hexo  publish  [ <code>layout</code> ]  &lt; <code>title</code> &gt;</p></blockquote><p>草稿默认不会显示在页面中，您可在执行时加上 <code>--draft</code> 参数，或是把 <code>render_drafts</code> 参数设为 <code>true</code>来预览草稿。</p><p>在新建文章时，Hexo 会根据 <code>scaffolds</code> 文件夹内相对应的文件来建立文件，例如：</p><blockquote><p>hexo  new  photo  “My Gallery”</p></blockquote><p>在执行这行指令时，Hexo 会尝试在 <code>scaffolds</code> 文件夹中寻找 <code>photo.md</code>，并根据其内容建立文章，以下是您可以在模版中使用的变量：</p><p>变量描述<code>layout</code>布局<code>title</code>标题<code>date</code>文件建立日期</p>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最小不兼容性</title>
      <link href="/2021/12/06/1681-%E6%9C%80%E5%B0%8F%E4%B8%8D%E5%85%BC%E5%AE%B9%E6%80%A7/"/>
      <url>/2021/12/06/1681-%E6%9C%80%E5%B0%8F%E4%B8%8D%E5%85%BC%E5%AE%B9%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<h4 id="题目翻译">题目翻译</h4><blockquote><p>You are given an integer array nums and an integer k. You are asked to distribute this array into k subsets of equal size such that there are no two equal elements in the same subset.</p><p>A subset’s incompatibility is the difference between the maximum and minimum elements in that array.</p><p>Return the minimum possible sum of incompatibilities of the k subsets after distributing the array optimally, or return -1 if it is not possible.</p><p>A subset is a group integers that appear in the array with no particular order.</p></blockquote><blockquote><p>给你一个整数数组 nums 和一个整数 k 。你需要将这个数组划分到 k 个相同大小的子集中，使得同一个子集里面没有两个相同的元素。</p><p>一个子集的 不兼容性 是该子集里面最大值和最小值的差。</p><p>请你返回将数组分成 k 个子集后，各子集 不兼容性 的 和 的 最小值 ，如果无法分成分成 k 个子集，返回 -1 。</p><p>子集的定义是数组中一些数字的集合，对数字顺序没有要求。</p></blockquote><p>范围提示：</p><ul><li><code>1 &lt;= k &lt;= nums.length &lt;= 16</code></li><li><code>nums.length</code> 能被 <code>k</code> 整除。</li><li><code>1 &lt;= nums[i] &lt;= nums.length</code></li></ul><p>示例1：</p><blockquote><p>输入：nums = [1,2,1,4], k = 2<br>输出：4<br>解释：最优的分配是 [1,2] 和 [1,4] 。<br>不兼容性和为 (2-1) + (4-1) = 4 。<br>注意到 [1,1] 和 [2,4] 可以得到更小的和，但是第一个集合有 2 个相同的元素，所以不可行。</p></blockquote><p>示例2：</p><blockquote><p>输入：nums = [6,3,8,1,3,1,2,2], k = 4<br>输出：6<br>解释：最优的子集分配为 [1,2]，[2,3]，[6,8] 和 [1,3] 。<br>不兼容性和为 (2-1) + (3-2) + (8-6) + (3-1) = 6 。</p></blockquote><p>示例3：</p><blockquote><p>输入：nums = [5,3,3,6,3,3], k = 3<br>输出：-1<br>解释：没办法将这些数字分配到 3 个子集且满足每个子集里没有相同数字。</p></blockquote><h4 id="状压DP解答与分析">状压DP解答与分析</h4><p>#####预处理</p><ul><li>对 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="monospace">nums</mtext></mrow><annotation encoding="application/x-tex">\texttt{nums}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord text"><span class="mord texttt">nums</span></span></span></span></span>进行从小到大排序</li><li>处理 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>∼</mo><msup><mn>2</mn><mi>n</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">0\sim 2^{n}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7477em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 的所有数字的二进制表示中的 11 的个数：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="monospace">cnts</mtext></mrow><annotation encoding="application/x-tex">\texttt{cnts}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5536em;"></span><span class="mord text"><span class="mord texttt">cnts</span></span></span></span></span> 数组。</li><li>预先处理 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">k = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>=</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">k = n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 的特殊情况。</li><li>计算出每个子集的大小：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="monospace">per</mtext><mtext> </mtext><mtext mathvariant="monospace">=</mtext><mtext> </mtext><mtext mathvariant="monospace">n</mtext><mtext> </mtext><mtext mathvariant="monospace">/</mtext><mtext> </mtext><mtext mathvariant="monospace">k</mtext></mrow><annotation encoding="application/x-tex">\texttt{per = n / k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9167em;vertical-align:-0.2222em;"></span><span class="mord text"><span class="mord texttt">per = n / k</span></span></span></span></span>。</li></ul><h5 id="状态的定义">状态的定义</h5><p>定义 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="monospace">dp[mask][pre]</mtext></mrow><annotation encoding="application/x-tex">\texttt{dp[mask][pre]}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9167em;vertical-align:-0.2222em;"></span><span class="mord text"><span class="mord texttt">dp[mask][pre]</span></span></span></span></span> ：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="monospace">mask</mtext><mtext> </mtext><mtext mathvariant="monospace">-</mtext><mtext> </mtext></mrow><annotation encoding="application/x-tex">\texttt{mask - }</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6111em;"></span><span class="mord text"><span class="mord texttt">mask - </span></span></span></span></span> 当前哪些数用了，不能再用（二进制位为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>），那些数字可用（二进制位为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>)<br>$\texttt{pre - } $ 上一次选择的数字是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="monospace">nums</mtext></mrow><annotation encoding="application/x-tex">\texttt{nums}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord text"><span class="mord texttt">nums</span></span></span></span></span> 的第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="monospace">pre</mtext></mrow><annotation encoding="application/x-tex">\texttt{pre}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6528em;vertical-align:-0.2222em;"></span><span class="mord text"><span class="mord texttt">pre</span></span></span></span></span> 个。</p><h5 id="状态转移">状态转移</h5><p>我们一个子集一个子集地分配数字：<strong>分配完一个子集后，再分配下一个子集；<strong>在每个子集，我们</strong>从小到大</strong>分配数字。</p><p>我们可以通过 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="monospace">mask</mtext></mrow><annotation encoding="application/x-tex">\texttt{mask}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6111em;"></span><span class="mord text"><span class="mord texttt">mask</span></span></span></span></span> 的二进制表示中的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 的个数来获得当前可用的数字个数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="monospace">cnt</mtext></mrow><annotation encoding="application/x-tex">\texttt{cnt}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5536em;"></span><span class="mord text"><span class="mord texttt">cnt</span></span></span></span></span>。</p><p>如果当前 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="monospace">cnt</mtext></mrow><annotation encoding="application/x-tex">\texttt{cnt}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5536em;"></span><span class="mord text"><span class="mord texttt">cnt</span></span></span></span></span> 不能被子集的大小 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="monospace">per</mtext></mrow><annotation encoding="application/x-tex">\texttt{per}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6528em;vertical-align:-0.2222em;"></span><span class="mord text"><span class="mord texttt">per</span></span></span></span></span> 整除，那么我们在选下一个数字时，则需要考虑上一个数字 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="monospace">nums[pre]</mtext></mrow><annotation encoding="application/x-tex">\texttt{nums[pre]}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9167em;vertical-align:-0.2222em;"></span><span class="mord text"><span class="mord texttt">nums[pre]</span></span></span></span></span> 的影响。为了不出现重复数字，且我们从小到大选择数字，因此我们只能选择可用的、比 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="monospace">nums[pre]</mtext></mrow><annotation encoding="application/x-tex">\texttt{nums[pre]}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9167em;vertical-align:-0.2222em;"></span><span class="mord text"><span class="mord texttt">nums[pre]</span></span></span></span></span> 大的数字。设我们选择了 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="monospace">nums[p]</mtext></mrow><annotation encoding="application/x-tex">\texttt{nums[p]}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9167em;vertical-align:-0.2222em;"></span><span class="mord text"><span class="mord texttt">nums[p]</span></span></span></span></span>，则新增加的不兼容度 = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="monospace">nums[p]</mtext><mtext> </mtext><mtext mathvariant="monospace">-</mtext><mtext> </mtext><mtext mathvariant="monospace">nums[pre]</mtext></mrow><annotation encoding="application/x-tex">\texttt{nums[p] - nums[pre]}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9167em;vertical-align:-0.2222em;"></span><span class="mord text"><span class="mord texttt">nums[p] - nums[pre]</span></span></span></span></span>，如下图所示：</p><p><img src="https://imgbed.link/file/1341" alt=""></p><h5 id="状态转移方程">状态转移方程</h5><p>\texttt{if (mask & (1<<p)) == 1 and nums[p] > nums[pre]:}</p><p>​<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="monospace">dp[mask][pre]</mtext><mtext> </mtext><mtext mathvariant="monospace">=</mtext><mtext> </mtext><mtext mathvariant="monospace">min(dp[mask][p],</mtext><mtext> </mtext><mtext mathvariant="monospace">dp[mask-(1&lt;&lt;p)][p]</mtext><mtext> </mtext><mtext mathvariant="monospace">+</mtext><mtext> </mtext><mtext mathvariant="monospace">nums[p]-nums[pre])</mtext></mrow><annotation encoding="application/x-tex">\texttt{dp[mask][pre] = min(dp[mask][p], dp[mask-(1&lt;&lt;p)][p] + nums[p]-nums[pre])}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9167em;vertical-align:-0.2222em;"></span><span class="mord text"><span class="mord texttt">dp[mask][pre] = min(dp[mask][p], dp[mask-(1&lt;&lt;p)][p] + nums[p]-nums[pre])</span></span></span></span></span></p><p>如果当前 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="monospace">cnt</mtext></mrow><annotation encoding="application/x-tex">\texttt{cnt}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5536em;"></span><span class="mord text"><span class="mord texttt">cnt</span></span></span></span></span> 能被子集的大小 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="monospace">per</mtext></mrow><annotation encoding="application/x-tex">\texttt{per}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6528em;vertical-align:-0.2222em;"></span><span class="mord text"><span class="mord texttt">per</span></span></span></span></span> 整除，代表着我们在给一个新的子集分配，这时 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="monospace">pre</mtext></mrow><annotation encoding="application/x-tex">\texttt{pre}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6528em;vertical-align:-0.2222em;"></span><span class="mord text"><span class="mord texttt">pre</span></span></span></span></span> 变量无关紧要，我们只需要选择当前子集的第一个数字即可：</p><p>\texttt{if (mask & (1<<p)) == 1:}</p><p>​<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="monospace">dp[mask][0]</mtext><mtext> </mtext><mtext mathvariant="monospace">=</mtext><mtext> </mtext><mtext mathvariant="monospace">...</mtext><mtext> </mtext><mtext mathvariant="monospace">=</mtext><mtext> </mtext><mtext mathvariant="monospace">dp[mask][n-1]</mtext><mtext> </mtext><mtext mathvariant="monospace">=</mtext><mtext> </mtext><mtext mathvariant="monospace">min(dp[mask][0],</mtext><mtext> </mtext><mtext mathvariant="monospace">dp[mask-(1&lt;&lt;p)][p])</mtext></mrow><annotation encoding="application/x-tex">\texttt{dp[mask][0] = ... = dp[mask][n-1] = min(dp[mask][0], dp[mask-(1&lt;&lt;p)][p])}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9167em;vertical-align:-0.2222em;"></span><span class="mord text"><span class="mord texttt">dp[mask][0] = ... = dp[mask][n-1] = min(dp[mask][0], dp[mask-(1&lt;&lt;p)][p])</span></span></span></span></span></p><h5 id="复杂度分析">复杂度分析</h5><ul><li>时间复杂度：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mn>2</mn><mi>n</mi></msup><mo>×</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(2^{n}\times n^{2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li><li>空间复杂度：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mn>2</mn><mi>n</mi></msup><mo>×</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(2^{n}\times n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></li></ul><h5 id="代码">代码</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">minimumIncompatibility</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> k)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n = nums.<span class="built_in">size</span>(), per = n/k;</span><br><span class="line">        <span class="keyword">if</span>(k == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="function">set&lt;<span class="type">int</span>&gt; <span class="title">s</span><span class="params">(nums.begin(), nums.end())</span></span>;</span><br><span class="line">            <span class="keyword">if</span>(s.<span class="built_in">size</span>() &lt; nums.<span class="built_in">size</span>()) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> (*s.<span class="built_in">rbegin</span>()) - (*s.<span class="built_in">begin</span>());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(k == n) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">sort</span>(nums.<span class="built_in">begin</span>(), nums.<span class="built_in">end</span>());</span><br><span class="line">        <span class="type">int</span> M = (<span class="number">1</span> &lt;&lt; n), dp[M][n], cnts[M];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; M; ++i) &#123;</span><br><span class="line">            <span class="type">int</span> cur = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; ++j) &#123;</span><br><span class="line">                <span class="keyword">if</span>(i &amp; (<span class="number">1</span> &lt;&lt; j)) &#123;</span><br><span class="line">                    cur += <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            cnts[i] = cur;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">memset</span>(dp, <span class="number">0x3f</span>, <span class="built_in">sizeof</span>(dp));</span><br><span class="line">        <span class="built_in">memset</span>(dp[<span class="number">0</span>], <span class="number">0</span>, <span class="built_in">sizeof</span>(dp[<span class="number">0</span>]));</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> mask = <span class="number">1</span>; mask &lt; M; ++mask) &#123;</span><br><span class="line">            <span class="keyword">if</span>((cnts[mask] % per) == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> p = <span class="number">0</span>; p &lt; n; ++p) &#123;</span><br><span class="line">                    <span class="keyword">if</span>(mask &amp; (<span class="number">1</span> &lt;&lt; p)) &#123;</span><br><span class="line">                        dp[mask][<span class="number">0</span>] = <span class="built_in">min</span>(dp[mask][<span class="number">0</span>], dp[mask ^ (<span class="number">1</span> &lt;&lt; p)][p]);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> pre = <span class="number">1</span>; pre &lt; n; ++pre) &#123;</span><br><span class="line">                    dp[mask][pre] = dp[mask][<span class="number">0</span>];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> pre = <span class="number">0</span>; pre &lt; n; ++pre) &#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="type">int</span> p = pre + <span class="number">1</span>; p &lt; n; ++p) &#123;</span><br><span class="line">                        <span class="keyword">if</span>((mask &amp; (<span class="number">1</span> &lt;&lt; p)) &amp;&amp; nums[p] &gt; nums[pre]) &#123;</span><br><span class="line">                            dp[mask][pre] = <span class="built_in">min</span>(dp[mask][pre], dp[mask ^ (<span class="number">1</span> &lt;&lt; p)][p] + nums[p] - nums[pre]);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(dp[M<span class="number">-1</span>][<span class="number">0</span>] &gt;= <span class="number">10000</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[M<span class="number">-1</span>][<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="枚举子集的状压DP">枚举子集的状压DP</h4><h5 id="前言">前言</h5><ul><li>位运算中的「枚举子集」，即给定一个整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span>，如何不重复地枚举 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> 二进制表示的子集 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mi>y</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{y\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">}</span></span></span></span>。「子集」的定义为，yy 的二进制表示中每一个出现的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> 中相同的位置也为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，用位运算即为 x &amp; y = y​。</li><li>「枚举子集」的时间复杂度分析，对于所有位数不超过 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 的二进制数，数量为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">2^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6644em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span>。如果枚举一个子集的时间复杂度记为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span>，那么枚举整数 xx 的所有子集的时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mn>2</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(2^n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。然而如果我们枚举<strong>每一个不超过 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 的二进制数的所有子集</strong>，那么时间复杂度实际上不是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mn>2</mn><mi>n</mi></msup><mo>⋅</mo><msup><mn>2</mn><mi>n</mi></msup><mo stretchy="false">)</mo><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><msup><mn>4</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(2^n \cdot 2^n) = O(4^n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord">4</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，而是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mn>3</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(3^n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord">3</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，具体可以用二项式定理来证明。</li></ul><h5 id="思路与算法">思路与算法</h5><p>设数组 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="italic">nums</mtext></mrow><annotation encoding="application/x-tex">\textit{nums}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord text"><span class="mord textit">nums</span></span></span></span></span> 的长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>，我们用一个长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="italic">mask</mtext></mrow><annotation encoding="application/x-tex">\textit{mask}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord text"><span class="mord textit">mask</span></span></span></span></span> 的二进制表示数组中的每一个元素当前是否已经被选择过：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="italic">mask</mtext></mrow><annotation encoding="application/x-tex">\textit{mask}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord text"><span class="mord textit">mask</span></span></span></span></span> 的第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 位为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 表示 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="italic">nums</mtext><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\textit{nums}[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord textit">nums</span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span></span></span></span> 已经被选择过，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span> 表示 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="italic">nums</mtext><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\textit{nums}[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord textit">nums</span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span></span></span></span> 未被选择过。</p><p>这样我们就可以尝试使用状态压缩动态规划的方法来解决本题。记 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">[</mo><mtext mathvariant="italic">mask</mtext><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">f[\textit{mask}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord text"><span class="mord textit">mask</span></span><span class="mclose">]</span></span></span></span> 表示当选择的元素集合为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="italic">mask</mtext></mrow><annotation encoding="application/x-tex">\textit{mask}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord text"><span class="mord textit">mask</span></span></span></span></span> 时最小的不兼容性的和。那么我们可以写出状态转移方程：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">[</mo><mtext mathvariant="italic">mask</mtext><mo stretchy="false">]</mo><mo>=</mo><msub><mrow><mi>min</mi><mo>⁡</mo></mrow><mrow><mtext mathvariant="italic">sub</mtext><mtext> is valid</mtext></mrow></msub><mo stretchy="false">(</mo><mrow><mi>f</mi><mo stretchy="false">[</mo><mtext mathvariant="italic">mask</mtext><mo>⊕</mo><mtext mathvariant="italic">sub</mtext><mo stretchy="false">]</mo><mo>+</mo><mtext mathvariant="italic">value</mtext><mo stretchy="false">[</mo><mtext mathvariant="italic">sub</mtext><mo stretchy="false">]</mo><mo stretchy="false">)</mo></mrow></mrow><annotation encoding="application/x-tex">f[\textit{mask}] = \min_{\textit{sub} \text{~is valid}} ({ f[\textit{mask} \oplus \textit{sub}] + \textit{value}[\textit{sub}] )}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord text"><span class="mord textit">mask</span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mop">min</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord textit mtight">sub</span></span><span class="mord text mtight"><span class="mord mtight nobreak"> </span><span class="mord mtight">is valid</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord text"><span class="mord textit">mask</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord text"><span class="mord textit">sub</span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord text"><span class="mord textit">value</span></span><span class="mopen">[</span><span class="mord text"><span class="mord textit">sub</span></span><span class="mclose">])</span></span></span></span></span></p><p>这个状态方程是什么意思呢？我们尝试枚举 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="italic">mask</mtext></mrow><annotation encoding="application/x-tex">\textit{mask}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord text"><span class="mord textit">mask</span></span></span></span></span> 的一个子集 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="italic">sub</mtext></mrow><annotation encoding="application/x-tex">\textit{sub}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord text"><span class="mord textit">sub</span></span></span></span></span>，它表示我们最后一个选择的子集，同时它必须满足一些条件。当我们选择了子集 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="italic">sub</mtext></mrow><annotation encoding="application/x-tex">\textit{sub}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord text"><span class="mord textit">sub</span></span></span></span></span> 后，我们计算它的不兼容性 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="italic">value</mtext><mo stretchy="false">[</mo><mtext mathvariant="italic">sub</mtext><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\textit{value}[\textit{sub}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord textit">value</span></span><span class="mopen">[</span><span class="mord text"><span class="mord textit">sub</span></span><span class="mclose">]</span></span></span></span>，并且将它从 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="italic">mask</mtext></mrow><annotation encoding="application/x-tex">\textit{mask}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord text"><span class="mord textit">mask</span></span></span></span></span> 中移除。这里 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊕</mo></mrow><annotation encoding="application/x-tex">\oplus</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">⊕</span></span></span></span> 表示异或运算，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="italic">mask</mtext><mo>⊕</mo><mtext mathvariant="italic">sub</mtext></mrow><annotation encoding="application/x-tex">\textit{mask} \oplus \textit{sub}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord text"><span class="mord textit">mask</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord text"><span class="mord textit">sub</span></span></span></span></span>就是将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="italic">sub</mtext></mrow><annotation encoding="application/x-tex">\textit{sub}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord text"><span class="mord textit">sub</span></span></span></span></span> 从 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="italic">mask</mtext></mrow><annotation encoding="application/x-tex">\textit{mask}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord text"><span class="mord textit">mask</span></span></span></span></span> 中移除的操作。剩余的所有元素对应的最小不兼容性的和为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">[</mo><mtext mathvariant="italic">mask</mtext><mo>⊕</mo><mtext mathvariant="italic">sub</mtext><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">f[\textit{mask} \oplus \textit{sub}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord text"><span class="mord textit">mask</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord textit">sub</span></span><span class="mclose">]</span></span></span></span>，因此将这两项相加，并在所有满足条件的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="italic">sub</mtext></mrow><annotation encoding="application/x-tex">\textit{sub}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord text"><span class="mord textit">sub</span></span></span></span></span> 中选取相加的最小值，就可以得到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="italic">mask</mtext></mrow><annotation encoding="application/x-tex">\textit{mask}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord text"><span class="mord textit">mask</span></span></span></span></span> 对应的最小不兼容性的和。</p><p>那么 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="italic">sub</mtext></mrow><annotation encoding="application/x-tex">\textit{sub}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord text"><span class="mord textit">sub</span></span></span></span></span> 需要满足哪些要求呢？我们可以根据题目描述，将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="italic">sub</mtext></mrow><annotation encoding="application/x-tex">\textit{sub}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord text"><span class="mord textit">sub</span></span></span></span></span> 的要求列举出来：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="italic">sub</mtext></mrow><annotation encoding="application/x-tex">\textit{sub}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord text"><span class="mord textit">sub</span></span></span></span></span> 中必须恰好有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle displaystyle="true" scriptlevel="0"><mfrac><mi>n</mi><mi>k</mi></mfrac></mstyle></mrow><annotation encoding="application/x-tex">\dfrac{n}{k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.7936em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1076em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，这样它才能成为一个子集；</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="italic">sub</mtext></mrow><annotation encoding="application/x-tex">\textit{sub}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord text"><span class="mord textit">sub</span></span></span></span></span> 中任意两个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 对应的数组 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="italic">nums</mtext></mrow><annotation encoding="application/x-tex">\textit{nums}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord text"><span class="mord textit">nums</span></span></span></span></span> 中的元素必须不能相同。</p><p>根据这些要求，我们可以「预处理」出所有满足要求的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="italic">sub</mtext></mrow><annotation encoding="application/x-tex">\textit{sub}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord text"><span class="mord textit">sub</span></span></span></span></span>。如果 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="italic">sub</mtext></mrow><annotation encoding="application/x-tex">\textit{sub}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord text"><span class="mord textit">sub</span></span></span></span></span> 满足要求，那么 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="italic">value</mtext><mo stretchy="false">[</mo><mtext mathvariant="italic">sub</mtext><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\textit{value}[\textit{sub}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord textit">value</span></span><span class="mopen">[</span><span class="mord text"><span class="mord textit">sub</span></span><span class="mclose">]</span></span></span></span> 就是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="italic">sub</mtext></mrow><annotation encoding="application/x-tex">\textit{sub}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord text"><span class="mord textit">sub</span></span></span></span></span> 的不兼容性；如果 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="italic">sub</mtext></mrow><annotation encoding="application/x-tex">\textit{sub}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord text"><span class="mord textit">sub</span></span></span></span></span> 不满足要求，那么 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="italic">value</mtext></mrow><annotation encoding="application/x-tex">\textit{value}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord text"><span class="mord textit">value</span></span></span></span></span> 就是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">−</span><span class="mord">1</span></span></span></span>。预处理的方法也很简单，我们遍历所有长度不超过 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 的二进制数，使用语言自带的 API 判断其是否有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mi>n</mi><mi>k</mi></mfrac></mrow><annotation encoding="application/x-tex">\frac{n}{k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0404em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6954em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，再使用数组或者哈希表进行计数，并判断是否其中元素两两不同即可。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">value</span><span class="params">(<span class="number">1</span> &lt;&lt; n, <span class="number">-1</span>)</span></span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> sub = <span class="number">0</span>; sub &lt; (<span class="number">1</span> &lt;&lt; n); ++sub) &#123;</span><br><span class="line">    <span class="comment">// 判断 sub 是否有 n/k 个 1</span></span><br><span class="line">    <span class="keyword">if</span> (__builtin_popcount(mask) == n / k) &#123;</span><br><span class="line">        <span class="comment">// 使用数组进行计数</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; ++j) &#123;</span><br><span class="line">            <span class="keyword">if</span> (sub &amp; (<span class="number">1</span> &lt;&lt; j)) &#123;</span><br><span class="line">                ++freq[nums[j]];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 任意一个数不能出现超过 1 次</span></span><br><span class="line">        <span class="type">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; ++j) &#123;</span><br><span class="line">            <span class="keyword">if</span> (freq[j] &gt; <span class="number">1</span>) &#123;</span><br><span class="line">                flag = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 如果满足要求，那么计算 sub 的不兼容性</span></span><br><span class="line">        <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">            <span class="type">int</span> lb = INT_MAX, rb = INT_MIN;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; ++j) &#123;</span><br><span class="line">                <span class="keyword">if</span> (freq[j] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    lb = <span class="built_in">min</span>(lb, j);</span><br><span class="line">                    rb = <span class="built_in">max</span>(rb, j);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            valid[sub] = rb - lb;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 由于我们使用数组进行计数，因此要将数组恢复原状</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; ++j) &#123;</span><br><span class="line">            <span class="keyword">if</span> (sub &amp; (<span class="number">1</span> &lt;&lt; j)) &#123;</span><br><span class="line">                --freq[nums[j]];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在预处理出所有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="italic">sub</mtext></mrow><annotation encoding="application/x-tex">\textit{sub}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord text"><span class="mord textit">sub</span></span></span></span></span> 之后，我们就可以进行动态规划了。动态规划的边界条件为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">f[0] = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span></span></p><p>表示我们什么都不取，那么不兼容性为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span> 。其余的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span></span> 值才初始时都置为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">−</span><span class="mord">1</span></span></span></span> ，表示不满足要求。当我们遍历所有长度不超过 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 的二进制数作为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="italic">mask</mtext></mrow><annotation encoding="application/x-tex">\textit{mask}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord text"><span class="mord textit">mask</span></span></span></span></span> 时，我们首先可以通过语言自带的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>P</mi><mi>I</mi></mrow><annotation encoding="application/x-tex">API</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span></span></span></span> 判断 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="italic">mask</mtext></mrow><annotation encoding="application/x-tex">\textit{mask}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord text"><span class="mord textit">mask</span></span></span></span></span> 中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 的个数是否为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mi>n</mi><mi>k</mi></mfrac></mrow><annotation encoding="application/x-tex">\frac{n}{k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0404em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6954em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 的倍数，这样可以大大减少常数。如果满足要求，那么我们就枚举子集，判断子集是否满足要求，并使用状态转移方程进行计算即可。</p><p>最终的答案即为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">[</mo><msup><mn>2</mn><mi>n</mi></msup><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">f[2^n-1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span>。</p><p>注意： 如果使用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mi>y</mi><mi>t</mi><mi>h</mi><mi>o</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">Python</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span></span></span></span> 语言，需要加 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>=</mo><mi>k</mi></mrow><annotation encoding="application/x-tex">n=k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 的特殊判断，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mn>3</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(3^n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord">3</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>对于 Python 来说还是有点高。</p><h5 id="代码-2">代码</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">minimumIncompatibility</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> k)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">value</span><span class="params">(<span class="number">1</span> &lt;&lt; n, <span class="number">-1</span>)</span></span>;</span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">freq</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> sub = <span class="number">0</span>; sub &lt; (<span class="number">1</span> &lt;&lt; n); ++sub) &#123;</span><br><span class="line">            <span class="comment">// 判断 sub 是否有 n/k 个 1</span></span><br><span class="line">            <span class="keyword">if</span> (__builtin_popcount(sub) == n / k) &#123;</span><br><span class="line">                <span class="comment">// 使用数组进行计数</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; ++j) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (sub &amp; (<span class="number">1</span> &lt;&lt; j)) &#123;</span><br><span class="line">                        ++freq[nums[j]];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 任意一个数不能出现超过 1 次</span></span><br><span class="line">                <span class="type">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; ++j) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (freq[j] &gt; <span class="number">1</span>) &#123;</span><br><span class="line">                        flag = <span class="literal">false</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 如果满足要求，那么计算 sub 的不兼容性</span></span><br><span class="line">                <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">                    <span class="type">int</span> lb = INT_MAX, rb = INT_MIN;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; ++j) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (freq[j] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                            lb = <span class="built_in">min</span>(lb, j);</span><br><span class="line">                            rb = <span class="built_in">max</span>(rb, j);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    value[sub] = rb - lb;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 由于我们使用数组进行计数，因此要将数组恢复原状</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; ++j) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (sub &amp; (<span class="number">1</span> &lt;&lt; j)) &#123;</span><br><span class="line">                        --freq[nums[j]];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">f</span><span class="params">(<span class="number">1</span> &lt;&lt; n, <span class="number">-1</span>)</span></span>;</span><br><span class="line">        f[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> mask = <span class="number">1</span>; mask &lt; (<span class="number">1</span> &lt;&lt; n); ++mask) &#123;</span><br><span class="line">            <span class="comment">// 判断 mask 是否有 n/k 倍数个 1</span></span><br><span class="line">            <span class="keyword">if</span> (__builtin_popcount(mask) % (n / k) == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="comment">// 枚举子集</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> sub = mask; sub; sub = (sub - <span class="number">1</span>) &amp; mask) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (value[sub] != <span class="number">-1</span> &amp;&amp; f[mask ^ sub] != <span class="number">-1</span>) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (f[mask] == <span class="number">-1</span>) &#123;</span><br><span class="line">                            f[mask] = f[mask ^ sub] + value[sub];</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span> &#123;</span><br><span class="line">                            f[mask] = <span class="built_in">min</span>(f[mask], f[mask ^ sub] + value[sub]);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">return</span> f[(<span class="number">1</span> &lt;&lt; n) - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">minimumIncompatibility</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>], k: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        n = <span class="built_in">len</span>(nums)</span><br><span class="line">        <span class="comment"># 特殊判断，如果元素数量等于组数</span></span><br><span class="line">        <span class="keyword">if</span> n == k:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        </span><br><span class="line">        value = <span class="built_in">dict</span>()</span><br><span class="line">        <span class="keyword">for</span> sub <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span> &lt;&lt; n):</span><br><span class="line">            <span class="comment"># 判断 sub 是否有 n/k 个 1</span></span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">bin</span>(sub).count(<span class="string">&quot;1&quot;</span>) == n // k:</span><br><span class="line">                <span class="comment"># 使用哈希表进行计数</span></span><br><span class="line">                freq = <span class="built_in">set</span>()</span><br><span class="line">                flag = <span class="literal">True</span></span><br><span class="line">                <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">                    <span class="keyword">if</span> sub &amp; (<span class="number">1</span> &lt;&lt; j):</span><br><span class="line">                        <span class="comment"># 任意一个数不能出现超过 1 次</span></span><br><span class="line">                        <span class="keyword">if</span> nums[j] <span class="keyword">in</span> freq:</span><br><span class="line">                            flag = <span class="literal">False</span></span><br><span class="line">                            <span class="keyword">break</span></span><br><span class="line">                        freq.add(nums[j])</span><br><span class="line">                </span><br><span class="line">                <span class="comment"># 如果满足要求，那么计算 sub 的不兼容性</span></span><br><span class="line">                <span class="keyword">if</span> flag:</span><br><span class="line">                    value[sub] = <span class="built_in">max</span>(freq) - <span class="built_in">min</span>(freq)</span><br><span class="line">        </span><br><span class="line">        f = <span class="built_in">dict</span>()</span><br><span class="line">        f[<span class="number">0</span>] = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> mask <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span> &lt;&lt; n):</span><br><span class="line">            <span class="comment"># 判断 mask 是否有 n/k 倍数个 1</span></span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">bin</span>(mask).count(<span class="string">&quot;1&quot;</span>) % (n // k) == <span class="number">0</span>:</span><br><span class="line">                <span class="comment"># 枚举子集</span></span><br><span class="line">                sub = mask</span><br><span class="line">                <span class="keyword">while</span> sub &gt; <span class="number">0</span>:</span><br><span class="line">                    <span class="keyword">if</span> sub <span class="keyword">in</span> value <span class="keyword">and</span> mask ^ sub <span class="keyword">in</span> f:</span><br><span class="line">                        <span class="keyword">if</span> mask <span class="keyword">not</span> <span class="keyword">in</span> f:</span><br><span class="line">                            f[mask] = f[mask ^ sub] + value[sub]</span><br><span class="line">                        <span class="keyword">else</span>:</span><br><span class="line">                            f[mask] = <span class="built_in">min</span>(f[mask], f[mask ^ sub] + value[sub])</span><br><span class="line">                    sub = (sub - <span class="number">1</span>) &amp; mask</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span> <span class="keyword">if</span> (<span class="number">1</span> &lt;&lt; n) - <span class="number">1</span> <span class="keyword">not</span> <span class="keyword">in</span> f <span class="keyword">else</span> f[(<span class="number">1</span> &lt;&lt; n) - <span class="number">1</span>]</span><br></pre></td></tr></table></figure><h4 id="思路三-120ms">思路三(120ms)</h4><h5 id="算法思想">算法思想</h5><ul><li>定义所有合法的单个最小集合 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">st</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span></span></span></span> 以及总集合的划分方式 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span></span> ，状态数量分别为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">t2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord mathnormal">t</span><span class="mord">2</span></span></span></span> ， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">f[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span></span></span></span> 表示用了用了二进制状态下 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 的位为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 的数；</li><li>利用二进制枚举子集，统计出 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">st</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span></span><ul><li>每一个集合的元素个数应该为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mi>n</mi><mi>t</mi><mo>=</mo><mi>n</mi><mi mathvariant="normal">/</mi><mi>k</mi></mrow><annotation encoding="application/x-tex">cnt = n / k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span></li><li>合法的单个集合 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mrow></mrow><mi mathvariant="normal">_</mi></msub><mi>b</mi><mi>u</mi><mi>i</mi><mi>l</mi><mi>t</mi><mi>i</mi><mi>n</mi><mi mathvariant="normal">_</mi><mi>p</mi><mi>o</mi><mi>p</mi><mi>c</mi><mi>o</mi><mi>u</mi><mi>n</mi><mi>t</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mo>=</mo><mi>c</mi><mi>n</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">_\_builtin\_popcount(i) == cnt</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.117em;vertical-align:-0.367em;"></span><span class="mord"><span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.0656em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight" style="margin-right:0.02778em;">_</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.367em;"><span></span></span></span></span></span></span><span class="mord mathnormal">b</span><span class="mord mathnormal">u</span><span class="mord mathnormal">i</span><span class="mord mathnormal">lt</span><span class="mord mathnormal">in</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">p</span><span class="mord mathnormal">o</span><span class="mord mathnormal">p</span><span class="mord mathnormal">co</span><span class="mord mathnormal">u</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">==</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span></span></span></span></li><li>合法的整体总集合 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mrow></mrow><mi mathvariant="normal">_</mi></msub><mi>b</mi><mi>u</mi><mi>i</mi><mi>l</mi><mi>t</mi><mi>i</mi><mi>n</mi><mi mathvariant="normal">_</mi><mi>p</mi><mi>o</mi><mi>p</mi><mi>c</mi><mi>o</mi><mi>u</mi><mi>n</mi><mi>t</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mi mathvariant="normal">%</mi><mi>c</mi><mi>n</mi><mi>t</mi><mo>=</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">_\_builtin\_popcount(i) \% cnt == 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.117em;vertical-align:-0.367em;"></span><span class="mord"><span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.0656em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight" style="margin-right:0.02778em;">_</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.367em;"><span></span></span></span></span></span></span><span class="mord mathnormal">b</span><span class="mord mathnormal">u</span><span class="mord mathnormal">i</span><span class="mord mathnormal">lt</span><span class="mord mathnormal">in</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">p</span><span class="mord mathnormal">o</span><span class="mord mathnormal">p</span><span class="mord mathnormal">co</span><span class="mord mathnormal">u</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mord">%</span><span class="mord mathnormal">c</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">==</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span></li><li>合法的单个集合中，不可以有相同数字</li></ul></li><li>因此对于单个集合的合法性我封装成了一个函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mi>h</mi><mi>e</mi><mi>c</mi><mi>k</mi></mrow><annotation encoding="application/x-tex">check</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span><span class="mord mathnormal">ec</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> ，在计算合法的同时返回集合的不兼容性，如果返回 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">−</span><span class="mord">1</span></span></span></span> 表示集合不合法</li><li>初始化 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">f[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span></span></span></span> 为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi><mi>N</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">INF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">NF</span></span></span></span> , 但对于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>=</mo><mo>=</mo><mi>s</mi><mi>t</mi><mo stretchy="false">[</mo><mi>k</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">i==st[k]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">==</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">]</span></span></span></span> 的状态(最小单个集合)，初始化成 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>t</mi><mo stretchy="false">[</mo><mi>k</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">st[k]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">]</span></span></span></span> 的不兼容性；</li><li>枚举所有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span></span> 的状态 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>t</mi><mi>a</mi><mi>t</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">state</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span></span></span></span> , 再枚举所有可行的单个集合 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">ss</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ss</span></span></span></span> ,  <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">ss</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ss</span></span></span></span> 属于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">st</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span></span></span></span> , 如果 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">ss</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ss</span></span></span></span> 是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>t</mi><mi>a</mi><mi>t</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">state</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span></span></span></span> 的一个子集, 那么尝试更新 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">[</mo><mi>s</mi><mi>t</mi><mi>a</mi><mi>t</mi><mi>e</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">f[state]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mclose">]</span></span></span></span> 的值。<br>由于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>t</mi><mi>a</mi><mi>t</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">state</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span></span></span></span> 的状态是从小到大的，那么当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>s</mi><mo>≥</mo><mi>s</mi><mi>t</mi><mi>a</mi><mi>t</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">ss ≥ state</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">ss</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span></span></span></span> 时就可以停止枚举子集. 判断一个二进制状态是否是另一个数的二进制状态可以通过 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>t</mi><mi>a</mi><mi>t</mi><mi>e</mi><mi mathvariant="normal">∣</mi><mi>s</mi><mi>s</mi><mo>=</mo><mo>=</mo><mi>s</mi><mi>t</mi><mi>a</mi><mi>t</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">state | ss == state</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord">∣</span><span class="mord mathnormal">ss</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">==</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span></span></span></span> 来判断，因为当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>t</mi><mi>a</mi><mi>t</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">state</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span></span></span></span> 与 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">ss</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ss</span></span></span></span> 有一位不同时，等式将不成立；</li><li>最终答案即为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">[</mo><mo stretchy="false">(</mo><mn>1</mn><mo>&lt;</mo><mo>&lt;</mo><mi>n</mi><mo stretchy="false">)</mo><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">f[(1 &lt;&lt; n) - 1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span>。</li></ul><h5 id="时间复杂度">时间复杂度</h5><ul><li><p>为了方便统计，一些非常小的复杂度，例如 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mi>h</mi><mi>e</mi><mi>c</mi><mi>k</mi></mrow><annotation encoding="application/x-tex">check</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span><span class="mord mathnormal">ec</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 函数, 对 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">nums</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span></span></span></span> 排序不做赘述</p></li><li><p>枚举所有单个最小集合和总集合需要枚举状态 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>&lt;</mo><mo>&lt;</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">1 &lt;&lt; n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6835em;vertical-align:-0.0391em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 次，复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mn>2</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(2^n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p></li><li><p>合法的最小子集数量是一个组合数，值为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mn>1</mn><mo>=</mo><msubsup><mi>C</mi><mi>n</mi><mrow><mi>n</mi><mi mathvariant="normal">/</mi><mi>k</mi></mrow></msubsup></mrow><annotation encoding="application/x-tex">T1 = C_{n}^{n/k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1614em;vertical-align:-0.1166em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.5834em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mtight">/</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1166em;"><span></span></span></span></span></span></span></span></span></span></p></li><li><p>合法的大集合数量也是一个组合数，值为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mn>2</mn><mo>=</mo><msubsup><mi>C</mi><mi>n</mi><mrow><mi>n</mi><mi mathvariant="normal">/</mi><mi>k</mi></mrow></msubsup><mo>+</mo><msubsup><mi>C</mi><mi>n</mi><mrow><mi>n</mi><mi mathvariant="normal">/</mi><mi>k</mi><mo>∗</mo><mn>2</mn></mrow></msubsup><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>&lt;</mo><mi>n</mi><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mn>2</mn><mi>k</mi><mo stretchy="false">)</mo><mo>∗</mo><msubsup><mi>C</mi><mi>n</mi><mrow><mi>n</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msubsup></mrow><annotation encoding="application/x-tex">T2 = C_{n}^{n/k} + C_{n}^{n/k * 2}+ ...&lt;n / (2k) * C_{n}^{n/2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1614em;vertical-align:-0.1166em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.5834em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mtight">/</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1166em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1614em;vertical-align:-0.1166em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.5834em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mtight">/</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">∗</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1166em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord">...</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mord">/</span><span class="mopen">(</span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1614em;vertical-align:-0.1166em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.5834em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mtight">/2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1166em;"><span></span></span></span></span></span></span></span></span></span></p></li><li><p>故总时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mi mathvariant="normal">/</mi><mi>k</mi><mo>∗</mo><msubsup><mi>C</mi><mi>n</mi><mrow><mi>n</mi><mi mathvariant="normal">/</mi><mi>k</mi></mrow></msubsup><mo>∗</mo><msubsup><mi>C</mi><mi>n</mi><mrow><mi>n</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msubsup><mo>+</mo><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">n/ k * C_{n}^{n/k} * C_{n}^{n/2} + 2^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1614em;vertical-align:-0.1166em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.5834em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mtight">/</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1166em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1614em;vertical-align:-0.1166em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.5834em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mtight">/2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1166em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6644em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span></p></li></ul><h5 id="代码-3">代码</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; st[<span class="number">1</span> &lt;&lt; <span class="number">16</span>]; <span class="comment">// first 表示状态， second表示不兼容性</span></span><br><span class="line"><span class="type">int</span> alls[<span class="number">1</span> &lt;&lt; <span class="number">16</span>];</span><br><span class="line"><span class="type">int</span> f[<span class="number">1</span> &lt;&lt; <span class="number">16</span>];</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">check</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp; nums, <span class="type">int</span> x)</span></span>&#123;</span><br><span class="line">        <span class="type">int</span> p[<span class="number">16</span>] = &#123;&#125;, idx = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">16</span>; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(x &gt;&gt; i &amp; <span class="number">1</span>) p[idx++] = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; idx - <span class="number">1</span>; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[p[i]] == nums[p[i + <span class="number">1</span>]]) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nums[p[idx - <span class="number">1</span>]] - nums[p[<span class="number">0</span>]];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">minimumIncompatibility</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> k)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">memset</span>(f, <span class="number">0x3f</span>, <span class="keyword">sizeof</span> f);</span><br><span class="line">        <span class="type">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="built_in">sort</span>(nums.<span class="built_in">begin</span>(), nums.<span class="built_in">end</span>());</span><br><span class="line">        <span class="type">int</span> cnt = n / k, t = <span class="number">0</span>, t2 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt; <span class="number">1</span> &lt;&lt; n; i++)&#123;</span><br><span class="line">            <span class="type">int</span> cnt1 = __builtin_popcount(i);</span><br><span class="line">            <span class="keyword">if</span>(cnt1 % cnt == <span class="number">0</span>) alls[t2++] = i;</span><br><span class="line">            <span class="keyword">if</span>(cnt1 == cnt)&#123;</span><br><span class="line">                <span class="type">int</span> diff = <span class="built_in">check</span>(nums, i);</span><br><span class="line">                <span class="keyword">if</span>(diff != <span class="number">-1</span>) &#123;</span><br><span class="line">                    st[t++] = &#123;i, diff&#125;;</span><br><span class="line">                    f[i] = diff;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; t2; i++)&#123;</span><br><span class="line">            <span class="type">int</span> state = alls[i];</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; t &amp;&amp; st[j].first &lt; state; j++)&#123;</span><br><span class="line">                <span class="type">int</span> ss = st[j].first;</span><br><span class="line">                <span class="keyword">if</span>((state | ss) == state)&#123;</span><br><span class="line">                    f[state] = <span class="built_in">min</span>(f[state], f[state - ss] + st[j].second);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> ans = f[(<span class="number">1</span> &lt;&lt; n) - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">return</span> ans == INF ? <span class="number">-1</span> : ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> DP </tag>
            
            <tag> 状态压缩 </tag>
            
            <tag> 枚举子集 </tag>
            
            <tag> 剪枝 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>买卖股票的最佳时机含手续费</title>
      <link href="/2020/12/17/714-%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA%E5%90%AB%E6%89%8B%E7%BB%AD%E8%B4%B9/"/>
      <url>/2020/12/17/714-%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA%E5%90%AB%E6%89%8B%E7%BB%AD%E8%B4%B9/</url>
      
        <content type="html"><![CDATA[<h4 id="买卖股票的最佳时机含手续费">买卖股票的最佳时机含手续费</h4><p>题目地址：<a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee/">https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee/</a></p><p>题目描述：给定一个整数数组 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mi>r</mi><mi>i</mi><mi>c</mi><mi>e</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">prices</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">i</span><span class="mord mathnormal">ces</span></span></span></span>，其中第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 个元素代表了第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 天的股票价格；非负整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mi>e</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">fee</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">ee</span></span></span></span> 代表了交易股票的手续费用。你可以无限次地完成交易，但是你每笔交易都需要付手续费。如果你已经购买了一个股票，在卖出它之前你就不能再继续购买股票了。返回获得利润的最大值。<strong>注意：<strong>这里的一笔交易指买入持有并</strong>卖出股票的整个过程</strong>，<strong>每笔交易你只需要为支付一次手续费</strong>。</p><p>示例：</p><blockquote><p>输入: prices = [1, 3, 2, 8, 4, 9], fee = 2<br>输出: 8<br>解释: 能够达到的最大利润:<br>在此处买入 prices[0] = 1<br>在此处卖出 prices[3] = 8<br>在此处买入 prices[4] = 4<br>在此处卖出 prices[5] = 9<br>总利润: ((8 - 1) - 2) + ((9 - 4) - 2) = 8.</p></blockquote><p>数据范围：</p><ul><li><code>0 &lt; prices.length &lt;= 50000</code></li><li><code>0 &lt; prices[i] &lt; 50000</code></li><li><code>0 ≤ fee &lt; 50000</code></li></ul><p>题解一：<strong>贪心策略</strong></p><p>如果使用贪心策略，就是最低值买，最高值（如果算上手续费还盈利）就卖。此时无非就是要找到两个点，买入日期，和卖出日期。</p><ul><li>买入日期：其实很好想，遇到更低点就记录一下。</li><li>卖出日期：这个就不好算了，但也没有必要算出准确的卖出日期，只要当前价格大于（最低价格+费用），就可以收获利润，至于准确的卖出日期，就是连续收获利润区间里的最后一天。</li></ul><p>所以我们在做收获利润操作的时候其实有两种情况：（注意：<strong>只有在你卖出股票的时候回扣手续费</strong>）</p><ul><li>情况一：收获利润的这一天并不是收获利润区间里的最后一天（不是真正的卖出，相当于持有股票），所以后面要继续收获利润。在代码中发现：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mi>i</mi><mi>n</mi><mi>P</mi><mi>r</mi><mi>i</mi><mi>c</mi><mi>e</mi><mo>=</mo><mi>p</mi><mi>r</mi><mi>i</mi><mi>c</mi><mi>e</mi><mi>s</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>−</mo><mi>f</mi><mi>e</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">minPrice = prices[i] - fee</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">min</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">i</span><span class="mord mathnormal">ce</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">i</span><span class="mord mathnormal">ces</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">ee</span></span></span></span>，这样在明天收获利润的时候，才不会多减一次手续费！</li><li>情况二：收获利润的这一天是收获利润区间里的最后一天（相当于真正的卖出了），后面要重新记录最小价格了。</li></ul><p>代码一：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">maxProfit</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; prices, <span class="type">int</span> fee)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> result = <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> minPrice = prices[<span class="number">0</span>]; <span class="comment">// 记录最低价格</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; prices.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">            <span class="comment">// 买入</span></span><br><span class="line">            <span class="keyword">if</span> (prices[i] &lt; minPrice) minPrice = prices[i]; <span class="comment">// 情况二</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 计算利润，可能有多次计算利润，最后一次计算利润才是真正意义的卖出</span></span><br><span class="line">            <span class="keyword">if</span> (prices[i] &gt; minPrice + fee) &#123;</span><br><span class="line">                result += prices[i] - minPrice - fee;</span><br><span class="line">                minPrice = prices[i] - fee; <span class="comment">// 情况一，这一步很关键</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>题解二：<strong>动态规划</strong></p><p>考虑到「不能同时参与多笔交易」，因此每天交易结束后只可能存在手里有一支股票或者没有股票的状态。</p><p>定义状态 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">dp[i][0]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span></span></span></span> 表示第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 天交易完后手里没有股票的最大利润，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">dp[i][1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span></span></span></span>表示第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 天交易完后手里持有一支股票的最大利润（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 从 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span> 开始）。</p><p>考虑 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">dp[i][0]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span></span></span></span> 的转移方程，如果这一天交易完后手里没有股票，那么可能的转移状态为前一天已经没有股票，即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">dp[i-1][0]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span></span></span></span>，或者前一天结束的时候手里持有一支股票，即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">dp[i-1][1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span></span></span></span>，这时候我们要将其卖出，并获得 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mi>r</mi><mi>i</mi><mi>c</mi><mi>e</mi><mi>s</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">prices[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">i</span><span class="mord mathnormal">ces</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span></span></span></span> 的收益，但需要支付 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mi>e</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">fee</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">ee</span></span></span></span> 的手续费。因此为了收益最大化，我们列出如下的转移方程：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="italic">dp</mtext><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo>=</mo><mi>max</mi><mo>⁡</mo><mo stretchy="false">{</mo><mtext mathvariant="italic">dp</mtext><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo separator="true">,</mo><mtext mathvariant="italic">dp</mtext><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo>+</mo><mtext mathvariant="italic">prices</mtext><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>−</mo><mtext mathvariant="italic">fee</mtext><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\textit{dp}[i][0]=\max\{\textit{dp}[i-1][0],\textit{dp}[i-1][1]+\textit{prices}[i]-\textit{fee}\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord textit">dp</span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">max</span><span class="mopen">{</span><span class="mord text"><span class="mord textit">dp</span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord text"><span class="mord textit">dp</span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord textit">prices</span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord textit">fee</span></span><span class="mclose">}</span></span></span></span></p><p>再来按照同样的方式考虑 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="italic">dp</mtext><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\textit{dp}[i][1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord textit">dp</span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span></span></span></span> 按状态转移，那么可能的转移状态为前一天已经持有一支股票，即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="italic">dp</mtext><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\textit{dp}[i-1][1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord textit">dp</span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span></span></span></span>，或者前一天结束时还没有股票，即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="italic">dp</mtext><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\textit{dp}[i-1][0]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord textit">dp</span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span></span></span></span>，这时候我们要将其买入，并减少 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="italic">prices</mtext><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\textit{prices}[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord textit">prices</span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span></span></span></span> 的收益。可以列出如下的转移方程：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="italic">dp</mtext><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo>=</mo><mi>max</mi><mo>⁡</mo><mo stretchy="false">{</mo><mtext mathvariant="italic">dp</mtext><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo separator="true">,</mo><mtext mathvariant="italic">dp</mtext><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo>−</mo><mtext mathvariant="italic">prices</mtext><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\textit{dp}[i][1]=\max\{\textit{dp}[i-1][1],\textit{dp}[i-1][0]-\textit{prices}[i]\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord textit">dp</span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">max</span><span class="mopen">{</span><span class="mord text"><span class="mord textit">dp</span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord text"><span class="mord textit">dp</span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord textit">prices</span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]}</span></span></span></span></p><p>对于初始状态，根据状态定义我们可以知道第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span> 天交易结束的时候有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="italic">dp</mtext><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\textit{dp}[0][0]=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord textit">dp</span></span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span> 以及 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="italic">dp</mtext><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo>=</mo><mo>−</mo><mtext mathvariant="italic">prices</mtext><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\textit{dp}[0][1]=-\textit{prices}[0]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord textit">dp</span></span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mord text"><span class="mord textit">prices</span></span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span></span></span></span>。</p><p>因此，我们只要从前往后依次计算状态即可。由于全部交易结束后，持有股票的收益一定低于不持有股票的收益，因此这时候 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="italic">dp</mtext><mo stretchy="false">[</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\textit{dp}[n-1][0]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord textit">dp</span></span><span class="mopen">[</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span></span></span></span> 的收益必然是大于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="italic">dp</mtext><mo stretchy="false">[</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\textit{dp}[n-1][1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord textit">dp</span></span><span class="mopen">[</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span></span></span></span> 的，最后的答案即为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="italic">dp</mtext><mo stretchy="false">[</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\textit{dp}[n-1][0]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord textit">dp</span></span><span class="mopen">[</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span></span></span></span>。</p><p>代码二：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">maxProfit</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; prices, <span class="type">int</span> fee)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n = prices.<span class="built_in">size</span>();</span><br><span class="line">        vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">dp</span>(n, <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(<span class="number">2</span>));</span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">0</span>, dp[<span class="number">0</span>][<span class="number">1</span>] = -prices[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; ++i) &#123;</span><br><span class="line">            dp[i][<span class="number">0</span>] = <span class="built_in">max</span>(dp[i - <span class="number">1</span>][<span class="number">0</span>], dp[i - <span class="number">1</span>][<span class="number">1</span>] + prices[i] - fee);</span><br><span class="line">            dp[i][<span class="number">1</span>] = <span class="built_in">max</span>(dp[i - <span class="number">1</span>][<span class="number">1</span>], dp[i - <span class="number">1</span>][<span class="number">0</span>] - prices[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[n - <span class="number">1</span>][<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>下面优化空间复杂度，注意到在状态转移方程中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="italic">dp</mtext><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\textit{dp}[i][0]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord textit">dp</span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="italic">dp</mtext><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\textit{dp}[i][1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord textit">dp</span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span></span></span></span> 只会从 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="italic">dp</mtext><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\textit{dp}[i-1][0]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord textit">dp</span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="italic">dp</mtext><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\textit{dp}[i-1][1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord textit">dp</span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span></span></span></span> 转移而来，因此我们不必使用数组存储所有的状态，而是使用两个变量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="italic">sell</mtext></mrow><annotation encoding="application/x-tex">\textit{sell}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord text"><span class="mord textit">sell</span></span></span></span></span> 以及 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="italic">buy</mtext><mi>b</mi><mi>u</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">\textit{buy}buy</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord text"><span class="mord textit">buy</span></span><span class="mord mathnormal">b</span><span class="mord mathnormal">u</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span> 分别表示 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="italic">dp</mtext><mo stretchy="false">[</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\textit{dp}[..][0]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord textit">dp</span></span><span class="mopen">[</span><span class="mord">..</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="italic">dp</mtext><mo stretchy="false">[</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\textit{dp}[..][1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord textit">dp</span></span><span class="mopen">[</span><span class="mord">..</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span></span></span></span> 直接进行状态转移即可。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">maxProfit</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; prices, <span class="type">int</span> fee)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n = prices.<span class="built_in">size</span>();</span><br><span class="line">        <span class="type">int</span> sell = <span class="number">0</span>, buy = -prices[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; ++i) &#123;</span><br><span class="line">            <span class="built_in">tie</span>(sell, buy) = <span class="built_in">pair</span>(<span class="built_in">max</span>(sell, buy + prices[i] - fee), <span class="built_in">max</span>(buy, sell - prices[i]));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sell;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>复杂度分析：</p><p>时间复杂度：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 为数组的长度。一共有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mi>n</mi></mrow><annotation encoding="application/x-tex">2n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span><span class="mord mathnormal">n</span></span></span></span> 个状态，每次状态转移的时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span>，因此时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>2</mn><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(2n)=O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">2</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>。</p><p>空间复杂度：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span> 或 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span>，取决于是否使用数组存储所有的状态。</p>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> 贪心 </tag>
            
            <tag> DP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AOP学习</title>
      <link href="/2020/12/15/AOP/"/>
      <url>/2020/12/15/AOP/</url>
      
        <content type="html"><![CDATA[<h4 id="什么是AOP">什么是AOP</h4><p>AOP(Aspect Oriented Programming)，面向切面思想，是Spring的三大核心思想之一(AOP的核心：IOC-控制反转、DI-依赖注入)。在我们的程序中，经常存在一些系统性的需求，比如权限校验、日志记录、统计等，这些代码会散落穿插在各个业务逻辑中，非常冗余且不利于维护。例如下面这个示意图：</p><p><img src="https://imgbed.link/file/1348" alt=""></p><p>将中间的校验权限和记录操作日志的公共操作抽取出来，放到公共方法里面。如下图所示：</p><p><img src="https://imgbed.link/file/1349" alt=""></p><p>这样，代码冗余和可维护性的问题得到了解决，但每个业务方法中依然要依次手动调用这些公共方法，也是略显繁琐。有没有更好的方式呢？有的，那就是AOP，AOP将权限校验、日志记录等非业务代码完全提取出来，与业务代码分离，并寻找节点切入业务代码中：</p><p><img src="https://imgbed.link/file/1350" alt=""></p><h4 id="AOP体系与概念">AOP体系与概念</h4><p>AOP需要做的三件事情：</p><ul><li>在哪里切入，也就是权限校验等非业务操作在哪些业务代码中执行。</li><li>在什么时候切入，是业务代码执行前还是执行后。</li><li>切入后做什么事，比如做权限校验、日志记录等。</li></ul><p>AOP体系图如下：</p><p><img src="https://imgbed.link/file/1351" alt=""></p><ul><li><code>Pointcut</code>：切点，决定处理如权限校验、日志记录等在何处切入业务代码中（即织入切面）。切点分为<code>execution</code>方式和<code>annotation</code>方式。前者可以用路径表达式指定哪些类织入切面，后者可以指定被哪些注解修饰的代码织入切面。</li><li><code>Advice</code>：处理，包括处理时机和处理内容。处理内容就是要做什么事，比如校验权限和记录日志。处理时机就是在什么时机执行处理内容，分为前置处理（即业务代码执行前）、后置处理（业务代码执行后）等。</li><li><code>Aspect</code>：切面，即<code>Pointcut</code>和<code>Advice</code>。</li><li><code>Joint point</code>：连接点，是程序执行的一个点。例如，一个方法的执行或者一个异常的处理。在 Spring AOP 中，一个连接点总是代表一个方法执行。</li><li><code>Weaving</code>：织入，就是通过动态代理，在目标对象方法中执行处理内容的过程。</li></ul><p><img src="https://imgbed.link/file/1352" alt=""></p><h4 id="AOP代码案例">AOP代码案例</h4><h5 id="第一个示例">第一个示例</h5><p>看一个简单的例子：所有的get请求被调用前在控制台输出一句&quot;get请求的advice触发了&quot;</p><ol><li>创建一个<code>AOP</code>切面类，只要在类上加个 <code>@Aspect</code> 注解即可。<code>@Aspect</code> 注解用来描述一个切面类，定义切面类的时候需要打上这个注解。<code>@Component</code> 注解将该类交给 <code>Spring</code> 来管理。在这个类里实现<code>advice</code></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mu.demo.advice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Aspect;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Before;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Pointcut;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LogAdvice</span> &#123;</span><br><span class="line">    <span class="comment">// 定义一个切点：所有被GetMapping注解修饰的方法会织入advice</span></span><br><span class="line">    <span class="meta">@Pointcut(&quot;@annotation(org.springframework.web.bind.annotation.GetMapping)&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">logAdvicePointcut</span><span class="params">()</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Before表示logAdvice将在目标方法执行前执行</span></span><br><span class="line">    <span class="meta">@Before(&quot;logAdvicePointcut()&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">logAdvice</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">// 这里只是一个示例，你可以写任何处理逻辑</span></span><br><span class="line">        System.out.println(<span class="string">&quot;get请求的advice触发了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.创建一个Controller类，内部写一个get请求：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mu.demo.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONObject;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(value = &quot;/aop&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AopController</span> &#123;</span><br><span class="line">    <span class="meta">@GetMapping(value = &quot;/getTest&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> JSONObject <span class="title function_">aopTest</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> JSON.parseObject(<span class="string">&quot;&#123;\&quot;message\&quot;:\&quot;SUCCESS\&quot;,\&quot;code\&quot;:200&#125;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="meta">@PostMapping(value = &quot;/postTest&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> JSONObject <span class="title function_">aopTest2</span><span class="params">(<span class="meta">@RequestParam(&quot;id&quot;)</span> String id)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> JSON.parseObject(<span class="string">&quot;&#123;\&quot;message\&quot;:\&quot;SUCCESS\&quot;,\&quot;code\&quot;:200&#125;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>浏览器访问该接口：<code>http://localhost:8085/aop/getTest</code></p><h5 id="第二个示例">第二个示例</h5><p>自定义一个注解<code>PermissionsAnnotation</code>；创建一个切面类，切点设置为拦截所有标注<code>PermissionsAnnotation</code>的方法，截取到接口的参数，进行简单的权限校验；将<code>PermissionsAnnotation</code>标注在测试接口类的测试接口<code>test</code>上。</p><p>1.自定义注解(<code>@Target、@Retention、@Documented</code>)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Target(ElementType.METHOD)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> PermissionAnnotation&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.创建第一个<code>AOP</code>切面类，只要在类上加个 <code>@Aspect </code>注解即可。<code>@Aspect</code> 注解用来描述一个切面类，定义切面类的时候需要打上这个注解。<code>@Component</code> 注解将该类交给 <code>Spring</code> 来管理。在这个类里实现第一步权限校验逻辑</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONObject;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.ProceedingJoinPoint;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Around;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Aspect;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Pointcut;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.annotation.Order;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Order(1)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PermissionFirstAdvice</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义一个切面，括号内写入第1步中自定义注解的路径</span></span><br><span class="line">    <span class="meta">@Pointcut(&quot;@annotation(com.mu.demo.annotation.PermissionAnnotation)&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">permissionCheck</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Around(&quot;permissionCheck()&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">permissionCheckFirst</span><span class="params">(ProceedingJoinPoint joinPoint)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;===================第一个切面===================：&quot;</span> + System.currentTimeMillis());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取请求参数，详见接口类</span></span><br><span class="line">        Object[] objects = joinPoint.getArgs();</span><br><span class="line">        <span class="type">Long</span> <span class="variable">id</span> <span class="operator">=</span> ((JSONObject) objects[<span class="number">0</span>]).getLong(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> ((JSONObject) objects[<span class="number">0</span>]).getString(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;id1-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&quot;</span> + id);</span><br><span class="line">        System.out.println(<span class="string">&quot;name1-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&quot;</span> + name);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// id小于0则抛出非法id的异常</span></span><br><span class="line">        <span class="keyword">if</span> (id &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> JSON.parseObject(<span class="string">&quot;&#123;\&quot;message\&quot;:\&quot;illegal id\&quot;,\&quot;code\&quot;:403&#125;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> joinPoint.proceed();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.创建接口类，并在目标方法上标注自定义注解 <code>PermissionsAnnotation</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONObject;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(value = &quot;/permission&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestController</span> &#123;</span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;/check&quot;, method = RequestMethod.POST)</span></span><br><span class="line">    <span class="comment">// 添加这个注解</span></span><br><span class="line">    <span class="meta">@PermissionsAnnotation()</span></span><br><span class="line">    <span class="keyword">public</span> JSONObject <span class="title function_">getGroupList</span><span class="params">(<span class="meta">@RequestBody</span> JSONObject request)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> JSON.parseObject(<span class="string">&quot;&#123;\&quot;message\&quot;:\&quot;SUCCESS\&quot;,\&quot;code\&quot;:200&#125;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>转载自<a href="https://blog.csdn.net/mu_wind/article/details/102758005">https://blog.csdn.net/mu_wind/article/details/102758005</a></p>]]></content>
      
      
      <categories>
          
          <category> Develop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring </tag>
            
            <tag> AOP </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git命令使用</title>
      <link href="/2020/12/15/git%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
      <url>/2020/12/15/git%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h4 id="1-git配置">1. git配置</h4><p>配置文件名为 .gitconfig ，执行任何 Git 配置命令后文件将自动创建。第一个要配置的是你个人的用户名称和电子邮件地址。这两条配置很重要，这两条命令一定要全局配置global，每次 Git 提交时都会引用这两条信息，说明是谁提交了更新，所以会随更新内容一起被永久纳入历史记录：</p><blockquote><p>git config --global user.email “<a href="mailto:1443996278@qq.com">1443996278@qq.com</a>”</p><p>git config --global <a href="http://user.name">user.name</a> “<a href="mailto:1443996278@qq.com">1443996278@qq.com</a>”</p></blockquote><h4 id="2-常用命令">2. 常用命令</h4><p><strong>常用</strong></p><p>初始化新仓库 <code>git init</code><br>克隆旧仓库 <code>git clone https://github.com/challenge1996/commit.git</code><br>查看状态 <code>git status</code><br>提交单个文件 <code>git add index.html</code><br>提交所有文件 <code>git add .</code>或<code>git add -A</code><br>使用通配符提交 <code>git add *.js</code><br>提交到仓库中 <code>git commit -m '提示信息'</code><br>提交已经跟踪过的文件，不需要执行 <code>add git commit -a -m '提交信息'</code><br>删除版本库与项目目录中的文件 <code>git rm index.html</code><br>只删除版本库中文件但保存项目目录中文件 <code>git rm --cached index.html</code><br>修改最后一次提交 <code>git commit --amend</code></p><p><strong>清理</strong></p><p>放弃没有提交的修改 <code>git checkout .</code><br>删除没有 add 的文件和目录 <code>git clean -fd</code><br>显示将要删除的文件或目录 <code>git clean -n</code></p><p><strong>Log</strong></p><p>查看日志 <code>git log</code><br>查看最近 2 次提交日志并显示文件差异 <code>git log -p -2</code><br>显示已修改的文件清单 <code>git log --name-only</code><br>显示新增、修改、删除的文件清单 <code>git log --name-status</code><br>一行显示并只显示 SHA-1 的前几个字符 <code>git log --oneline</code></p><p><strong>Branch</strong></p><p>分支用于为项目增加新功能或修复 Bug 时使用。</p><p>创建分支 <code>git branch dev</code></p><p>查看分支 <code>git branch</code></p><p>切换分支 <code>git checkout dev</code></p><p>创建并切换分支 <code>git checkout -b release origin/release</code></p><p>合并 dev 分支到 master  <code>git checkout master</code> 、 <code>git merge dev</code></p><p>删除分支 <code>git branch -d dev</code></p><p>删除没有合并的分支 <code>git branch -D dev</code></p><p>删除远程分支 <code>git push origin :dev</code></p><p>查看未合并的分支 (切换到 master) <code>git branch --no-merged</code></p><p>查看已经合并的分支 (切换到 master) <code>git branch --merged</code></p><p><strong>冲突</strong></p><p>不同分修改同一个文件或不同开发者修改同一个分支文件都可能造成冲突，造成无法提交代码。</p><p>使用编辑器修改冲突的文件<br>添加暂存 git add . 表示已经解决冲突<br>git commit 提交完成</p><p><strong>储藏（Stashing）</strong></p><p>当你正在进行项目中某一部分的工作，里面的东西处于一个比较杂乱的状态，而你想转到其他分支上进行一些工作。问题是，你不想提交进行了一半的工作，否则以后你无法回到这个工作点。</p><p>“暂存” 可以获取你工作目录的中间状态 —— 也就是你修改过的被追踪的文件和暂存的变更 —— 并将它保存到一个未完结变更的堆栈中，随时可以重新应用。</p><p>储藏工作 <code>git stash</code><br>查看储藏列表 <code>git stash list</code><br>应用最近的储藏 <code>git stash apply</code><br>应用更早的储藏 <code>git stash apply stash@&#123;2&#125;</code><br>删除储藏 <code>git stash drop stash@&#123;0&#125;</code><br>应用并删除储藏 <code>git stash pop</code><br><strong>Tag</strong></p><p>Git 也可以对某一时间点上的版本打上标签 ，用于发布软件版本如 v1.0</p><p>添加标签 <code>git tag v1.0</code><br>列出标签 <code>git tag</code><br>推送标签 <code>git push --tags</code><br>删除标签 <code>git tag -d v1.0.1</code><br>删除远程标签 <code>git push origin :v1.0.1</code></p><h4 id="3-IDEA工程中-gitignore文件的作用">3. IDEA工程中<code>.gitignore</code>文件的作用</h4><p>.gitignore 用于定义忽略提交的文件。需要忽略提交文件方法</p><ul><li>所有空行或者以注释符号 <code>＃</code> 开头的行都会被 Git 忽略。</li><li>匹配模式最后跟反斜杠（<code>/</code>）说明要忽略的是目录。</li><li>可以使用标准的 glob 模式匹配。</li></ul><h4 id="4-多人操作git仓库产生的问题">4. 多人操作git仓库产生的问题</h4><p>在多人协作开发时，经常碰到同事把最新修改推送到远程库，你在本地也做了修改，这个时候无论是执行git pull还是执行git push都会提示错误。解决办法是：先隐藏掉本地的修改，然后执行git pull从代码块拉取最新代码。</p><ul><li>输入<code>git status</code>查看本地的修改</li><li>输入<code>git stash</code>隐藏掉本地修改</li><li>输入 <code>git pull</code> 从代码库拉取更新</li><li>输入 <code>git stash pop stash@&#123;版本号&#125;</code></li><li>输入<code>git add 、git commit 、git push</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> Develop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>log日志框架对比</title>
      <link href="/2020/12/15/log4j2%E6%95%B4%E7%90%86/"/>
      <url>/2020/12/15/log4j2%E6%95%B4%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h4 id="1-常用的日志框架">1. 常用的日志框架</h4><ul><li>java.util.logging：是JDK在1.4版本中引入的Java原生日志框架。</li><li>Log4j：Apache的一个开源项目，可以控制日志信息输送的目的地是控制台、文件、GUI组件等，可以控制每一条日志的输出格式，这些可以通过一个配置文件来灵活地进行配置，而不需要修改应用的代码。</li><li>LogBack：是Log4j的一个改良版本。在同步日志模式下, Logback的性能是最糟糕的。</li><li>Log4j2：Log4j2是Log4j的升级版本，对Log4j进行重写。log4j2的性能无论在同步日志模式还是异步日志模式下都是最佳的。</li></ul><h4 id="2-SLF4J介绍">2. SLF4J介绍</h4><p>LF4J，即简单日志门面(Simple Logging Facade for Java)，它不是一个真正的日志实现，而是一个抽象层(abstraction layer)，它允许你在后台使用任意一个日志实现。前面介绍几种日志框架都有自己单独的API，要使用对应的框架就要使用其对应的API，这就大大的增加应用程序代码对于日志框架的耦合性。使用了slf4j后，对于应用程序来说，无论底层的日志框架如何变，应用程序不需要修改代码。</p><h4 id="3-springboot整合log4j2">3. springboot整合log4j2</h4><h5 id="3-1-引入pom依赖">3.1 引入pom依赖</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span><span class="comment">&lt;!-- 去掉springboot默认配置 --&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-logging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span> <span class="comment">&lt;!-- 引入log4j2依赖 --&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-log4j2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="3-2-添加yml配置">3.2 添加yml配置</h5><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">config:</span> <span class="string">xxxx.xml</span></span><br><span class="line">  <span class="attr">level:</span></span><br><span class="line">    <span class="attr">cn.jay.repository:</span> <span class="string">trace</span></span><br></pre></td></tr></table></figure><h5 id="3-3-log4j2配置模版">3.3 log4j2配置模版</h5><p>log4j2.xml（RollingRandomAccessFile形式）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="comment">&lt;!--日志级别以及优先级排序: OFF &gt; FATAL &gt; ERROR &gt; WARN &gt; INFO &gt; DEBUG &gt; TRACE &gt; ALL --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--status=&quot;WARN&quot; :用于设置log4j2自身内部日志的信息输出级别，默认是OFF--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--monitorInterval=&quot;30&quot;  :间隔秒数,自动检测配置文件的变更和重新配置本身--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span> <span class="attr">status</span>=<span class="string">&quot;warn&quot;</span> <span class="attr">monitorInterval</span>=<span class="string">&quot;60&quot;</span> <span class="attr">strict</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--自定义一些常量，之后使用$&#123;变量名&#125;或$&#123;sys:系统变量名&#125;引用--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;logpath&quot;</span>&gt;</span>./logs<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;logname&quot;</span>&gt;</span>$&#123;sys:log.name&#125;<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;charset&quot;</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--自定义的输出格式--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;pattern&quot;</span>&gt;</span>%-d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125;@@%p@@%X&#123;ip&#125;@@%t %C@@%X&#123;requestId&#125; %M %m %n <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--appenders:定义输出内容,输出格式,输出方式,日志保存策略等,常用其下三种标签[console,File,RollingFile]--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--Appender可以理解为日志的输出目的地--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">appenders</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--console :控制台输出的配置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Console</span> <span class="attr">name</span>=<span class="string">&quot;console&quot;</span> <span class="attr">target</span>=<span class="string">&quot;SYSTEM_OUT&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">&quot;$&#123;pattern&#125;&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;$&#123;charset&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Console</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--RollingRandomAccessFile性能比RollingFile提升官网宣称是20-200%--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RollingRandomAccessFile</span> <span class="attr">name</span>=<span class="string">&quot;YZY.TRACE&quot;</span> <span class="attr">immediateFlush</span>=<span class="string">&quot;true&quot;</span> <span class="attr">bufferSize</span>=<span class="string">&quot;1024&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">fileName</span>=<span class="string">&quot;$&#123;logpath&#125;/$&#123;logname&#125;.log&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">filePattern</span>=<span class="string">&quot;$&#123;logpath&#125;/$&#123;logname&#125;.log.%d&#123;yyyy-MM-dd&#125;.gz&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">&quot;$&#123;pattern&#125;&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;$&#123;charset&#125;&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">TimeBasedTriggeringPolicy</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">DefaultRolloverStrategy</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Delete</span> <span class="attr">basePath</span>=<span class="string">&quot;$&#123;logpath&#125;&quot;</span> <span class="attr">maxDepth</span>=<span class="string">&quot;2&quot;</span> <span class="attr">followLinks</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">IfFileName</span> <span class="attr">glob</span>=<span class="string">&quot;$&#123;logname&#125;.log.*.gz&quot;</span>/&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">IfLastModified</span> <span class="attr">age</span>=<span class="string">&quot;3d&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Delete</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">DefaultRolloverStrategy</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">RollingRandomAccessFile</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RollingRandomAccessFile</span> <span class="attr">name</span>=<span class="string">&quot;YZY.SYSTEM&quot;</span> <span class="attr">immediateFlush</span>=<span class="string">&quot;true&quot;</span> <span class="attr">bufferSize</span>=<span class="string">&quot;4096&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">fileName</span>=<span class="string">&quot;$&#123;logpath&#125;/system.log&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">filePattern</span>=<span class="string">&quot;$&#123;logpath&#125;/system.log.%d&#123;yyyy-MM-dd&#125;.gz&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">ignoreExceptions</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--引用上面自定义的输出格式--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">&quot;$&#123;pattern&#125;&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;$&#123;charset&#125;&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Filters</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--ThresholdFilter :日志输出过滤--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--level=&quot;info&quot; :日志级别,onMatch=&quot;ACCEPT&quot; :级别在info之上则接受,onMismatch=&quot;DENY&quot; :级别在info之下则拒绝--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--与logger、root中定义的日志级别相配合，相当于两个闸门，先判断logger、root的级别，符合了才会用到该filter中的level，此时再进行一次筛选--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ThresholdFilter</span> <span class="attr">level</span>=<span class="string">&quot;TRACE&quot;</span> <span class="attr">onMatch</span>=<span class="string">&quot;ACCEPT&quot;</span> <span class="attr">onMismatch</span>=<span class="string">&quot;DENY&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;ThresholdFilter level=&quot;DEBUG&quot; onMatch=&quot;ACCEPT&quot; onMismatch=&quot;DENY&quot;/&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;ThresholdFilter level=&quot;INFO&quot; onMatch=&quot;ACCEPT&quot; onMismatch=&quot;DENY&quot;/&gt;--&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">Filters</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- Policies :日志滚动策略--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Policies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;TimeBasedTriggeringPolicy interval=&quot;1&quot; modulate=&quot;true&quot;/&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">CronTriggeringPolicy</span> <span class="attr">schedule</span>=<span class="string">&quot;0 0 2 * * ?&quot;</span> <span class="attr">evaluateOnStartup</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">Policies</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">DefaultRolloverStrategy</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Delete</span> <span class="attr">basePath</span>=<span class="string">&quot;$&#123;logpath&#125;&quot;</span> <span class="attr">maxDepth</span>=<span class="string">&quot;2&quot;</span> <span class="attr">followLinks</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">IfFileName</span> <span class="attr">glob</span>=<span class="string">&quot;system.log.*.gz&quot;</span>/&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--只保留7天，超过则删除--&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">IfLastModified</span> <span class="attr">age</span>=<span class="string">&quot;7d&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Delete</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">DefaultRolloverStrategy</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">RollingRandomAccessFile</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RollingRandomAccessFile</span> <span class="attr">name</span>=<span class="string">&quot;YZY.ERROR&quot;</span> <span class="attr">immediateFlush</span>=<span class="string">&quot;true&quot;</span> <span class="attr">bufferSize</span>=<span class="string">&quot;4096&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">fileName</span>=<span class="string">&quot;$&#123;logpath&#125;/error.log&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">filePattern</span>=<span class="string">&quot;$&#123;logpath&#125;/error.log.%d&#123;yyyy-MM-dd&#125;.gz&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">ignoreExceptions</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">&quot;$&#123;pattern&#125;&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;$&#123;charset&#125;&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Filters</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ThresholdFilter</span> <span class="attr">level</span>=<span class="string">&quot;ERROR&quot;</span> <span class="attr">onMatch</span>=<span class="string">&quot;ACCEPT&quot;</span> <span class="attr">onMismatch</span>=<span class="string">&quot;DENY&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">Filters</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">TimeBasedTriggeringPolicy</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">DefaultRolloverStrategy</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Delete</span> <span class="attr">basePath</span>=<span class="string">&quot;$&#123;logpath&#125;&quot;</span> <span class="attr">maxDepth</span>=<span class="string">&quot;2&quot;</span> <span class="attr">followLinks</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">IfFileName</span> <span class="attr">glob</span>=<span class="string">&quot;error.log.*.gz&quot;</span>/&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">IfLastModified</span> <span class="attr">age</span>=<span class="string">&quot;7d&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Delete</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">DefaultRolloverStrategy</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">RollingRandomAccessFile</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RollingRandomAccessFile</span> <span class="attr">name</span>=<span class="string">&quot;YZY.AUDIT&quot;</span> <span class="attr">immediateFlush</span>=<span class="string">&quot;false&quot;</span> <span class="attr">bufferSize</span>=<span class="string">&quot;8192&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">fileName</span>=<span class="string">&quot;$&#123;logpath&#125;/audit.log&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">filePattern</span>=<span class="string">&quot;$&#123;logpath&#125;/audit.log.%d&#123;yyyy-MM-dd&#125;.gz&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">ignoreExceptions</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">&quot;$&#123;pattern&#125;&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;$&#123;charset&#125;&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Filters</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ThresholdFilter</span> <span class="attr">level</span>=<span class="string">&quot;WARN&quot;</span> <span class="attr">onMatch</span>=<span class="string">&quot;ACCEPT&quot;</span> <span class="attr">onMismatch</span>=<span class="string">&quot;DENY&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">Filters</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">TimeBasedTriggeringPolicy</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">DefaultRolloverStrategy</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Delete</span> <span class="attr">basePath</span>=<span class="string">&quot;$&#123;logpath&#125;&quot;</span> <span class="attr">maxDepth</span>=<span class="string">&quot;2&quot;</span> <span class="attr">followLinks</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">IfFileName</span> <span class="attr">glob</span>=<span class="string">&quot;audit.log.*.gz&quot;</span>/&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">IfLastModified</span> <span class="attr">age</span>=<span class="string">&quot;7d&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Delete</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">DefaultRolloverStrategy</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">RollingRandomAccessFile</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RollingRandomAccessFile</span> <span class="attr">name</span>=<span class="string">&quot;YZY.POOL&quot;</span> <span class="attr">immediateFlush</span>=<span class="string">&quot;true&quot;</span> <span class="attr">bufferSize</span>=<span class="string">&quot;1024&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">fileName</span>=<span class="string">&quot;$&#123;logpath&#125;/pool.log&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">filePattern</span>=<span class="string">&quot;$&#123;logpath&#125;/pool.log.%d&#123;yyyy-MM-dd&#125;.gz&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">ignoreExceptions</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">&quot;$&#123;pattern&#125;&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;$&#123;charset&#125;&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">TimeBasedTriggeringPolicy</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">DefaultRolloverStrategy</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Delete</span> <span class="attr">basePath</span>=<span class="string">&quot;$&#123;logpath&#125;&quot;</span> <span class="attr">maxDepth</span>=<span class="string">&quot;2&quot;</span> <span class="attr">followLinks</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">IfFileName</span> <span class="attr">glob</span>=<span class="string">&quot;pool.log.*.gz&quot;</span>/&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">IfLastModified</span> <span class="attr">age</span>=<span class="string">&quot;3d&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Delete</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">DefaultRolloverStrategy</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">RollingRandomAccessFile</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RollingRandomAccessFile</span> <span class="attr">name</span>=<span class="string">&quot;YZY.MONITOR&quot;</span> <span class="attr">immediateFlush</span>=<span class="string">&quot;true&quot;</span> <span class="attr">bufferSize</span>=<span class="string">&quot;1024&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">fileName</span>=<span class="string">&quot;$&#123;logpath&#125;/monitor.log&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">filePattern</span>=<span class="string">&quot;$&#123;logpath&#125;/pool.log.%d&#123;yyyy-MM-dd&#125;.gz&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">ignoreExceptions</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">&quot;$&#123;pattern&#125;&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;$&#123;charset&#125;&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">TimeBasedTriggeringPolicy</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">DefaultRolloverStrategy</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Delete</span> <span class="attr">basePath</span>=<span class="string">&quot;$&#123;logpath&#125;&quot;</span> <span class="attr">maxDepth</span>=<span class="string">&quot;2&quot;</span> <span class="attr">followLinks</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">IfFileName</span> <span class="attr">glob</span>=<span class="string">&quot;pool.log.*.gz&quot;</span>/&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">IfLastModified</span> <span class="attr">age</span>=<span class="string">&quot;3d&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Delete</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">DefaultRolloverStrategy</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">RollingRandomAccessFile</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RollingRandomAccessFile</span> <span class="attr">name</span>=<span class="string">&quot;YZY.BIZ&quot;</span> <span class="attr">immediateFlush</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">fileName</span>=<span class="string">&quot;$&#123;logpath&#125;/biz.log&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">filePattern</span>=<span class="string">&quot;$&#123;logpath&#125;/biz.log.%d&#123;yyyy-MM-dd&#125;.gz&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">ignoreExceptions</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">&quot;$&#123;pattern&#125;&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;$&#123;charset&#125;&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">TimeBasedTriggeringPolicy</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">DefaultRolloverStrategy</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Delete</span> <span class="attr">basePath</span>=<span class="string">&quot;$&#123;logpath&#125;&quot;</span> <span class="attr">maxDepth</span>=<span class="string">&quot;2&quot;</span> <span class="attr">followLinks</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">IfFileName</span> <span class="attr">glob</span>=<span class="string">&quot;biz.log.*.gz&quot;</span>/&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">IfLastModified</span> <span class="attr">age</span>=<span class="string">&quot;7d&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Delete</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">DefaultRolloverStrategy</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">RollingRandomAccessFile</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">appenders</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">&lt;!--然后定义logger，只有定义了logger并引入的appender，appender才会生效--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">loggers</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--additivity=&quot;false&quot;表示在该logger中输出的日志不会再延伸到父层logger。这里如果改为true，则会延伸到Root Logger，遵循Root Logger的配置也输出一次。--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Logger</span> <span class="attr">additivity</span>=<span class="string">&quot;false&quot;</span> <span class="attr">name</span>=<span class="string">&quot;YZY.TRACE&quot;</span> <span class="attr">level</span>=<span class="string">&quot;INFO&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;YZY.TRACE&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Logger</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Logger</span> <span class="attr">additivity</span>=<span class="string">&quot;false&quot;</span> <span class="attr">name</span>=<span class="string">&quot;YZY.SYSTEM&quot;</span> <span class="attr">level</span>=<span class="string">&quot;INFO&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;YZY.SYSTEM&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;YZY.ERROR&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Logger</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Logger</span> <span class="attr">additivity</span>=<span class="string">&quot;false&quot;</span> <span class="attr">name</span>=<span class="string">&quot;YZY.BIZ&quot;</span> <span class="attr">level</span>=<span class="string">&quot;INFO&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;YZY.BIZ&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Logger</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--Logger节点用来单独指定日志的形式，name为包路径,比如要为org.apache包下所有日志指定为INFO级别等。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Logger</span> <span class="attr">additivity</span>=<span class="string">&quot;false&quot;</span> <span class="attr">name</span>=<span class="string">&quot;org.apache&quot;</span> <span class="attr">level</span>=<span class="string">&quot;INFO&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;console&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Logger</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Logger</span> <span class="attr">additivity</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">name</span>=<span class="string">&quot;com.alibaba.dubbo.common.threadpool.monitor.MonitorPoolRunnable&quot;</span> <span class="attr">level</span>=<span class="string">&quot;INFO&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;YZY.POOL&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Logger</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Logger</span> <span class="attr">additivity</span>=<span class="string">&quot;false&quot;</span> <span class="attr">name</span>=<span class="string">&quot;com.alibaba.dubbo.monitor.dubbo.sfextend.SfMonitorExtend&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">level</span>=<span class="string">&quot;INFO&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;YZY.MONITOR&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Logger</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--针对,request以及reponse的信息配置输出级别,生产线请配置为error--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Logger</span> <span class="attr">additivity</span>=<span class="string">&quot;true&quot;</span> <span class="attr">name</span>=<span class="string">&quot;com.alibaba.dubbo.rpc.protocol.rest.support&quot;</span> <span class="attr">level</span>=<span class="string">&quot;INFO&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;console&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Logger</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 在开发和测试环境启用,输出sql --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Logger</span> <span class="attr">additivity</span>=<span class="string">&quot;true&quot;</span> <span class="attr">name</span>=<span class="string">&quot;com.YZY.mapper&quot;</span> <span class="attr">level</span>=<span class="string">&quot;DEBUG&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Logger</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Root节点用来指定项目的根日志，如果没有单独指定Logger，那么就会默认使用该Root日志输出 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Root</span> <span class="attr">level</span>=<span class="string">&quot;DEBUG&quot;</span> <span class="attr">includeLocation</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;console&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;YZY.SYSTEM&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;YZY.ERROR&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;YZY.AUDIT&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Root</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">loggers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>log4j2.xml（RollingFile形式）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="comment">&lt;!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span> <span class="attr">monitorInterval</span>=<span class="string">&quot;5&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--日志级别以及优先级排序: OFF &gt; FATAL &gt; ERROR &gt; WARN &gt; INFO &gt; DEBUG &gt; TRACE &gt; ALL --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--变量配置--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Properties</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 格式化输出：%date表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度 %msg：日志消息，%n是换行符--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- %logger&#123;36&#125; 表示 Logger 名字最长36个字符 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;LOG_PATTERN&quot;</span> <span class="attr">value</span>=<span class="string">&quot;%date&#123;HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;36&#125; - %msg%n&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 定义日志存储的路径 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;FILE_PATH&quot;</span> <span class="attr">value</span>=<span class="string">&quot;更换为你的日志路径&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;FILE_NAME&quot;</span> <span class="attr">value</span>=<span class="string">&quot;更换为你的项目名&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">appenders</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">console</span> <span class="attr">name</span>=<span class="string">&quot;Console&quot;</span> <span class="attr">target</span>=<span class="string">&quot;SYSTEM_OUT&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--输出日志的格式--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">&quot;$&#123;LOG_PATTERN&#125;&quot;</span>/&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--控制台只输出level及其以上级别的信息（onMatch），其他的直接拒绝（onMismatch）--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ThresholdFilter</span> <span class="attr">level</span>=<span class="string">&quot;info&quot;</span> <span class="attr">onMatch</span>=<span class="string">&quot;ACCEPT&quot;</span> <span class="attr">onMismatch</span>=<span class="string">&quot;DENY&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">console</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--文件会打印出所有信息，这个log每次运行程序会自动清空，由append属性决定，适合临时测试用--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">File</span> <span class="attr">name</span>=<span class="string">&quot;Filelog&quot;</span> <span class="attr">fileName</span>=<span class="string">&quot;$&#123;FILE_PATH&#125;/test.log&quot;</span> <span class="attr">append</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">&quot;$&#123;LOG_PATTERN&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">File</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 这个会打印出所有的info及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RollingFile</span> <span class="attr">name</span>=<span class="string">&quot;RollingFileInfo&quot;</span> <span class="attr">fileName</span>=<span class="string">&quot;$&#123;FILE_PATH&#125;/info.log&quot;</span> <span class="attr">filePattern</span>=<span class="string">&quot;$&#123;FILE_PATH&#125;/$&#123;FILE_NAME&#125;-INFO-%d&#123;yyyy-MM-dd&#125;_%i.log.gz&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ThresholdFilter</span> <span class="attr">level</span>=<span class="string">&quot;info&quot;</span> <span class="attr">onMatch</span>=<span class="string">&quot;ACCEPT&quot;</span> <span class="attr">onMismatch</span>=<span class="string">&quot;DENY&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">&quot;$&#123;LOG_PATTERN&#125;&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Policies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--interval属性用来指定多久滚动一次，默认是1 hour--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TimeBasedTriggeringPolicy</span> <span class="attr">interval</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">SizeBasedTriggeringPolicy</span> <span class="attr">size</span>=<span class="string">&quot;10MB&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">Policies</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件开始覆盖--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">DefaultRolloverStrategy</span> <span class="attr">max</span>=<span class="string">&quot;15&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">RollingFile</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 这个会打印出所有的warn及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RollingFile</span> <span class="attr">name</span>=<span class="string">&quot;RollingFileWarn&quot;</span> <span class="attr">fileName</span>=<span class="string">&quot;$&#123;FILE_PATH&#125;/warn.log&quot;</span> <span class="attr">filePattern</span>=<span class="string">&quot;$&#123;FILE_PATH&#125;/$&#123;FILE_NAME&#125;-WARN-%d&#123;yyyy-MM-dd&#125;_%i.log.gz&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ThresholdFilter</span> <span class="attr">level</span>=<span class="string">&quot;warn&quot;</span> <span class="attr">onMatch</span>=<span class="string">&quot;ACCEPT&quot;</span> <span class="attr">onMismatch</span>=<span class="string">&quot;DENY&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">&quot;$&#123;LOG_PATTERN&#125;&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Policies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--interval属性用来指定多久滚动一次，默认是1 hour--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TimeBasedTriggeringPolicy</span> <span class="attr">interval</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">SizeBasedTriggeringPolicy</span> <span class="attr">size</span>=<span class="string">&quot;10MB&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">Policies</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件开始覆盖--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">DefaultRolloverStrategy</span> <span class="attr">max</span>=<span class="string">&quot;15&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">RollingFile</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 这个会打印出所有的error及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RollingFile</span> <span class="attr">name</span>=<span class="string">&quot;RollingFileError&quot;</span> <span class="attr">fileName</span>=<span class="string">&quot;$&#123;FILE_PATH&#125;/error.log&quot;</span> <span class="attr">filePattern</span>=<span class="string">&quot;$&#123;FILE_PATH&#125;/$&#123;FILE_NAME&#125;-ERROR-%d&#123;yyyy-MM-dd&#125;_%i.log.gz&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ThresholdFilter</span> <span class="attr">level</span>=<span class="string">&quot;error&quot;</span> <span class="attr">onMatch</span>=<span class="string">&quot;ACCEPT&quot;</span> <span class="attr">onMismatch</span>=<span class="string">&quot;DENY&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">&quot;$&#123;LOG_PATTERN&#125;&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Policies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--interval属性用来指定多久滚动一次，默认是1 hour--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TimeBasedTriggeringPolicy</span> <span class="attr">interval</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">SizeBasedTriggeringPolicy</span> <span class="attr">size</span>=<span class="string">&quot;10MB&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">Policies</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件开始覆盖--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">DefaultRolloverStrategy</span> <span class="attr">max</span>=<span class="string">&quot;15&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">RollingFile</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">appenders</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--Logger节点用来单独指定日志的形式，比如要为指定包下的class指定不同的日志级别等。--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--然后定义loggers，只有定义了logger并引入的appender，appender才会生效--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">loggers</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--过滤掉spring和mybatis的一些无用的DEBUG信息--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">&quot;org.mybatis&quot;</span> <span class="attr">level</span>=<span class="string">&quot;info&quot;</span> <span class="attr">additivity</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;Console&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">logger</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--监控系统信息--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--若是additivity设为false，则 子Logger 只会在自己的appender里输出，而不会在 父Logger 的appender里输出。--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Logger</span> <span class="attr">name</span>=<span class="string">&quot;org.springframework&quot;</span> <span class="attr">level</span>=<span class="string">&quot;info&quot;</span> <span class="attr">additivity</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;Console&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Logger</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">&quot;info&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;Console&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;Filelog&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;RollingFileInfo&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;RollingFileWarn&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;RollingFileError&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">loggers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>log4j2.yml</p><p>解析log4j2.yml要注意添加一个依赖</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;!--</span> <span class="string">加上这个才能辨认到log4j2.yml文件</span> <span class="string">--&gt;</span></span><br><span class="line"><span class="string">&lt;dependency&gt;</span></span><br><span class="line">    <span class="string">&lt;groupId&gt;com.fasterxml.jackson.dataformat&lt;/groupId&gt;</span></span><br><span class="line">    <span class="string">&lt;artifactId&gt;jackson-dataformat-yaml&lt;/artifactId&gt;</span></span><br><span class="line"><span class="string">&lt;/dependency&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"># 共有8个级别，按照从低到高为：ALL &lt; TRACE &lt; DEBUG &lt; INFO &lt; WARN &lt; ERROR &lt; FATAL &lt; OFF。</span><br><span class="line"># status：用于设置log4j2自身内部的信息输出，可以不设置</span><br><span class="line"># monitorInterval：log4j2监测配置文件的时间间隔，如果文件被修改，则重新加载</span><br><span class="line">Configuration:</span><br><span class="line">  status: warn</span><br><span class="line">  monitorInterval: 30</span><br><span class="line"></span><br><span class="line">  Properties: # 定义全局变量</span><br><span class="line">    Property:</span><br><span class="line">      - name: log.level.console</span><br><span class="line">        value: info</span><br><span class="line">      - name: log.path</span><br><span class="line">      # “sys:”表示：如果VM参数中没指定这个变量值，则使用本文件中定义的缺省全局变量值</span><br><span class="line">      # $&#123;sys:catalina.home&#125; 指向tomcat安装目录</span><br><span class="line">        value: $&#123;sys:catalina.home&#125;/logs</span><br><span class="line">      - name: project.name</span><br><span class="line">        value: CloudEmploy</span><br><span class="line">      - name: log.pattern</span><br><span class="line">        value: &quot;%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; -%5p $&#123;PID:-&#125; [%15.15t] %-30.30C&#123;1.&#125; : %m%n&quot;</span><br><span class="line"></span><br><span class="line">  Appenders:</span><br><span class="line">    Console:  # 输出到控制台</span><br><span class="line">      name: CONSOLE</span><br><span class="line">      target: SYSTEM_OUT</span><br><span class="line">      PatternLayout:</span><br><span class="line">        pattern: $&#123;log.pattern&#125;</span><br><span class="line">    RollingFile: # 打印到文件</span><br><span class="line">      - name: ROLLING_FILE</span><br><span class="line">        # fileName  指定当前日志文件的位置和文件名称</span><br><span class="line">        fileName: $&#123;log.path&#125;/$&#123;project.name&#125;.log</span><br><span class="line">        # filePattern  指定当发生Rolling时，文件的转移和重命名规则</span><br><span class="line">        filePattern: &quot;$&#123;log.path&#125;/$$&#123;date:yyyy-MM&#125;/$&#123;project.name&#125;-%d&#123;yyyy-MM-dd&#125;-%i.log.gz&quot;</span><br><span class="line">        PatternLayout:</span><br><span class="line">          pattern: $&#123;log.pattern&#125;</span><br><span class="line">        Filters:</span><br><span class="line">          ThresholdFilter:</span><br><span class="line">            - level: $&#123;sys:log.level.console&#125;</span><br><span class="line">              onMatch: ACCEPT</span><br><span class="line">              onMismatch: DENY</span><br><span class="line">        Policies:</span><br><span class="line">          TimeBasedTriggeringPolicy:  # 按天分类</span><br><span class="line">            modulate: true</span><br><span class="line">            interval: 1</span><br><span class="line">        DefaultRolloverStrategy:     # 文件最多100个</span><br><span class="line">          max: 100</span><br><span class="line"></span><br><span class="line"># 只有定义了 Loggers，并引入 Appenders，Appenders才会生效</span><br><span class="line">  Loggers:</span><br><span class="line">    Root:</span><br><span class="line">      level: error</span><br><span class="line">      AppenderRef:</span><br><span class="line">        - ref: CONSOLE</span><br><span class="line">        - ref: ROLLING_FILE</span><br><span class="line"></span><br><span class="line">    Logger: # 为com.***包配置特殊的Log级别，方便调试，trace会打印SQL具体结果，debug只打印SQL语句</span><br><span class="line">      - name: com.***.mapper</span><br><span class="line">        additivity: false</span><br><span class="line">        level: trace</span><br><span class="line">        AppenderRef:</span><br><span class="line">          - ref: CONSOLE</span><br><span class="line">          - ref: ROLLING_FILE</span><br></pre></td></tr></table></figure><h4 id="4-配置参数说明">4. 配置参数说明</h4><h5 id="4-1-日志级别">4.1 日志级别</h5><ul><li>trace：追踪，就是程序推进一下，可以写个trace输出</li><li>debug：调试，一般作为最低级别，trace基本不用。</li><li>info：输出重要的信息，使用较多</li><li>warn：警告，有些信息不是错误信息，但也要给程序员一些提示。</li><li>error：错误信息。用的也很多。</li><li>fatal：致命错误。</li></ul><h5 id="4-2-输出源">4.2 输出源</h5><ul><li>CONSOLE（输出到控制台）</li><li>FILE（输出到文件）</li></ul><h5 id="4-3-输出格式">4.3 输出格式</h5><ul><li><p>SimpleLayout：以简单的形式显示</p></li><li><p>HTMLLayout：以HTML表格显示</p></li><li><p>PatternLayout：自定义形式显示</p></li><li><p>自定义格式如下：</p><blockquote><p>%d{yyyy-MM-dd HH:mm:ss, SSS} : 日志生产时间,输出到毫秒的时间</p><p>%-5level : 输出日志级别，-5表示左对齐并且固定输出5个字符，如果不足在右边补0</p><p>%c : logger的名称(%logger)</p><p>%t : 输出当前线程名称</p><p>%p : 日志输出格式</p><p>%m : 日志内容，即 <a href="http://logger.info">logger.info</a>(“message”)</p><p>%n : 换行符</p><p>%C : Java类名(%F)</p><p>%L : 行号</p><p>%M : 方法名</p><p>%l : 输出语句所在的行数, 包括类名、方法名、文件名、行数</p><p>hostName : 本地机器名</p><p>hostAddress : 本地ip地址</p></blockquote></li></ul><h4 id="5-log4j2配置详解">5. log4j2配置详解</h4><p>根节点Configuration，有两个属性:</p><ul><li>status</li><li>monitorinterval</li></ul><p>有两个子节点:</p><ul><li>Appenders</li><li>Loggers(表明可以定义多个Appender和Logger).</li></ul><p>status用来指定log4j本身的打印日志的级别.<br>monitorinterval用于指定log4j自动重新配置的监测间隔时间，单位是s,最小是5s.</p><p>Appenders节点，常见的有三种子节点:Console、RollingFile、File</p><p><strong>Console节点用来定义输出到控制台的Appender</strong>.</p><ul><li>name:指定Appender的名字.</li><li>target:SYSTEM_OUT 或 SYSTEM_ERR,一般只设置默认:SYSTEM_OUT.</li><li>PatternLayout:输出格式，不设置默认为:%m%n.</li></ul><p><strong>File节点用来定义输出到指定位置的文件的Appender</strong>.</p><ul><li>name:指定Appender的名字.</li><li>fileName:指定输出日志的目的文件带全路径的文件名.</li><li>PatternLayout:输出格式，不设置默认为:%m%n.</li></ul><p><strong>RollingFile节点用来定义超过指定条件自动删除旧的创建新的Appender</strong>.</p><ul><li>name:指定Appender的名字.</li><li>fileName:指定输出日志的目的文件带全路径的文件名.</li><li>PatternLayout:输出格式，不设置默认为:%m%n.</li><li>filePattern : 指定当发生Rolling时，文件的转移和重命名规则.</li><li>Policies:指定滚动日志的策略，就是什么时候进行新建日志文件输出日志.</li><li>TimeBasedTriggeringPolicy:Policies子节点，基于时间的滚动策略，interval属性用来指定多久滚动一次，默认是1 hour。modulate=true用来调整时间：比如现在是早上3am，interval是4，那么第一次滚动是在4am，接着是8am，12am…而不是7am.</li><li>SizeBasedTriggeringPolicy:Policies子节点，基于指定文件大小的滚动策略，size属性用来定义每个日志文件的大小.</li><li>DefaultRolloverStrategy:用来指定同一个文件夹下最多有几个日志文件时开始删除最旧的，创建新的(通过max属性)。</li></ul><p><strong>Loggers节点，常见的有两种:Root和Logger</strong>.<br>Root节点用来指定项目的根日志，如果没有单独指定Logger，那么就会默认使用该Root日志输出</p><ul><li>level:日志输出级别，共有8个级别，按照从低到高为：All &lt; Trace &lt; Debug &lt; Info &lt; Warn &lt; Error &lt; AppenderRef：Root的子节点，用来指定该日志输出到哪个Appender.</li><li>Logger节点用来单独指定日志的形式，比如要为指定包下的class指定不同的日志级别等。</li><li>level:日志输出级别，共有8个级别，按照从低到高为：All &lt; Trace &lt; Debug &lt; Info &lt; Warn &lt; Error &lt; Fatal &lt; OFF.</li><li>name:用来指定该Logger所适用的类或者类所在的包全路径,继承自Root节点.</li><li>AppenderRef：Logger的子节点，用来指定该日志输出到哪个Appender,如果没有指定，就会默认继承自Root.如果指定了，那么会在指定的这个Appender和Root的Appender中都会输出，此时我们可以设置Logger的additivity=&quot;false&quot;只在自定义的Appender中进行输出。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Develop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Log4j2 </tag>
            
            <tag> Logback </tag>
            
            <tag> 日志 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker命令</title>
      <link href="/2020/12/15/docker%E5%91%BD%E4%BB%A4/"/>
      <url>/2020/12/15/docker%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<p>####1. docker镜像由本地push到远程仓库</p><p>第一步，登录远程仓库。<code>docker login http://192.168.0.1</code></p><p>第二步，创建私有仓库的项目文件目录<code>abc</code>。</p><p>第三步，给推送的镜像打tag。<code>docker tag 2e25d8496557 192.168.0.1/abc/arc:1334</code></p><p>注意： 2e25d8496557：IMAGE ID，可以用<code>docker images arc:1334</code>查看</p><p>192.168.0.1：远程仓库地址</p><p>abc：项目名称</p><p>arc：镜像名称</p><p>1334：镜像版本号</p><p>第四步，推送镜像到远程仓库。<code>docker push 192.168.0.1/abc/arc:1334</code></p><h4 id="2-docker镜像由本地push到dockerhub">2. docker镜像由本地push到dockerhub</h4><p>第一步，在DockerHub上注册一个用户，注册地址为<code>https://hub.docker.com</code>。</p><p>第二步，在终端登录dockerHub。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">运行 docker login 命令，按照提示输入注册的用户名和密码即可登录</span><br><span class="line">[root@k8s-node-3 home]# docker login</span><br><span class="line">Login with your Docker ID to push and pull images from Docker Hub. If you don&#x27;t have a Docker ID, head over to https://hub.docker.com to create one.</span><br><span class="line">Username: 10220208</span><br><span class="line">Password: </span><br><span class="line">Login Succeeded</span><br></pre></td></tr></table></figure><p>第三步，用docker tag命令修改本地镜像名。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">（1） push的规范是： docker push  注册用户名 / 镜像名</span><br><span class="line">（2） docker tag 修改本地镜像名：如 docker tag kubeflow/pytorch-dist-mnist-test:1.5 10220208/pytorch-dist-mnist-test-1.5:v1.5</span><br></pre></td></tr></table></figure><p>第四步，push镜像到dockerHub</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker push 10220208/pytorch-dist-mnist-test-1.5:v1.5</span><br><span class="line">push 速度根据镜像大小而定，大的镜像push比较慢，耐心等待即可，如果push失败，则重新push即可。</span><br></pre></td></tr></table></figure><h4 id="3-搜索镜像">3. 搜索镜像</h4><p><code>docker search 想要查询的镜像</code></p><p>参数介绍如下：</p><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">介绍</th></tr></thead><tbody><tr><td style="text-align:left">–automated=true</td><td style="text-align:left">false仅显示自动创建的镜像，默认为否</td></tr><tr><td style="text-align:left">–no-trunc=true</td><td style="text-align:left">false输出信息不截断显示，默认为否</td></tr><tr><td style="text-align:left">-s，–stars=X</td><td style="text-align:left">指定仅显示评价为指定星级以上的镜像，默认为0，即输出所有满足条件的镜像</td></tr></tbody></table><h4 id="4-下载镜像">4. 下载镜像</h4><p><code>docker pull &lt;image_name&gt;:&lt;tag&gt;</code>     其中image_name为镜像名称，tag为镜像的版本</p><table><thead><tr><th>参数</th><th>介绍</th></tr></thead><tbody><tr><td>-a，–all-tags=true | false</td><td>表示是否获取仓库中的所有镜像，默认为否</td></tr></tbody></table><p>查看镜像、容器、数据卷所占用的空间命令：<code>docker system df</code></p><h4 id="5-列出镜像目录">5. 列出镜像目录</h4><table><thead><tr><th>参数</th><th>介绍</th></tr></thead><tbody><tr><td>-a，–all=true | false</td><td>列出所有的镜像文件(包含临时文件)，默认为否</td></tr><tr><td>–digests=true | false</td><td>列出镜像的数字摘要值，默认为否</td></tr><tr><td>-f，–filter=[]</td><td>过滤列出的镜像，如dangling=true只显示没有被使用的镜像，也可指定带有特定标注的镜像等</td></tr><tr><td>–format=“TEMPLATE”</td><td>控制输出格式，如.ID代表ID信息，.Repository代表仓库信息等</td></tr><tr><td>–no-trunc=true | false</td><td>对输出结果中太长的部分是否进行截断，如镜像的ID信息，默认为是</td></tr><tr><td>-q，–quiet=true | false</td><td>仅输出ID信息，默认为否</td></tr></tbody></table><h4 id="6-创建容器">6. 创建容器</h4><p><code>docker run -i -t --name &lt;container_name&gt; &lt;image_name&gt; /bin/bash</code></p><p>参数解释：</p><ul><li>参数<code>-t</code>让Docker分配一个伪终端并绑定在容器的标准输入上，<code>-i</code>让容器的标准输入保持打开</li><li>–name &lt;container_name&gt;为设定容器名称，如果不设定docker会自定义一个容器名称</li><li>&lt;image_name&gt;为镜像名称</li><li>/bin/bash为启动一个bash交互终端</li></ul><p>其他的参数介绍</p><ul><li>-a stdin：指定标准输入输出内容类型，可选 STDIN/STDOUT/STDERR 三项；</li><li>-d：后台运行容器，并返回容器ID；</li><li>-i：以交互模式运行容器，通常与 -t 同时使用；</li><li>-t：为容器重新分配一个伪输入终端，通常与 -i 同时使用；</li><li>–name=“nginx-lb”：为容器指定一个名称；</li><li>–dns 8.8.8.8：指定容器使用的DNS服务器，默认和宿主一致；</li><li>–dns-search <a href="http://example.com">example.com</a>：指定容器DNS搜索域名，默认和宿主一致；</li><li>-h “mars”：指定容器的hostname；</li><li>-e username=“ritchie”：设置环境变量；</li><li>–env-file=[]：从指定文件读入环境变量；</li><li>–cpuset=“0-2” or --cpuset=“0,1,2”：绑定容器到指定CPU运行；</li><li>-m：设置容器使用内存最大值；</li><li>–net=“bridge”：指定容器的网络连接类型，支持 bridge/host/none/container: 四种类型；</li><li>–link=[]：添加链接到另一个容器，可以使得该容器与其他容器可以进行网络访问；</li><li>–expose=[]：开放一个端口或一组端口；</li></ul><h4 id="7-查看容器状态">7. 查看容器状态</h4><p><code>docker start &lt;container_name&gt;</code>     可以通过docker ps查看容器，可以看到状态为UP开启</p><h4 id="8-容器的重启、停止">8. 容器的重启、停止</h4><p><code>docker restart &lt;container_name&gt;</code></p><p><code>docker stop &lt;container_name&gt;</code></p><h4 id="9-获取容器的Root权限">9. 获取容器的Root权限</h4><p><code>docker exec -ti -u root &lt;container_name&gt; bash</code></p><h4 id="10-查看容器的环境变量">10. 查看容器的环境变量</h4><p><code>docker exec -it &lt;container_name&gt; env</code></p><h4 id="11-连接容器">11. 连接容器</h4><p><code>docker attach &lt;container_name&gt;或&lt;container_id&gt;</code></p><p>参数介绍：</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>–detach-keys[=[]]</td><td>指定退出attach模式的快捷键序列，默认是 CTRL-p，CTRL-q</td></tr><tr><td>–no-stdin=true</td><td>false是否关闭标准输入，默认是保持打开</td></tr><tr><td>–sig-proxy=true</td><td>false是否代理收到的系统信号给应用进程，默认为true</td></tr></tbody></table><h4 id="12-外部运行容器内命令">12. 外部运行容器内命令</h4><p><code>docker exec &lt;container_name&gt;或&lt;container_id&gt; 需要执行的命令</code></p><p>eg: <code>docker exec docker_contain001 echo &quot;hello world&quot;</code></p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>-i, --interactive=true | false</td><td>打开标准输入接受用户输入命令，默认为false</td></tr><tr><td>–privileged=true | false</td><td>是否给执行命令以高权限，默认为false</td></tr><tr><td>-t, --tty=true | false</td><td>分配伪终端，默认为false</td></tr><tr><td>-u, --user=“”</td><td>执行命令的用户名或ID</td></tr></tbody></table><p>推荐使用：<code>docker exec -it &lt;container_name&gt; /bin/bash</code> 进入容器并打开终端</p><h4 id="13-删除容器、镜像">13. 删除容器、镜像</h4><p>容器正在运行，强行删除容器：<code>docker rm -f &lt;container_name&gt;</code></p><p>容器没有运行，强行删除容器：<code>docker rm &lt;container_name&gt;</code></p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>-f, --force=false</td><td>是否强行终止并删除一个运行中的容器</td></tr><tr><td>-l, --link=false</td><td>删除容器的连接，但保留容器</td></tr><tr><td>-v, --volumes=false</td><td>删除容器挂载的数据卷</td></tr></tbody></table><p>镜像正在容器中运行，强行删除镜像：<code>docker rmi -f &lt;image_name&gt;:&lt;tag&gt;</code></p><p>镜像没有正在容器中运行，强行删除镜像：<code>docker rmi &lt;image_name&gt;:&lt;tag&gt;</code></p><p>注意：<strong>先删除容器再删除镜像！</strong></p><h4 id="14-导入和导出容器">14. 导入和导出容器</h4><p>导出容器(导出一个已经创建的容器到一个文件)：<code>docker export [-o | --output [=&quot;&quot;]] container_name</code></p><p>可以通过-o选项来指定导出的tar文件名，也可以直接通过重定向来实现。例如：</p><blockquote><p>docker export -o test_for_run.tar ce5</p><p>docker export e81 &gt; test_for_stop.tar</p></blockquote><p>可将导出的tar文件传输到其他机器上，然后再通过导入命令导入到系统中，从而实现容器的迁移</p><p>导入容器：<code>docker import [-c | --change [= [] ] ] [-m | --message[=MESSAGE]] file|URL| - [REPOSITORY[:TAG]]</code></p><p>用户可以通过-c，–change=[]选项在导入的同时执行对容器进行修改的Dockerfile指令。例如：</p><p><code>docker import test_for_run.tar - test/ubuntu:v1.0</code></p><p>docker load命令可以导入镜像存储文件到本地镜像库，docker import命令可以导入一个容器快照到本地镜像库</p><p>这两者的区别在于容器快照文件将丢弃所有的历史记录和元数据信息（仅保存容器当时的快照状态），而镜像存储文件将保存完整记录，体积也更大。此外，从容器快照文件导入时可以重新指定标签等元数据信息。</p><h4 id="15-查看镜像历史记录">15. 查看镜像历史记录</h4><p><code>docker history &lt;image_name&gt;:&lt;tag&gt;</code></p><h4 id="16-使用cp命令复制文件">16. 使用cp命令复制文件</h4><p>将docker容器当中的文件复制到本地(容器必须是运行状态):</p><p><code>docker cp &lt;container_name&gt;:&lt;需要复制的容器文件路径&gt; &lt;复制到本地主机的文件路径&gt;</code></p><p>将本地文件复制到docker容器中(容器必须是运行状态):</p><p><code>docker cp &lt;本地文件路径&gt; &lt;container_name&gt;:&lt;复制到容器文件路径&gt;</code></p><h4 id="17-使用commit命令提交容器修改">17. 使用commit命令提交容器修改</h4><p><code>docker commit &lt;options&gt; &lt;container_name&gt; &lt;image_name&gt;:&lt;tag&gt;</code></p><p>options参数如下：</p><table><thead><tr><th>参数</th><th>介绍</th></tr></thead><tbody><tr><td>-a，–author=“”</td><td>作者信息</td></tr><tr><td>-c，–change=[]</td><td>提交的时候执行Dockerfile指令，包括CMD|ENTRYPOINT|ENV|LABEL|ONBUILD|USER|VOLUME|WORKDIR|等</td></tr><tr><td>-m，–message=“”</td><td>提交信息</td></tr><tr><td>-p，–pause=true</td><td>提交时暂停容器运行</td></tr></tbody></table><h4 id="18-使用diff命令检查容器文件的变动">18. 使用diff命令检查容器文件的变动</h4><p><code>docker diff &lt;container_name&gt;</code></p><p>A表示添加的文件;   C表示修改的文件;   D表示删除的文件</p><h4 id="19-使用inspect查看容器、镜像详细信息">19. 使用inspect查看容器、镜像详细信息</h4><p>查看容器的详细信息：<code>docker inspect &lt;container_name&gt;</code></p><p>查看镜像的详细信息：<code>docker inspect &lt;image_name&gt;:&lt;tag&gt;</code></p><p>当我们只要其中一项内容时，可以使用参数-f来指定，过滤节点根据json的结构来获取</p><p><code>docker inspect -f &#123;&#123;过滤节点&#125;&#125; &lt;container_name&gt;/&lt;image_name&gt;</code></p><p>eg:  获取单层节点信息，获取Id信息，则使用   <code>docker inspect -f '&#123;&#123;.Id&#125;&#125;' &lt;container_name&gt;/&lt;image_name&gt;</code></p><p>​       获取多层节点信息，获取Status信息，则使用    <code>docker inspect -f '&#123;&#123;.State.Status&#125;&#125;' &lt;container_name&gt;/&lt;image_name&gt;</code></p><h4 id="20-基于本地模板导入">20. 基于本地模板导入</h4><p>用户可以直接从一个操作系统模板文件导入一个镜像，命令： <code>docker import [OPTIONS] file | URL| - [REPOSITORY[:TAG]]</code></p><p>eg:      <code>cat ubuntu-14.04-x86_64-minimal.tar.gz | docker import - ubuntu:14.04</code></p><h4 id="21-导出和载入镜像">21. 导出和载入镜像</h4><p>导出镜像：<code>docker save -o &lt;本地文件名称&gt; &lt;image_name:tag&gt;</code></p><p>载入镜像：<code>docker load --input &lt;本地文件名称&gt;</code>   或  <code>docker load &lt; &lt;本地文件名称&gt;</code></p><h4 id="22-搭建docker私有仓库服务器">22. 搭建docker私有仓库服务器</h4><p>第一步， 下载docker注册服务器镜像。<code>docker pull registry:latest</code></p><p>第二步，运行注册服务器。</p><p><code>docker run -d -p &lt;主机port&gt;:&lt;容器port&gt; --name &lt;container_name&gt; -v &lt;存储目录&gt;:&lt;存储目录&gt; &lt;image_name&gt;</code></p><p>参数介绍：-d:  将容器设置为后台运行；-p:  设置容器端口；-v:  指定存储目录(需要建立对应关系，需要一致)</p><p>第三步，上传镜像(需要有tag标签)。</p><p>使用<code>docker tag &lt;image_name&gt;:&lt;tag&gt; &lt;new_image_name&gt;:&lt;tag&gt;</code>打上标签，向私有仓库上传镜像必须创建tag标签</p><p>new_image_name必须为&lt;私有仓库地址&gt;/&lt;image_name&gt;(eg: localhost:8001/ubuntu:18.01)；</p><p>使用<code>docker push &lt;new_image_name&gt;:&lt;tag&gt;</code>上传镜像；</p><p>使用<code>curl localhost:8001/ubuntu:18.01/_catalog</code>查看私有仓库当中的镜像；</p><p>在其他机器当中使用如下命令下载私有仓库的镜像。<code>docker pull &lt;私有仓库的IP&gt;:&lt;Port&gt;/&lt;image_name&gt;:&lt;tag&gt;</code></p><h4 id="23-Dockerfile介绍">23. Dockerfile介绍</h4><p>一般而言，Dockerfile分为四部分：基础镜像信息、维护者信息、镜像操作指令和容器启动时执行指令。一开始指明所基于的镜像名称，接下来一般是说明维护者信息。后面则是镜像操作指令，例如RUN指令，RUN指令将对镜像执行跟随的命令。每运行一条RUN指令，镜像就添加新的一层，并提交。最后是CMD指令，用来指定运行容器时的操作命令。</p><p>指令说明如下表：</p><table><thead><tr><th>指令</th><th>说明</th><th>命令</th></tr></thead><tbody><tr><td>FROM</td><td>指定所创建镜像的基础镜像</td><td>FROM centos:latest</td></tr><tr><td>MAINTAINER</td><td>指定维护者信息</td><td>MAINTAINER yyj</td></tr><tr><td>RUN</td><td>运行镜像时运行的Shell命令</td><td>RUN [“yum”,“install”,“httpd”]<br>RUN yum install httpd</td></tr><tr><td>CMD</td><td>指定启动容器时默认执行的Shell命令</td><td>CMD [“-c”,“/start.sh”]<br />CMD [“/usr/sbin/sshd”,“-D”]<br/>CMD /usr/sbin/sshd -D</td></tr><tr><td>LABEL</td><td>指定生成镜像的元数据标签信息</td><td>LABEL <key>=<value> …</td></tr><tr><td>EXPOSE</td><td>声明镜像内服务所监听的端口</td><td>EXPOST 80 443</td></tr><tr><td>ENV</td><td>指定容器内的环境变量</td><td>ENV MYSQL_ROOT_PASSWORD 123456</td></tr><tr><td>ADD</td><td>复制指定的<src>路径下的内容到容器中的<dest>路径下，<src>可以为URL;如果为tar文件，会自动解压到<dest>路径下</td><td>ADD <src>…<dest><br/>ADD [“<src>”,…“<dest>”]<br/>ADD <a href="https://xxx.com/html.tar.gz">https://xxx.com/html.tar.gz</a> /var/www/html<br/>ADD html.tar.gz /var/www/html<br/></td></tr><tr><td>COPY</td><td>复制本地主机的<src>路径下的内容到镜像中的<dest>路径下;一般情况下推荐使用COPY，而不是ADD，但是如果拷贝到容器中的文件需要自动解压就需要使用ADD</td><td>COPY ./start.sh /start.sh</td></tr><tr><td>ENTRYPOINT</td><td>指定镜像的默认入口，运行容器时执行的Shell命令</td><td>ENTRYPOINT [“/bin/bash”,“-c”,“/start.sh”]<br/>ENTRYPOINT /bin/bash -c ‘/start.sh’</td></tr><tr><td>VOLUME</td><td>创建数据卷挂载点，指定容器挂载点到宿主机自动生成的目录或其他容器</td><td>VOLUME [“/var/lib/mysql”]</td></tr><tr><td>USER</td><td>为RUN、CMD和ENTRYPOINT执行命令指定运行用户</td><td>USER <user>[:<group>] or USER <UID>[:<GID>]</td></tr><tr><td>WORKDIR</td><td>为RUN、CMD和ENTRYPOINT、COPY和ADD配置工作目录，在进入容器时就会自动切换到指定的workdir目录中。可以使用多个WORKDIR指令，后续命令如果参数是相对路径，则会基于之前命令指定的路径。</td><td>WORKDIR /data</td></tr><tr><td>ARG</td><td>指定镜像内使用的参数（例如版本号信息等），在构造镜像时指定一些参数</td><td>FROM centos:6<br/>ARG user #ARG user=root<br/>USER $user<br/>#docker build --build-arg user=luozelin Dockerfile</td></tr><tr><td>ONBUILD</td><td>配置当所创建的镜像作为其他镜像的基础镜像时，所执行的创建操作指令</td><td></td></tr><tr><td>STOPSIGNAL</td><td>容器退出的信号值</td><td></td></tr><tr><td>HEALTHCHECK</td><td>如何进行健康检查</td><td>HEALTHCHECK --interval=5m --timeout=3s --retries=3 CMD curl -f <a href="http://localhost/">http://localhost/</a> || exit 1</td></tr><tr><td>SHELL</td><td>指定使用shell时的默认shell类型</td><td></td></tr></tbody></table><p><strong>RUN</strong>:运行指定命令，格式为<strong>RUN <command><strong>或</strong>RUN [“executable”，“param1”，“param2”]</strong></p><p>每条RUN指令将在当前镜像的基础上执行指定指令，并提交为新的镜像。</p><p><strong>CMD</strong>:CMD指令用来指定启动容器时默认执行的命令，支持三种格式：</p><p>第一种：CMD [“executable”,“param1”,“param2”]使用exec执行，是推荐使用的方式</p><p>第二种：CMD command param1 param2 在/bin/sh中执行，提供给需要交互的应用</p><p>第三种：CMD [“param1”,“param2”] 只能有一条CMD命令，如果指定了多条命令，只有最后一条会被执行</p><p>如果用户启动容器时手动指定了运行的命令（作为run的参数），则会覆盖CMD指定的命令</p><h4 id="24-基于Dockerfile创建镜像">24. 基于Dockerfile创建镜像</h4><p>基本格式为 <strong>docker build [options] 内容路径</strong>，该命令将读取指定路径下（包括子目录）的Dockerfile，并将该路径下的所有内容发送给Docker服务端，由服务端来创建镜像。因此除非生成镜像需要，否则一般建议放置Dockerfile的目录为空目录。注意如下：</p><p>其一、如果使用非内容路径下的Dockerfile，可以通过 -f 选项来指定其路径</p><p>其二、要指定生成镜像的标签信息，可以使用 -t 选项</p><p>例：指定Dockerfile所在路径为/tmp/docker_builder/，并且希望生成镜像标签为build_repo/first_image</p><p><code>docker build -t build_repo/first_image /tmp/docker_builder/</code></p><p>可以通过<code>.dockerignore</code>文件（每一行添加一条匹配模式）来让Docker忽略匹配模式路径下的目录和文件</p>]]></content>
      
      
      <categories>
          
          <category> 服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springboot配置文件加载过程</title>
      <link href="/2020/12/15/springboot%E9%85%8D%E7%BD%AE%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B/"/>
      <url>/2020/12/15/springboot%E9%85%8D%E7%BD%AE%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h4 id="1-命令行启动spring参数">1. 命令行启动spring参数</h4><p>需要在这个参数前加上<code>--</code>，这样就可以将这个参数加入到spring的环境中去，如<code>--server.port=8080</code>。如果想禁用命令行的形式加入Spring参数，可以在启动类中添加如下代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SpringApplication.setAddCommandLineProperties(<span class="literal">false</span>)</span><br></pre></td></tr></table></figure><h4 id="2-加载配置文件的可能位置">2. 加载配置文件的可能位置</h4><ul><li>当前目录下的子目录<code>/config</code>（<strong>–file:./config/</strong>）</li><li>当前目录下（<strong>–file:./</strong>）</li><li>class路径下<code>/config</code>（<strong>–classpath:/config/</strong>）</li><li>class根路径下（<strong>–classpath:/</strong>）</li></ul><p>按照此列表顺序，在列表较高位置的配置文件中的配置会覆盖在较低位置的。</p><p>当使用来配置自定义配置位置时，如<code>spring.config.additional-location=classpath:/custom-config/,file:./custom-config/</code>，除默认位置外，还会使用它们。那么加载配置文件的顺序如下(如果没有配置文件直接跳过)：</p><ul><li><code>file:./custom-config/</code></li><li><code>classpath:custom-config/</code></li><li><code>file:./config/</code></li><li><code>file:./config/*/</code></li><li><code>file:./</code></li><li><code>classpath:/config/</code></li><li><code>classpath:/</code></li></ul><h4 id="3-总结">3. 总结</h4><p>SpringBoot也可以从以下位置加载配置，优先级从高到低，高优先级的配置覆盖低优先级的配置。</p><ul><li>命令行参数</li></ul><p>​      所有的配置都可以在命令行上进行指定，多个参数(–参数项=值)用空格分开；</p><blockquote><p>java -jar spring-boot-02-config-02-0.0.1-SNAPSHOT.jar --server.port=8087 --server.context-path=/abc</p></blockquote><ul><li><p>来自java:comp/env的JNDI属性</p></li><li><p>Java系统属性(System.getProperties())</p><p>如：-Dapp.id=feature，一些非Spring参数加入到系统参数中去</p></li><li><p>操作系统环境变量</p></li><li><p>RandomValuePropertySource配置的random.*属性值</p></li></ul><p>由jar包外向jar包内进行寻找（<em>.properties&gt;</em>.yml），注意：优先加载带profile</p><ul><li><p>jar包外部的application-{profile}.properties或application.yml(带spring.profile)配置文件</p></li><li><p>jar包内部的application-{profile}.properties或application.yml(带spring.profile)配置文件</p></li><li><p>–spring.config.location=C:/application.properties（它在这里）</p></li><li><p>jar包外部的application.properties或application.yml(不带spring.profile)配置文件</p></li><li><p>jar包内部的application.properties或application.yml(不带spring.profile)配置文件</p></li><li><p>@Configuration注解类上的@PropertySource</p></li><li><p>通过SpringApplication.setDefaultProperties指定的默认属性</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Develop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql基础</title>
      <link href="/2020/12/15/sql%E5%9F%BA%E7%A1%80/"/>
      <url>/2020/12/15/sql%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h5 id="1-limit用法">1. limit用法</h5><p>语法：</p><blockquote><p>SELECT * FROM table  LIMIT [offset,] rows | rows OFFSET offset</p></blockquote><p>参数解释：LIMIT 子句可以被用于强制 SELECT 语句返回指定的记录数。LIMIT 接受一个或两个数字参数。参数必须是一个整数常量。如果给定两个参数，第一个参数指定第一个返回记录行的偏移量，第二个参数指定返回记录行的最大数目。初始记录行的偏移量是 0(而不是 1)： 为了与 PostgreSQL 兼容，MySQL 也支持句法： LIMIT # OFFSET #。</p><p>例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT * FROM table LIMIT 5,10;  // 检索记录行 6-15</span><br><span class="line"></span><br><span class="line">//为了检索从某一个偏移量到记录集的结束所有的记录行，可以指定第二个参数为 -1： </span><br><span class="line">mysql&gt; SELECT * FROM table LIMIT 95,-1; // 检索记录行 96-last.</span><br><span class="line"></span><br><span class="line">//如果只给定一个参数，它表示返回最大的记录行数目： </span><br><span class="line">mysql&gt; SELECT * FROM table LIMIT 5;     //检索前 5 个记录行</span><br><span class="line"></span><br><span class="line">//换句话说，LIMIT n 等价于 LIMIT 0,n。</span><br></pre></td></tr></table></figure><h5 id="2-分页查询">2. 分页查询</h5><h6 id="2-1-基本分页查询">2.1 基本分页查询</h6><p>用id或者category_id建立索引</p><blockquote><p>SELECT * from articles <strong>WHERE</strong> category_id = 123 <strong>ORDER</strong> <strong>BY</strong> id LIMIT 50, 10</p></blockquote><h6 id="2-2-子查询的分页方式">2.2 子查询的分页方式</h6><p>随着数据量的增加，页数会越来越多，LIMIT语句的偏移量就会越大，速度也会明显变慢。</p><p>原sql：</p><blockquote><p><strong>SELECT</strong> * <strong>FROM</strong> articles <strong>WHERE</strong> category_id = 123 <strong>ORDER</strong> <strong>BY</strong> id LIMIT 10000, 10</p></blockquote><p>优化后的子查询sql：</p><blockquote><p>SELECT** * <strong>FROM</strong> articles <strong>WHERE</strong> id &gt;= (<strong>SELECT</strong> id <strong>FROM</strong> articles <strong>WHERE</strong> category_id = 123 <strong>ORDER</strong> <strong>BY</strong> id LIMIT 10000, 1) LIMIT 10</p></blockquote><h6 id="2-3-JOIN分页方式">2.3 JOIN分页方式</h6><blockquote><p><strong>SELECT</strong> * <strong>FROM</strong> <code>content</code> <strong>AS</strong> t1  JOIN (<strong>SELECT</strong> id <strong>FROM</strong> <code>content</code> <strong>ORDER</strong> <strong>BY</strong> id <strong>desc</strong></p><p>LIMIT “.(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mi>a</mi><mi>g</mi><mi>e</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>∗</mo></mrow><annotation encoding="application/x-tex">page-1)*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord">∗</span></span></span></span>pagesize.”, 1) <strong>AS</strong> t2  <strong>WHERE</strong> <a href="http://t1.id">t1.id</a> &lt;= <a href="http://t2.id">t2.id</a> <strong>ORDER</strong> <strong>BY</strong> <a href="http://t1.id">t1.id</a> <strong>desc</strong> LIMIT $pagesize;</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Develope </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql优化</title>
      <link href="/2020/12/15/sql%E4%BC%98%E5%8C%96/"/>
      <url>/2020/12/15/sql%E4%BC%98%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h5 id="1-查询SQL尽量不要使用select-，而是select具体字段">1. 查询SQL尽量不要使用select *，而是select具体字段</h5><p>反例：</p><blockquote><p>select * from employee;</p></blockquote><p>正例：</p><blockquote><p>select id，name from employee;</p></blockquote><p>原因：只取需要的字段，节省资源、减少网络开销；</p><p>​   select * 进行查询时，很可能就不会使用到覆盖索引了，就会造成回表查询。</p><h5 id="2-如果知道查询结果只有一条或者只要最大-最小一条记录，建议用limit-1">2. 如果知道查询结果只有一条或者只要最大/最小一条记录，建议用limit 1</h5><p>现状：假设现在有employee员工表，要找出一个名字叫jack的人.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE `employee` (</span><br><span class="line">  `id` int(11) NOT NULL,</span><br><span class="line">  `name` varchar(255) DEFAULT NULL,</span><br><span class="line">  `age` int(11) DEFAULT NULL,</span><br><span class="line">  `date` datetime DEFAULT NULL,</span><br><span class="line">  `sex` int(1) DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8;</span><br></pre></td></tr></table></figure><p>反例：</p><blockquote><p>select id，name from employee where name=‘jack’</p></blockquote><p>正例：</p><blockquote><p>select id，name from employee where name=‘jack’ limit 1;</p></blockquote><p>理由：</p><ul><li>加上limit 1后,只要找到了对应的一条记录,就不会继续向下扫描了,效率将会大大提高。</li><li>当然，如果name是唯一索引的话，是不必要加上limit 1了，因为limit的存在主要就是为了防止全表扫描，从而提高性能,如果一个语句本身可以预知不用全表扫描，有没有limit ，性能的差别并不大。</li></ul><h5 id="3-应尽量避免在where子句中使用or来连接条件">3. 应尽量避免在where子句中使用or来连接条件</h5><p>新建一个user表，它有一个普通索引userId，表结构如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE `user` (</span><br><span class="line">  `id` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `userId` int(11) NOT NULL,</span><br><span class="line">  `age` int(11) NOT NULL,</span><br><span class="line">  `name` varchar(255) NOT NULL,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  KEY `idx_userId` (`userId`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8;</span><br></pre></td></tr></table></figure><p>查询userid为1或者年龄为18岁的用户</p><p>反例：</p><blockquote><p>select * from user where userid=1 or age =18</p></blockquote><p>正例：</p><blockquote><p>//使用union all<br>select * from user where userid=1<br>union all<br>select * from user where age = 18</p><p>//或者分开两条sql写：<br>select * from user where userid=1<br>select * from user where age = 18</p></blockquote><p>理由：使用or可能会使索引失效，从而全表扫描。对于or+没有索引的age这种情况，假设它走了userId的索引，但是走到age查询条件时，它还得全表扫描，也就是需要三步过程：全表扫描+索引扫描+合并 如果它一开始就走全表扫描，直接一遍扫描就完事。mysql是有优化器的，处于效率与成本考虑，遇到or条件，索引可能失效，看起来也合情合理。</p><h5 id="4-优化limit分页">4. 优化limit分页</h5><p>我们日常做分页需求时，一般会用 limit 实现，但是当偏移量特别大的时候，查询效率就变得低下。</p><p>反例：</p><blockquote><p>select id，name，age from employee limit 10000，10</p></blockquote><p>正例：</p><blockquote><p>//方案一 ：返回上次查询的最大记录(偏移量)<br>select id，name from employee where id&gt;10000 limit 10.</p><p>//方案二：order by + 索引<br>select id，name from employee order by id  limit 10000，10</p><p>//方案三：在业务允许的情况下限制页数：</p></blockquote><p>理由：</p><ul><li>当偏移量最大的时候，查询效率就会越低，因为Mysql并非是跳过偏移量直接去取后面的数据，而是先把偏移量+要取的条数，然后再把前面偏移量这一段的数据抛弃掉再返回的。</li><li>如果使用优化方案一，返回上次最大查询记录（偏移量），这样可以跳过偏移量，效率提升不少。</li><li>方案二使用order by+索引，也是可以提高查询效率的。</li><li>方案三的话，建议跟业务讨论，有没有必要查这么后的分页啦。因为绝大多数用户都不会往后翻太多页。</li></ul><h5 id="5-优化你的like语句">5. 优化你的like语句</h5><p>日常开发中，如果用到模糊关键字查询，很容易想到like，但是like很可能让你的索引失效。</p><p>反例(把%放前面，并不走索引)：</p><blockquote><p>select userId，name from user where userId like ‘%123’;</p></blockquote><p>正例(把%放关键字后面，还是会走索引的)：</p><blockquote><p>select userId，name from user where userId like ‘123%’;</p></blockquote><h5 id="6-使用where条件限定要查询的数据，避免返回多余的行">6. 使用where条件限定要查询的数据，避免返回多余的行</h5><p>假设业务场景是这样：查询某个用户是否是会员</p><p>反例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Long&gt; userIds = sqlMap.queryList(<span class="string">&quot;select userId from user where isVip=1&quot;</span>);</span><br><span class="line"><span class="type">boolean</span> <span class="variable">isVip</span> <span class="operator">=</span> userIds.contains(userId);</span><br></pre></td></tr></table></figure><p>正例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Long</span> <span class="variable">userId</span> <span class="operator">=</span> sqlMap.queryObject(<span class="string">&quot;select userId from user where userId=&#x27;userId&#x27; and isVip=&#x27;1&#x27; &quot;</span>)</span><br><span class="line"><span class="type">boolean</span> <span class="variable">isVip</span> <span class="operator">=</span> userId！=<span class="literal">null</span>;</span><br></pre></td></tr></table></figure><ul><li>需要什么数据，就去查什么数据，避免返回不必要的数据，节省开销。</li></ul><h5 id="7-尽量避免在索引列上使用mysql的内置函数">7. 尽量避免在索引列上使用mysql的内置函数</h5><p>业务需求：查询最近七天内登陆过的用户(假设loginTime加了索引)</p><p>反例：索引列上使用mysql的内置函数，索引失效</p><blockquote><p>select userId,loginTime from loginuser where Date_ADD(loginTime,Interval 7 DAY) &gt;=now();</p></blockquote><p>正例：如果索引列不加内置函数，索引还是会走的</p><blockquote><p>explain  select userId,loginTime from loginuser where  loginTime &gt;= Date_ADD(NOW(),INTERVAL - 7 DAY);</p></blockquote><h5 id="8-应尽量避免在-where-子句中对字段进行表达式操作，这将导致系统放弃使用索引而进行全表扫">8. 应尽量避免在 where 子句中对字段进行表达式操作，这将导致系统放弃使用索引而进行全表扫</h5><p>反例：</p><blockquote><p>select * from user where age-1 =10；</p></blockquote><p>正例：</p><blockquote><p>select * from user where age =11；</p></blockquote><h5 id="9-Inner-join-、left-join、right-join，优先使用Inner-join，如果是left-join，左边表结果尽量小">9. Inner join 、left join、right join，优先使用Inner join，如果是left join，左边表结果尽量小</h5><ul><li>Inner join 内连接，在两张表进行连接查询时，只保留两张表中完全匹配的结果集</li><li>left join 在两张表进行连接查询时，会返回左表所有的行，即使在右表中没有匹配的记录。</li><li>right join 在两张表进行连接查询时，会返回右表所有的行，即使在左表中没有匹配的记录。</li></ul><p>都满足SQL需求的前提下，推荐优先使用Inner join（内连接），如果要使用left join，左边表数据结果尽量小，如果有条件的尽量放到左边处理。</p><p>反例：</p><blockquote><p>select * from tab1 t1 left join tab2 t2  on t1.size = t2.size where <a href="http://t1.id">t1.id</a>&gt;2;</p></blockquote><p>正例：</p><blockquote><p>select * from (select * from tab1 where id &gt;2) t1 left join tab2 t2 on t1.size = t2.size;</p></blockquote><p>理由：</p><ul><li>如果inner join是等值连接，或许返回的行数比较少，所以性能相对会好一点。</li><li>同理，使用了左连接，左边表数据结果尽量小，条件尽量放到左边处理，意味着返回的行数可能比较少。</li></ul><h5 id="10-应尽量避免在-where-子句中使用-或-操作符，否则将引擎放弃使用索引而进行全表扫描">10. 应尽量避免在 where 子句中使用!=或&lt;&gt;操作符，否则将引擎放弃使用索引而进行全表扫描</h5><p>反例：</p><blockquote><p>select age,name  from user where age &lt;&gt;18;</p></blockquote><p>正例：</p><blockquote><p><em>//可以考虑分开两条sql写</em><br>select age,name  from user where age &lt;18;<br>select age,name  from user where age &gt;18;</p></blockquote><h5 id="11-使用联合索引时，注意索引列的顺序，一般遵循最左匹配原则">11. 使用联合索引时，注意索引列的顺序，一般遵循最左匹配原则</h5><p>表结构：（有一个联合索引idx_userid_age，userId在前，age在后）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE `user` (</span><br><span class="line">  `id` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `userId` int(11) NOT NULL,</span><br><span class="line">  `age` int(11) DEFAULT NULL,</span><br><span class="line">  `name` varchar(255) NOT NULL,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  KEY `idx_userid_age` (`userId`,`age`) USING BTREE</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;</span><br></pre></td></tr></table></figure><p>反例：</p><blockquote><p>select * from user where age = 10;</p></blockquote><p>正例：</p><blockquote><p><em>//符合最左匹配原则</em><br>select * from user where userid=10 and age =10；<br><em>//符合最左匹配原则</em><br>select * from user where userid =10;</p></blockquote><ul><li>当我们创建一个联合索引的时候，如(k1,k2,k3)，相当于创建了（k1）、(k1,k2)和(k1,k2,k3)三个索引，这就是最左匹配原则。</li><li>联合索引不满足最左原则，索引一般会失效，但是这个还跟Mysql优化器有关的。</li></ul><h5 id="12-对查询进行优化，应考虑在-where-及-order-by-涉及的列上建立索引，尽量避免全表扫描">12. 对查询进行优化，应考虑在 where 及 order by 涉及的列上建立索引，尽量避免全表扫描</h5><p>反例：</p><blockquote><p>select * from user where address =‘深圳’ order by age ;</p></blockquote><p>正例：</p><blockquote><p>添加索引<br>alter table user add index idx_address_age (address,age)</p></blockquote><h5 id="13-如果插入数据过多，考虑批量插入。">13. 如果插入数据过多，考虑批量插入。</h5><p>反例：</p><blockquote><p>for(User u :list){<br>INSERT into user(name,age) values(#name#,#age#)<br>}</p></blockquote><p>正例：</p><blockquote><p><em>//一次500批量插入，分批进行</em><br>insert into user(name,age) values<br><foreach collection="list" item="item" index="index" separator=","><br>(#{<a href="http://item.name">item.name</a>},#{item.age})<br></foreach></p></blockquote><h5 id="14-在适当的时候，使用覆盖索引">14. 在适当的时候，使用覆盖索引</h5><p>覆盖索引能够使得你的SQL语句不需要回表，仅仅访问索引就能够得到所有需要的数据，大大提高了查询效率。</p><p>反例：</p><blockquote><p><em>// like模糊查询，不走索引了</em><br>select * from user where userid like ‘%123%’;</p></blockquote><p>正例：</p><blockquote><p><em>//id为主键，那么为普通索引，即覆盖索引登场了。</em><br>select id,name from user where userid like ‘%123%’;</p></blockquote><h5 id="15-慎用distinct关键字">15. 慎用distinct关键字</h5><p>distinct 关键字一般用来过滤重复记录，以返回不重复的记录。在查询一个字段或者很少字段的情况下使用时，给查询带来优化效果。但是在字段很多的时候使用，却会大大降低查询效率。</p><p>反例：</p><blockquote><p>select DISTINCT * from  user;</p></blockquote><p>正例：</p><blockquote><p>select DISTINCT name from user;</p></blockquote><p>带distinct的语句cpu时间和占用时间都高于不带distinct的语句。因为当查询很多字段时，如果使用distinct，数据库引擎就会对数据进行比较，过滤掉重复数据，然而这个比较，过滤的过程会占用系统资源，cpu时间。</p><h5 id="16-删除冗余和重复索引">16. 删除冗余和重复索引</h5><p>反例：</p><blockquote><p>KEY <code>idx_userId</code> (<code>userId</code>)<br>KEY <code>idx_userId_age</code> (<code>userId</code>,<code>age</code>)</p></blockquote><p>正例：</p><blockquote><p>KEY <code>idx_userId</code> (<code>userId</code>)<br>KEY <code>idx_userId_age</code> (<code>userId</code>,<code>age</code>)</p></blockquote><p>重复的索引需要维护，并且优化器在优化查询的时候也需要逐个地进行考虑，这会影响性能的.</p><h5 id="17-如果数据量较大，优化你的修改-删除语句。">17. 如果数据量较大，优化你的修改/删除语句。</h5><p>避免同时修改或删除过多数据，因为会造成cpu利用率过高，从而影响别人对数据库的访问。一次性删除太多数据，可能会有lock wait timeout exceed的错误，所以建议分批操作。</p><h5 id="18-where子句中考虑使用默认值代替null">18. where子句中考虑使用默认值代替null</h5><ul><li>并不是说使用了is null 或者 is not null 就会不走索引了，这个跟mysql版本以及查询成本都有关。如果mysql优化器发现，走索引比不走索引成本还要高，肯定会放弃索引，这些条件<code>！=，&gt;is null，is not null</code>经常被认为让索引失效，其实是因为一般情况下，查询的成本高，优化器自动放弃的。</li><li>如果把null值，换成默认值，很多时候让走索引成为可能，同时，表达意思会相对清晰一点。</li></ul><h5 id="19-不要有超过5个以上的表连接">19. 不要有超过5个以上的表连接</h5><ul><li>连表越多，编译的时间和开销也就越大。</li><li>把连接表拆开成较小的几个执行，可读性更高。</li><li>如果一定需要连接很多表才能得到数据，那么意味着糟糕的设计了。</li></ul><h5 id="20-exist-in的合理利用">20. exist &amp; in的合理利用</h5><p>假设表A表示某企业的员工表，表B表示部门表，查询所有部门的所有员工，很容易有以下SQL:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from A where deptId in (select deptId from B);</span><br></pre></td></tr></table></figure><p>这样写等价于：</p><blockquote><p>先查询部门表B</p><p>select deptId from B</p><p>再由部门deptId，查询A的员工</p><p>select * from A where A.deptId = B.deptId</p></blockquote><p>可以抽象成这样的一个循环：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">List&lt;&gt; resultSet ;</span><br><span class="line"> for(int i=0;i&lt;B.length;i++) &#123;</span><br><span class="line">       for(int j=0;j&lt;A.length;j++) &#123;</span><br><span class="line">       if(A[i].id==B[j].id) &#123;</span><br><span class="line">          resultSet.add(A[i]);</span><br><span class="line">          break;</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>显然，除了使用in，我们也可以用exists实现一样的查询功能，如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from A where exists (select 1 from B where A.deptId = B.deptId);</span><br></pre></td></tr></table></figure><p>因为exists查询的理解就是，先执行主查询，获得数据后，再放到子查询中做条件验证，根据验证结果（true或者false），来决定主查询的数据结果是否得意保留。</p><p>那么，这样写就等价于：</p><blockquote><p>select * from A,先从A表做循环</p><p>select * from B where A.deptId = B.deptId,再从B表做循环.</p></blockquote><p>同理，可以抽象成这样一个循环：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">List&lt;&gt; resultSet ;</span><br><span class="line"> for(int i=0;i&lt;A.length;i++) &#123;</span><br><span class="line">       for(int j=0;j&lt;B.length;j++) &#123;</span><br><span class="line">       if(A[i].deptId==B[j].deptId) &#123;</span><br><span class="line">          resultSet.add(A[i]);</span><br><span class="line">          break;</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>数据库最费劲的就是跟程序链接释放。假设链接了两次，每次做上百万次的数据集查询，查完就走，这样就只做了两次；相反建立了上百万次链接，申请链接释放反复重复，这样系统就受不了了。即mysql优化原则，就是小表驱动大表，小的数据集驱动大的数据集，从而让性能更优。</p><p>因此，我们要选择最外层循环小的，也就是，如果<strong>B的数据量小于A，适合使用in，如果B的数据量大于A，即适合选择exist</strong>。</p><h5 id="21、尽量用-union-all-替换-union">21、尽量用 union all 替换 union</h5><p>如果检索结果中不会有重复的记录，推荐union all 替换 union。</p><p>反例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select * from user where userid=1 </span><br><span class="line">union</span><br><span class="line">select * from user where age = 10</span><br></pre></td></tr></table></figure><p>正例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select * from user where userid=1 </span><br><span class="line">union all</span><br><span class="line">select * from user where age = 10</span><br></pre></td></tr></table></figure><p>理由：</p><ul><li>如果使用union，不管检索结果有没有重复，都会尝试进行合并，然后在输出最终结果前进行排序。如果已知检索结果没有重复记录，使用union all 代替union，这样会提高效率。</li></ul><h5 id="22、索引不宜太多，一般5个以内。">22、索引不宜太多，一般5个以内。</h5><ul><li>索引并不是越多越好，索引虽然提高了查询的效率，但是也降低了插入和更新的效率。</li><li>insert或update时有可能会重建索引，所以建索引需要慎重考虑，视具体情况来定。</li><li>一个表的索引数最好不要超过5个，若太多需要考虑一些索引是否没有存在的必要。</li></ul><h5 id="23、尽量使用数字型字段，若只含数值信息的字段尽量不要设计为字符型">23、尽量使用数字型字段，若只含数值信息的字段尽量不要设计为字符型</h5><p>反例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">king_id` varchar（20） NOT NULL COMMENT &#x27;守护者Id&#x27;</span><br></pre></td></tr></table></figure><p>正例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`king_id` int(11) NOT NULL COMMENT &#x27;守护者Id&#x27;`</span><br></pre></td></tr></table></figure><p>理由：</p><ul><li>相对于数字型字段，字符型会降低查询和连接的性能，并会增加存储开销。</li></ul><h5 id="24、索引不适合建在有大量重复数据的字段上，如性别这类型数据库字段。">24、索引不适合建在有大量重复数据的字段上，如性别这类型数据库字段。</h5><p>因为SQL优化器是根据表中数据量来进行查询优化的，如果索引列有大量重复数据，Mysql查询优化器推算发现不走索引的成本更低，很可能就放弃索引了。</p><h5 id="25、尽量避免向客户端返回过多数据量。">25、尽量避免向客户端返回过多数据量。</h5><p>假设业务需求是，用户请求查看自己最近一年观看过的直播数据。</p><p>反例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//一次性查询所有数据回来</span><br><span class="line">select * from LivingInfo where watchId =useId and watchTime &gt;= Date_sub(now(),Interval 1 Y)</span><br></pre></td></tr></table></figure><p>正例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//分页查询</span><br><span class="line">select * from LivingInfo where watchId =useId and watchTime&gt;= Date_sub(now(),Interval 1 Y) limit offset，pageSize</span><br><span class="line"></span><br><span class="line">//如果是前端分页，可以先查询前两百条记录，因为一般用户应该也不会往下翻太多页，</span><br><span class="line">select * from LivingInfo where watchId =useId and watchTime&gt;= Date_sub(now(),Interval 1 Y) limit 200 ;</span><br></pre></td></tr></table></figure><h5 id="26、当在SQL语句中连接多个表时-请使用表的别名，并把别名前缀于每一列上，这样语义更加清晰。">26、当在SQL语句中连接多个表时,请使用表的别名，并把别名前缀于每一列上，这样语义更加清晰。</h5><p>反例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select  * from A inner</span><br><span class="line">join B on A.deptId = B.deptId;</span><br></pre></td></tr></table></figure><p>正例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select  memeber.name,deptment.deptName from A member inner</span><br><span class="line">join B deptment on member.deptId = deptment.deptId;</span><br></pre></td></tr></table></figure><h5 id="27、尽可能使用varchar-nvarchar-代替-char-nchar。">27、尽可能使用varchar/nvarchar 代替 char/nchar。</h5><p>反例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`deptName` char(100) DEFAULT NULL COMMENT &#x27;部门名称&#x27;</span><br></pre></td></tr></table></figure><p>正例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`deptName` varchar(100) DEFAULT NULL COMMENT &#x27;部门名称&#x27;</span><br></pre></td></tr></table></figure><p>理由：</p><ul><li>因为首先变长字段存储空间小，可以节省存储空间。</li><li>其次对于查询来说，在一个相对较小的字段内搜索，效率更高。</li></ul><h5 id="28、为了提高group-by-语句的效率，可以在执行到该语句前，把不需要的记录过滤掉。">28、为了提高group by 语句的效率，可以在执行到该语句前，把不需要的记录过滤掉。</h5><p>反例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select job，avg（salary） from employee  group by job having job =&#x27;president&#x27; </span><br><span class="line">or job = &#x27;managent&#x27;</span><br></pre></td></tr></table></figure><p>正例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select job，avg（salary） from employee where job =&#x27;president&#x27; </span><br><span class="line">or job = &#x27;managent&#x27; group by job；</span><br></pre></td></tr></table></figure><h5 id="29、如何字段类型是字符串，where时一定用引号括起来，否则索引失效">29、如何字段类型是字符串，where时一定用引号括起来，否则索引失效</h5><p>反例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from user where userid =123;</span><br></pre></td></tr></table></figure><p>正例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from user where userid =&#x27;123&#x27;;</span><br></pre></td></tr></table></figure><p>理由：</p><ul><li>为什么第一条语句未加单引号就不走索引了呢？这是因为不加单引号时，是字符串跟数字的比较，它们类型不匹配，MySQL会做隐式的类型转换，把它们转换为浮点数再做比较。</li></ul><h5 id="30、使用explain-分析你SQL的计划">30、使用explain 分析你SQL的计划</h5><p>日常开发写SQL的时候，尽量养成一个习惯吧。用explain分析一下你写的SQL，尤其是走不走索引这一块。</p>]]></content>
      
      
      <categories>
          
          <category> Develop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shiro框架讲解</title>
      <link href="/2020/12/15/shiro%E6%A1%86%E6%9E%B6/"/>
      <url>/2020/12/15/shiro%E6%A1%86%E6%9E%B6/</url>
      
        <content type="html"><![CDATA[<h4 id="1-shiro架构图">1. shiro架构图</h4><p><img src="https://imgbed.link/file/1356" alt="021"></p><h4 id="2-功能模块">2. 功能模块</h4><h5 id="2-1-主要功能">2.1 主要功能</h5><ul><li>Subject：主体，一般指用户。</li><li>SecurityManager：安全管理器，管理所有Subject，可以配合内部安全组件。(类似于SpringMVC中的DispatcherServlet)</li><li>Realms：用于进行权限信息的验证，一般需要自己实现。</li></ul><h5 id="2-2-具体功能">2.2 具体功能</h5><ul><li>Authentication：身份认证/登录(账号密码验证)。</li><li>Authorization：授权，即角色或者权限验证。</li><li>Session Manager：会话管理，用户登录后的session相关管理。</li><li>Cryptography：加密，密码加密等。</li><li>Web Support：Web支持，集成Web环境。</li><li>Caching：缓存，用户信息、角色、权限等缓存到如redis等缓存中。</li><li>Concurrency：多线程并发验证，在一个线程中开启另一个线程，可以把权限自动传播过去。</li><li>Testing：测试支持；</li><li>Run As：允许一个用户假装为另一个用户（如果他们允许）的身份进行访问。</li><li>Remember Me：记住我，登录后，下次再来的话不用登录了。</li></ul><h4 id="3-代码：">3. 代码：</h4><h5 id="3-1-具体pom依赖">3.1 具体pom依赖</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.shiro<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>shiro-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="3-2-entity实体代码">3.2 entity实体代码</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用户对应的角色集合</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Set&lt;Role&gt; roles;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Role</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="keyword">private</span> String roleName;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 角色对应权限集合</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Set&lt;Permissions&gt; permissions;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Permissions</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="keyword">private</span> String permissionsName;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3-3-service层">3.3 service层</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">LoginService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">getUserByName</span><span class="params">(String getMapByName)</span> &#123;</span><br><span class="line">        <span class="comment">//模拟数据库查询，正常情况此处是从数据库或者缓存查询。</span></span><br><span class="line">        <span class="keyword">return</span> getMapByName(getMapByName);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 模拟数据库查询</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userName</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> User <span class="title function_">getMapByName</span><span class="params">(String userName)</span>&#123;</span><br><span class="line">        <span class="comment">//共添加两个用户，两个用户都是admin一个角色，</span></span><br><span class="line">        <span class="comment">//wsl有query和add权限，zhangsan只有一个query权限</span></span><br><span class="line">        <span class="type">Permissions</span> <span class="variable">permissions1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Permissions</span>(<span class="string">&quot;1&quot;</span>,<span class="string">&quot;query&quot;</span>);</span><br><span class="line">        <span class="type">Permissions</span> <span class="variable">permissions2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Permissions</span>(<span class="string">&quot;2&quot;</span>,<span class="string">&quot;add&quot;</span>);</span><br><span class="line">        Set&lt;Permissions&gt; permissionsSet = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">        permissionsSet.add(permissions1);</span><br><span class="line">        permissionsSet.add(permissions2);</span><br><span class="line">        <span class="type">Role</span> <span class="variable">role</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Role</span>(<span class="string">&quot;1&quot;</span>,<span class="string">&quot;admin&quot;</span>,permissionsSet);</span><br><span class="line">        Set&lt;Role&gt; roleSet = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">        roleSet.add(role);</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="string">&quot;1&quot;</span>,<span class="string">&quot;wsl&quot;</span>,<span class="string">&quot;123456&quot;</span>,roleSet);</span><br><span class="line">        Map&lt;String ,User&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        map.put(user.getUserName(), user);</span><br><span class="line"></span><br><span class="line">        <span class="type">Permissions</span> <span class="variable">permissions3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Permissions</span>(<span class="string">&quot;3&quot;</span>,<span class="string">&quot;query&quot;</span>);</span><br><span class="line">        Set&lt;Permissions&gt; permissionsSet1 = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">        permissionsSet1.add(permissions3);</span><br><span class="line">        <span class="type">Role</span> <span class="variable">role1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Role</span>(<span class="string">&quot;2&quot;</span>,<span class="string">&quot;user&quot;</span>,permissionsSet1);</span><br><span class="line">        Set&lt;Role&gt; roleSet1 = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">        roleSet1.add(role1);</span><br><span class="line">        <span class="type">User</span> <span class="variable">user1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="string">&quot;2&quot;</span>,<span class="string">&quot;zhangsan&quot;</span>,<span class="string">&quot;123456&quot;</span>,roleSet1);</span><br><span class="line">        map.put(user1.getUserName(), user1);</span><br><span class="line">        <span class="keyword">return</span> map.get(userName);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3-4-Realm">3.4 Realm</h5><p>自定义Realm用于查询用户的角色和权限信息并保存到权限管理器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CustomRealm</span> <span class="keyword">extends</span> <span class="title class_">AuthorizingRealm</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> LoginService loginService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> AuthorizationInfo <span class="title function_">doGetAuthorizationInfo</span><span class="params">(PrincipalCollection principalCollection)</span> &#123;</span><br><span class="line">        <span class="comment">//获取登录用户名</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> (String) principalCollection.getPrimaryPrincipal();</span><br><span class="line">        <span class="comment">//根据用户名去数据库查询用户信息</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> loginService.getUserByName(name);</span><br><span class="line">        <span class="comment">//添加角色和权限</span></span><br><span class="line">        <span class="type">SimpleAuthorizationInfo</span> <span class="variable">simpleAuthorizationInfo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleAuthorizationInfo</span>();</span><br><span class="line">        <span class="keyword">for</span> (Role role : user.getRoles()) &#123;</span><br><span class="line">            <span class="comment">//添加角色</span></span><br><span class="line">            simpleAuthorizationInfo.addRole(role.getRoleName());</span><br><span class="line">            <span class="comment">//添加权限</span></span><br><span class="line">            <span class="keyword">for</span> (Permissions permissions : role.getPermissions()) &#123;</span><br><span class="line">                simpleAuthorizationInfo.addStringPermission(permissions.getPermissionsName());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> simpleAuthorizationInfo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> AuthenticationInfo <span class="title function_">doGetAuthenticationInfo</span><span class="params">(AuthenticationToken authenticationToken)</span> <span class="keyword">throws</span> AuthenticationException &#123;</span><br><span class="line">        <span class="comment">//加这一步的目的是在Post请求的时候会先进认证，然后在到请求</span></span><br><span class="line">        <span class="keyword">if</span> (authenticationToken.getPrincipal() == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//获取用户信息</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> authenticationToken.getPrincipal().toString();</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> loginService.getUserByName(name);</span><br><span class="line">        <span class="keyword">if</span> (user == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="comment">//这里返回后会报出对应异常</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//这里验证authenticationToken和simpleAuthenticationInfo的信息</span></span><br><span class="line">            <span class="type">SimpleAuthenticationInfo</span> <span class="variable">simpleAuthenticationInfo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleAuthenticationInfo</span>(name, user.getPassword().toString(), getName());</span><br><span class="line">            <span class="keyword">return</span> simpleAuthenticationInfo;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3-5-shiroConfig">3.5 shiroConfig</h5><p>把CustomRealm和SecurityManager等加入到spring容器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">shiroConfig</span> &#123;</span><br><span class="line">    <span class="comment">//不加这个注解不生效，具体不详</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@ConditionalOnMissingBean</span></span><br><span class="line">    <span class="keyword">public</span> DefaultAdvisorAutoProxyCreator <span class="title function_">defaultAdvisorAutoProxyCreator</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">DefaultAdvisorAutoProxyCreator</span> <span class="variable">defaultAAP</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DefaultAdvisorAutoProxyCreator</span>();</span><br><span class="line">        defaultAAP.setProxyTargetClass(<span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">return</span> defaultAAP;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//将自己的验证方式加入容器</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> CustomRealm <span class="title function_">myShiroRealm</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">CustomRealm</span> <span class="variable">customRealm</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CustomRealm</span>();</span><br><span class="line">        <span class="keyword">return</span> customRealm;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//权限管理，配置主要是Realm的管理认证</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> SecurityManager <span class="title function_">securityManager</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">DefaultWebSecurityManager</span> <span class="variable">securityManager</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DefaultWebSecurityManager</span>();</span><br><span class="line">        securityManager.setRealm(myShiroRealm());</span><br><span class="line">        <span class="keyword">return</span> securityManager;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//Filter工厂，设置对应的过滤条件和跳转条件</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> ShiroFilterFactoryBean <span class="title function_">shiroFilterFactoryBean</span><span class="params">(SecurityManager securityManager)</span> &#123;</span><br><span class="line">        <span class="type">ShiroFilterFactoryBean</span> <span class="variable">shiroFilterFactoryBean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ShiroFilterFactoryBean</span>();</span><br><span class="line">        shiroFilterFactoryBean.setSecurityManager(securityManager);</span><br><span class="line">        Map&lt;String, String&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="comment">//登出</span></span><br><span class="line">        map.put(<span class="string">&quot;/logout&quot;</span>, <span class="string">&quot;logout&quot;</span>);</span><br><span class="line">        <span class="comment">//对所有用户认证</span></span><br><span class="line">        map.put(<span class="string">&quot;/**&quot;</span>, <span class="string">&quot;authc&quot;</span>);</span><br><span class="line">        <span class="comment">//登录</span></span><br><span class="line">        shiroFilterFactoryBean.setLoginUrl(<span class="string">&quot;/login&quot;</span>);</span><br><span class="line">        <span class="comment">//首页</span></span><br><span class="line">        shiroFilterFactoryBean.setSuccessUrl(<span class="string">&quot;/index&quot;</span>);</span><br><span class="line">        <span class="comment">//错误页面，认证不通过跳转</span></span><br><span class="line">        shiroFilterFactoryBean.setUnauthorizedUrl(<span class="string">&quot;/error&quot;</span>);</span><br><span class="line">        shiroFilterFactoryBean.setFilterChainDefinitionMap(map);</span><br><span class="line">        <span class="keyword">return</span> shiroFilterFactoryBean;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//加入注解的使用，不加入这个注解不生效</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> AuthorizationAttributeSourceAdvisor <span class="title function_">authorizationAttributeSourceAdvisor</span><span class="params">(SecurityManager securityManager)</span> &#123;</span><br><span class="line">        <span class="type">AuthorizationAttributeSourceAdvisor</span> <span class="variable">authorizationAttributeSourceAdvisor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AuthorizationAttributeSourceAdvisor</span>();</span><br><span class="line">        authorizationAttributeSourceAdvisor.setSecurityManager(securityManager);</span><br><span class="line">        <span class="keyword">return</span> authorizationAttributeSourceAdvisor;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3-6-controller层">3.6 controller层</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/login&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">login</span><span class="params">(User user)</span> &#123;</span><br><span class="line">        <span class="comment">//添加用户认证信息</span></span><br><span class="line">        <span class="type">Subject</span> <span class="variable">subject</span> <span class="operator">=</span> SecurityUtils.getSubject();</span><br><span class="line">        <span class="type">UsernamePasswordToken</span> <span class="variable">usernamePasswordToken</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UsernamePasswordToken</span>(</span><br><span class="line">                user.getUserName(),</span><br><span class="line">                user.getPassword()</span><br><span class="line">        );</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//进行验证，这里可以捕获异常，然后返回对应信息</span></span><br><span class="line">            subject.login(usernamePasswordToken);</span><br><span class="line"><span class="comment">//            subject.checkRole(&quot;admin&quot;);</span></span><br><span class="line"><span class="comment">//            subject.checkPermissions(&quot;query&quot;, &quot;add&quot;);</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (AuthenticationException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;账号或密码错误！&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (AuthorizationException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;没有权限&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;login success&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//注解验角色和权限</span></span><br><span class="line">    <span class="meta">@RequiresRoles(&quot;admin&quot;)</span></span><br><span class="line">    <span class="meta">@RequiresPermissions(&quot;add&quot;)</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/index&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">index</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;index!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注解验证角色和权限的话无法捕捉异常，从而无法正确的返回给前端错误信息，所以以下的异常类用于拦截异常</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyExceptionHandler</span> &#123;</span><br><span class="line">    <span class="meta">@ExceptionHandler</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">ErrorHandler</span><span class="params">(AuthorizationException e)</span> &#123;</span><br><span class="line">        log.error(<span class="string">&quot;没有通过权限验证！&quot;</span>, e);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;没有通过权限验证！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Develop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring </tag>
            
            <tag> Java </tag>
            
            <tag> Shiro </tag>
            
            <tag> 权限 </tag>
            
            <tag> 安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日志定期清理</title>
      <link href="/2020/12/15/%E6%97%A5%E5%BF%97%E5%AE%9A%E6%9C%9F%E6%B8%85%E7%90%86/"/>
      <url>/2020/12/15/%E6%97%A5%E5%BF%97%E5%AE%9A%E6%9C%9F%E6%B8%85%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h4 id="1-新建一个shell脚本">1. 新建一个shell脚本</h4><blockquote><p>touch log_clean.sh</p><p>vim log_clean.sh</p></blockquote><h4 id="2-编写shell脚本">2. 编写shell脚本</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#####################################################################</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">日志定时运行时间为每周日4点2分</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除7天之前的日志文件</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">日志文件时间是根据日志名称后面的日期来计算</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">运行脚本注意日志文件中是否有其他相同后缀的非日志文件和日志文件名称是否符合要求</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">其日志格式必须为 ：pro-debug-0-2019-04-13.log ， 即 *2019-04-13.<span class="built_in">log</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#####################################################################</span></span></span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">当前时间</span></span><br><span class="line">currTime=$(date +&quot;%Y-%m-%d %T&quot;)</span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">需要删除的日志文件所在目录</span></span><br><span class="line">logpath=/home/local/logs</span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">删除日志的记录所在目录</span></span><br><span class="line">outpath=/home/local/historycleanlog</span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">进入日志目录</span></span><br><span class="line">cd $logpath</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">echo $currTime &quot; 清理日志脚本执行开始 &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&quot;&gt;&gt; $&#123;outpath&#125;/catalina.out</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">7天之前的日志文件删除</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">获取7天之前的日期</span></span><br><span class="line">del_date=`date +%Y-%m-%d -d &quot;7 days ago&quot;`</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">获取文件名中的日期字符串，然后对比时间进行相应的操作</span></span><br><span class="line">for n in `ls *.log -1`;do</span><br><span class="line">    m=`echo $n | awk -F. &#x27;&#123;print $(NF-1)&#125;&#x27;`</span><br><span class="line">    m=`echo $&#123;m:0-10&#125;`</span><br><span class="line">    if [ ! $m ]; then</span><br><span class="line">        continue</span><br><span class="line">    fi</span><br><span class="line">    if [[ $m &lt; $del_date || $m = $del_date ]];then</span><br><span class="line">        echo &quot;file&quot; $n &quot;will be deleted.&quot; &gt;&gt; $&#123;outpath&#125;/catalina.out</span><br><span class="line">        rm -rf $n</span><br><span class="line">    fi</span><br><span class="line">done</span><br><span class="line"> </span><br><span class="line">echo $currTime&quot; 清理日志脚本执行结束 &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&quot;&gt;&gt; $&#123;outpath&#125;/catalina.out</span><br><span class="line">echo &quot;       &quot;&gt;&gt; $&#123;outpath&#125;/catalina.out</span><br><span class="line">echo &quot;       &quot;&gt;&gt; $&#123;outpath&#125;/catalina.out</span><br></pre></td></tr></table></figure><h4 id="3-给shell脚本赋予执行权限">3. 给shell脚本赋予执行权限</h4><blockquote><p>chmod +x log_clean.sh</p></blockquote><h4 id="4-启动定时任务执行该脚本">4. 启动定时任务执行该脚本</h4><h5 id="4-1-编辑定时任务">4.1 编辑定时任务</h5><blockquote><p>crontab -e</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># Example of job definition:</span><br><span class="line"># .---------------- minute (0 - 59)</span><br><span class="line"># | .-------------- hour (0 - 23)</span><br><span class="line"># | | .---------- day of month (1 - 31)</span><br><span class="line"># | | | .------- month (1 - 12) OR jan,feb,mar,apr ...</span><br><span class="line"># | | | | .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat</span><br><span class="line"># | | | | |</span><br><span class="line"># * * * * * user-name command to be executed</span><br><span class="line"> </span><br><span class="line">  2 4 * * 0 /home/local/cleanlog.sh</span><br></pre></td></tr></table></figure><h5 id="4-2-重启定时器">4.2 重启定时器</h5><blockquote><p>service crond restart</p></blockquote><h5 id="4-3-查看定时任务">4.3 查看定时任务</h5><blockquote><p>crontab -I</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日志 </tag>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>获取URL中的参数方法</title>
      <link href="/2020/12/15/%E8%8E%B7%E5%8F%96URL%E4%B8%AD%E5%8F%82%E6%95%B0%E6%96%B9%E6%B3%95/"/>
      <url>/2020/12/15/%E8%8E%B7%E5%8F%96URL%E4%B8%AD%E5%8F%82%E6%95%B0%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h4 id="1-服务端获取前端传过来的参数的方法">1. 服务端获取前端传过来的参数的方法</h4><h5 id="1-1-直接把表单的参数写在Controller相应的方法的形参中，适用于get方式提交，不适用于post方式提交。">1.1 直接把表单的参数写在Controller相应的方法的形参中，适用于get方式提交，不适用于post方式提交。</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 1.直接把表单的参数写在Controller相应的方法的形参中</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> username</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> password</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="meta">@RequestMapping(&quot;/addUser1&quot;)</span></span><br><span class="line">  <span class="keyword">public</span> String <span class="title function_">addUser1</span><span class="params">(String username,String password)</span> &#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;username is:&quot;</span>+username);</span><br><span class="line">      System.out.println(<span class="string">&quot;password is:&quot;</span>+password);</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;demo/index&quot;</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>我的url形式：<a href="http://localhost/student/demo/addUser1?username=xiaoming&amp;password=123456">http://localhost/student/demo/addUser1?username=xiaoming&amp;password=123456</a></p><p>注意：提交的参数需要和Controller方法中的入参名称一致。</p><h5 id="1-2-通过HttpServletRequest接收，post方式和get方式都可以。">1.2 通过HttpServletRequest接收，post方式和get方式都可以。</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 2、通过HttpServletRequest接收</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="meta">@RequestMapping(&quot;/addUser2&quot;)</span></span><br><span class="line">  <span class="keyword">public</span> String <span class="title function_">addUser2</span><span class="params">(HttpServletRequest request)</span> &#123;</span><br><span class="line">      String username=request.getParameter(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">      String password=request.getParameter(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">      System.out.println(<span class="string">&quot;username is:&quot;</span>+username);</span><br><span class="line">      System.out.println(<span class="string">&quot;password is:&quot;</span>+password);</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;demo/index&quot;</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h5 id="1-3-通过一个bean来接收-post方式和get方式都可以。">1.3 通过一个bean来接收,post方式和get方式都可以。</h5><ul><li>建立一个和表单中参数对应的bean</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> demo.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserModel</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUsername</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUsername</span><span class="params">(String username)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.username = username;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPassword</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPassword</span><span class="params">(String password)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>用这个bean来封装接收的参数</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 3、通过一个bean来接收</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> user</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="meta">@RequestMapping(&quot;/addUser3&quot;)</span></span><br><span class="line">  <span class="keyword">public</span> String <span class="title function_">addUser3</span><span class="params">(UserModel user)</span> &#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;username is:&quot;</span>+user.getUsername());</span><br><span class="line">      System.out.println(<span class="string">&quot;password is:&quot;</span>+user.getPassword());</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;demo/index&quot;</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h5 id="1-4-通过-PathVariable获取路径中的参数">1.4 通过@PathVariable获取路径中的参数</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 4、通过<span class="doctag">@PathVariable</span>获取路径中的参数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> username</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> password</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping(value=&quot;/addUser4/&#123;username&#125;/&#123;password&#125;&quot;,method=RequestMethod.GET)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">addUser4</span><span class="params">(<span class="meta">@PathVariable</span> String username,<span class="meta">@PathVariable</span> String password)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;username is:&quot;</span>+username);</span><br><span class="line">        System.out.println(<span class="string">&quot;password is:&quot;</span>+password);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;demo/index&quot;</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>我的URL形式：<a href="http://localhost/SSMDemo/demo/addUser4/xiaoming/123456%EF%BC%8C%E5%88%99%E8%87%AA%E5%8A%A8%E5%B0%86URL%E4%B8%AD%E6%A8%A1%E6%9D%BF%E5%8F%98%E9%87%8F%7Busername%7D%E5%92%8C%7Bpassword%7D%E7%BB%91%E5%AE%9A%E5%88%B0%E9%80%9A%E8%BF%87@PathVariable%E6%B3%A8%E8%A7%A3%E7%9A%84%E5%90%8C%E5%90%8D%E5%8F%82%E6%95%B0%E4%B8%8A%EF%BC%8C%E5%8D%B3%E5%85%A5%E5%8F%82%E5%90%8Eusername=xiaoming%E3%80%81password=123456%E3%80%82">http://localhost/SSMDemo/demo/addUser4/xiaoming/123456，则自动将URL中模板变量{username}和{password}绑定到通过@PathVariable注解的同名参数上，即入参后username=xiaoming、password=123456。</a></p><h5 id="1-5-使用-ModelAttribute注解获取POST请求的FORM表单数据">1.5 使用@ModelAttribute注解获取POST请求的FORM表单数据</h5><ul><li>JSP表单如下</li></ul><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="type">form</span> <span class="variable">action</span> <span class="operator">=</span><span class="string">&quot;&lt;%=request.getContextPath()%&gt;/demo/addUser5&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt; </span><br><span class="line">     用户名:&amp;nbsp;&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;username&quot;</span>/&gt;&lt;br/&gt;</span><br><span class="line">     密&amp;nbsp;&amp;nbsp;码:&amp;nbsp;&lt;input type=<span class="string">&quot;password&quot;</span> name=<span class="string">&quot;password&quot;</span>/&gt;&lt;br/&gt;</span><br><span class="line">     &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交&quot;</span>/&gt; </span><br><span class="line">     &lt;input type=<span class="string">&quot;reset&quot;</span> value=<span class="string">&quot;重置&quot;</span>/&gt; </span><br></pre></td></tr></table></figure><ul><li>controller层代码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 5、使用<span class="doctag">@ModelAttribute</span>注解获取POST请求的FORM表单数据</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> user</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="meta">@RequestMapping(value=&quot;/addUser5&quot;,method=RequestMethod.POST)</span></span><br><span class="line">  <span class="keyword">public</span> String <span class="title function_">addUser5</span><span class="params">(<span class="meta">@ModelAttribute(&quot;user&quot;)</span> UserModel user)</span> &#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;username is:&quot;</span>+user.getUsername());</span><br><span class="line">      System.out.println(<span class="string">&quot;password is:&quot;</span>+user.getPassword());</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;demo/index&quot;</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h5 id="1-6-用注解-RequestParam绑定请求参数到方法入参">1.6 用注解@RequestParam绑定请求参数到方法入参</h5><p>当请求参数username不存在时会有异常发生,可以通过设置属性required=false解决,例如: @RequestParam(value=“username”, required=false)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 6、用注解<span class="doctag">@RequestParam</span>绑定请求参数到方法入参</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> username</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> password</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="meta">@RequestMapping(value=&quot;/addUser6&quot;,method=RequestMethod.GET)</span></span><br><span class="line">  <span class="keyword">public</span> String <span class="title function_">addUser6</span><span class="params">(<span class="meta">@RequestParam(&quot;username&quot;)</span> String username,</span></span><br><span class="line"><span class="params">                         <span class="meta">@RequestParam(&quot;password&quot;)</span> String password)</span> &#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;username is:&quot;</span>+username);</span><br><span class="line">      System.out.println(<span class="string">&quot;password is:&quot;</span>+password);</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;demo/index&quot;</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h5 id="1-7-用注解-RequestBody绑定请求参数到方法入参-用于POST请求">1.7 用注解@RequestBody绑定请求参数到方法入参 用于POST请求</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 7、用注解<span class="doctag">@Requestbody</span>绑定请求参数到方法入参</span></span><br><span class="line"><span class="comment">   * UserDTO 这个类为一个实体类，里面定义的属性与URL传过来的属性名一一对应。</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> username</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> password</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="meta">@RequestMapping(value=&quot;/addUser6&quot;,method=RequestMethod.POST)</span></span><br><span class="line">  <span class="keyword">public</span> String <span class="title function_">addUser6</span><span class="params">(<span class="meta">@RequestBody</span> UserDTO userDTO)</span> &#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;username is:&quot;</span>+userDTO.getUserName());</span><br><span class="line">      System.out.println(<span class="string">&quot;password is:&quot;</span>+userDTO.getPassWord());</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;demo/index&quot;</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h4 id="2-spring-boot的-RequestParam和-RequestBody的区别">2. spring boot的@RequestParam和@RequestBody的区别</h4><ul><li>问题描述：由于项目是前后端分离，因此后台使用的是spring boot，做成微服务，只暴露接口。接口设计风格为restful的风格，在get请求下，后台接收参数的注解为RequestBody时会报错；在 post请求下，后台接收参数的注解为RequestParam时也会报错。</li><li>问题原因：由于spring的RequestParam注解接收的参数是来自于requestHeader中，即请求头，也就是在url中，格式为xxx?username=123&amp;password=456，而RequestBody注解接收的参数则是来自于requestBody中，即请求体中。</li><li>解决方法：因此综上所述，如果为get请求时，后台接收参数的注解应该为RequestParam，如果为post请求时，则后台接收参数的注解就是为RequestBody。</li></ul><p><img src="https://imgbed.link/file/1353" alt=""></p><p><img src="https://imgbed.link/file/1354" alt=""></p><ul><li>另外，还有一种应用场景，接口规范为resultful风格时，举个例子：如果要获取某个id下此条问题答案的查询次数的话，则后台就需要动态获取参数， 其注解为@PathVariable，并且requestMapping中的value应为value=“/{id}/queryNum”</li></ul><p><img src="https://imgbed.link/file/1355" alt=""></p><h4 id="3-SpringBoot-中常用注解-PathVaribale-RequestParam-GetMapping介绍">3. SpringBoot 中常用注解@PathVaribale/@RequestParam/@GetMapping介绍</h4>]]></content>
      
      
      <categories>
          
          <category> Develop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring </tag>
            
            <tag> Java </tag>
            
            <tag> 接收参数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode219场比赛</title>
      <link href="/2020/12/13/LeetCode219%E5%9C%BA/"/>
      <url>/2020/12/13/LeetCode219%E5%9C%BA/</url>
      
        <content type="html"><![CDATA[<h4 id="A-比赛中的配对次数">A-比赛中的配对次数</h4><p>题目地址：<a href="https://leetcode-cn.com/problems/count-of-matches-in-tournament/">https://leetcode-cn.com/problems/count-of-matches-in-tournament/</a></p><p>题目描述：给你一个整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>，表示比赛中的队伍数。比赛遵循一种独特的赛制：</p><ul><li><p>如果当前队伍数是 偶数 ，那么每支队伍都会与另一支队伍配对。总共进行 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathsize="1.44em"><mfrac><mi>n</mi><mn>2</mn></mfrac></mstyle></mrow><annotation encoding="application/x-tex">\Large\frac{n}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4947em;vertical-align:-0.4968em;"></span><span class="mord sizing reset-size6 size8"><span class="mopen nulldelimiter sizing reset-size8 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.693em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size8 size6 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size8 size6 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size8 size6"></span></span></span></span></span> 场比赛，且产生 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathsize="1.44em"><mfrac><mi>n</mi><mn>2</mn></mfrac></mstyle></mrow><annotation encoding="application/x-tex">\Large\frac{n}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4947em;vertical-align:-0.4968em;"></span><span class="mord sizing reset-size6 size8"><span class="mopen nulldelimiter sizing reset-size8 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.693em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size8 size6 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size8 size6 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size8 size6"></span></span></span></span></span> 支队伍进入下一轮。</p></li><li><p>如果当前队伍数为 奇数 ，那么将会随机轮空并晋级一支队伍，其余的队伍配对。总共进行 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathsize="1.44em"><mfrac><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><mn>2</mn></mfrac></mstyle></mrow><annotation encoding="application/x-tex">\Large\frac{n-1}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.7086em;vertical-align:-0.4968em;"></span><span class="mord sizing reset-size6 size8"><span class="mopen nulldelimiter sizing reset-size8 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8415em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size8 size6 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size8 size6 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size8 size6"></span></span></span></span></span> 场比赛，且产生  <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathsize="1.44em"><mfrac><mi>n</mi><mn>2</mn></mfrac><mo>+</mo><mstyle mathsize="1.2em"><mn>1</mn></mstyle></mstyle></mrow><annotation encoding="application/x-tex">\Large\frac{n}{2}+\large1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4947em;vertical-align:-0.4968em;"></span><span class="mord sizing reset-size6 size8"><span class="mopen nulldelimiter sizing reset-size8 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.693em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size8 size6 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size8 size6 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size8 size6"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin sizing reset-size6 size8">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7733em;"></span><span class="mord sizing reset-size6 size7">1</span></span></span></span> 支队伍进入下一轮。</p><p>返回在比赛中进行的配对次数，直到决出获胜队伍为止。</p></li></ul><p>示例：</p><blockquote><p>输入：n = 7<br>输出：6<br>解释：比赛详情：</p><ul><li>第 1 轮：队伍数 = 7 ，配对次数 = 3 ，4 支队伍晋级。</li><li>第 2 轮：队伍数 = 4 ，配对次数 = 2 ，2 支队伍晋级。</li><li>第 3 轮：队伍数 = 2 ，配对次数 = 1 ，决出 1 支获胜队伍。<br>总配对次数 = 3 + 2 + 1 = 6</li></ul><p>输入：n = 14<br>输出：13<br>解释：比赛详情：</p><ul><li>第 1 轮：队伍数 = 14 ，配对次数 = 7 ，7 支队伍晋级。</li><li>第 2 轮：队伍数 = 7 ，配对次数 = 3 ，4 支队伍晋级。</li><li>第 3 轮：队伍数 = 4 ，配对次数 = 2 ，2 支队伍晋级。</li><li>第 4 轮：队伍数 = 2 ，配对次数 = 1 ，决出 1 支获胜队伍。<br>总配对次数 = 7 + 3 + 2 + 1 = 13</li></ul></blockquote><p>数据范围：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>n</mi><mo>≤</mo><mn>200</mn></mrow><annotation encoding="application/x-tex">1≤n≤200</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">200</span></span></span></span></p><p>题解：模拟题意就行。时间复杂度为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(logn)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，空间复杂度为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></p><p>代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">numberOfMatches</span><span class="params">(<span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(n != <span class="number">1</span>)&#123;</span><br><span class="line">            sum += n/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(n%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">                n /= <span class="number">2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                n /= <span class="number">2</span>;</span><br><span class="line">                n++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="B-十-二进制数的最少数目">B-十-二进制数的最少数目</h4><p>题目地址：<a href="https://leetcode-cn.com/problems/partitioning-into-minimum-number-of-deci-binary-numbers/">https://leetcode-cn.com/problems/partitioning-into-minimum-number-of-deci-binary-numbers/</a></p><p>题目描述：如果一个十进制数字不含任何前导零，且每一位上的数字不是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span> 就是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> ，那么该数字就是一个 十-二进制数 。例如，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>101</mn></mrow><annotation encoding="application/x-tex">101</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">101</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1100</mn></mrow><annotation encoding="application/x-tex">1100</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1100</span></span></span></span> 都是 十-二进制数，而 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>112</mn></mrow><annotation encoding="application/x-tex">112</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">112</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3001</mn></mrow><annotation encoding="application/x-tex">3001</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">3001</span></span></span></span> 不是。现给你一个表示十进制整数的字符串 n ，返回和为 n 的 十-二进制数 的最少数目。</p><p>示例：</p><blockquote><p>输入：n = “32”<br>输出：3<br>解释：10 + 11 + 11 = 32</p><p>输入：n = “82734”<br>输出：8</p><p>输入：n = “27346209830709182346”<br>输出：9</p></blockquote><p>数值范围：</p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>n</mi><mi mathvariant="normal">.</mi><mi>l</mi><mi>e</mi><mi>n</mi><mi>g</mi><mi>t</mi><mi>h</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">1 ≤ n.length ≤ 10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">n</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 仅由数字组成</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 不含任何前导零并总是表示正整数</li></ul><p>题解：模拟题意就行，即求字符串中出现的最大的数字。时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，空间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span>。</p><p>代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">minPartitions</span><span class="params">(string n)</span> </span>&#123;</span><br><span class="line">        <span class="type">char</span> m = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; n.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(n[i] &gt;= m) m=n[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> m-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="C-石子游戏VII">C-石子游戏VII</h4><p>题目地址：<a href="https://leetcode-cn.com/problems/stone-game-vii/">https://leetcode-cn.com/problems/stone-game-vii/</a></p><p>题目描述：石子游戏中，爱丽丝和鲍勃轮流进行自己的回合，<strong>爱丽丝先开始</strong> 。</p><p>有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 块石子排成一排。每个玩家的回合中，可以从行中 <strong>移除</strong> 最左边的石头或最右边的石头，并获得与该行中剩余石头值之 <strong>和</strong> 相等的得分。当没有石头可移除时，得分较高者获胜。鲍勃发现他总是输掉游戏（可怜的鲍勃，他总是输），所以他决定尽力 <strong>减小得分的差值</strong> 。爱丽丝的目标是最大限度地 <strong>扩大得分的差值</strong> 。</p><p>现在给你一个整数数组 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>t</mi><mi>o</mi><mi>n</mi><mi>e</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">stones</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord mathnormal">es</span></span></span></span> ，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>t</mi><mi>o</mi><mi>n</mi><mi>e</mi><mi>s</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">stones[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord mathnormal">es</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span></span></span></span> 表示 <strong>从左边开始</strong> 的第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 个石头的值，如果爱丽丝和鲍勃都 <strong>发挥出最佳水平</strong> ，请返回他们 <strong>得分的差值</strong> 。</p><p>示例：</p><blockquote><p>输入：stones = [5,3,1,4,2]<br>输出：6<br>解释：</p><ul><li>爱丽丝移除 2 ，得分 5 + 3 + 1 + 4 = 13 。游戏情况：爱丽丝 = 13 ，鲍勃 = 0 ，石子 = [5,3,1,4] 。</li><li>鲍勃移除 5 ，得分 3 + 1 + 4 = 8 。游戏情况：爱丽丝 = 13 ，鲍勃 = 8 ，石子 = [3,1,4] 。</li><li>爱丽丝移除 3 ，得分 1 + 4 = 5 。游戏情况：爱丽丝 = 18 ，鲍勃 = 8 ，石子 = [1,4] 。</li><li>鲍勃移除 1 ，得分 4 。游戏情况：爱丽丝 = 18 ，鲍勃 = 12 ，石子 = [4] 。</li><li>爱丽丝移除 4 ，得分 0 。游戏情况：爱丽丝 = 18 ，鲍勃 = 12 ，石子 = [] 。<br>得分的差值 18 - 12 = 6 。</li></ul><p>输入：stones = [7,90,5,1,100,10,10,2]<br>输出：122</p></blockquote><p>数值范围：</p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>=</mo><mo>=</mo><mi>s</mi><mi>t</mi><mi>o</mi><mi>n</mi><mi>e</mi><mi>s</mi><mi mathvariant="normal">.</mi><mi>l</mi><mi>e</mi><mi>n</mi><mi>g</mi><mi>t</mi><mi>h</mi></mrow><annotation encoding="application/x-tex">n == stones.length</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">==</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord mathnormal">es</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mo>≤</mo><mi>n</mi><mo>≤</mo><mn>1000</mn></mrow><annotation encoding="application/x-tex">2 ≤ n ≤ 1000</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1000</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>s</mi><mi>t</mi><mi>o</mi><mi>n</mi><mi>e</mi><mi>s</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>≤</mo><mn>1000</mn></mrow><annotation encoding="application/x-tex">1≤stones[i]≤1000</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord mathnormal">es</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1000</span></span></span></span></li></ul><p>题解：对于两个选手，希望的都是尽可能扩大两人得分之间的差值，维护二维数组 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">dp[i][j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span> 表示在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[i, j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span> 区间内删除最左边或者最右边的数后得分的更大差值。如果删除 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>t</mi><mi>o</mi><mi>n</mi><mi>e</mi><mi>s</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">stones[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord mathnormal">es</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span></span></span></span>，得分为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[i + 1, j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span> 区间的石子值总和（可以提前维护前缀和通过 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span> 得到），然后第二个人能得到的最大差值为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">dp[i + 1][j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span>，同理，如果删除 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>t</mi><mi>o</mi><mi>n</mi><mi>e</mi><mi>s</mi><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">stones[j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord mathnormal">es</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span>，得分为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[i, j - 1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span> 区间的石子值总和，第二个人能得到的最大差值为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">dp[i][j - 1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span>。由于 Alice 希望提高差值，Bob也希望提高差值，两人希望的差值方向不同，所以更新时需要比较得分与下一个人差值的差，也即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mi>s</mi><mi>c</mi><mi>o</mi><mi>r</mi><msub><mi>e</mi><mn>1</mn></msub><mo>−</mo><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo separator="true">,</mo><mi>s</mi><mi>c</mi><mi>o</mi><mi>r</mi><msub><mi>e</mi><mn>2</mn></msub><mo>−</mo><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">dp[i][j] = max(score_1 - dp[i + 1][j], score_2 - dp[i][j - 1])</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">scor</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">scor</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">])</span></span></span></span>。由于一个区间的差值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">dp[i][j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span> 是由更小的区间内的差值得来的，所以遍历更新是要维护区间长度从小到大。特别地，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>=</mo><mi>j</mi></mrow><annotation encoding="application/x-tex">i = j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 时，说明当前数组只剩下一个元素，此时删除该元素无法得分，所以初始化 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">dp[i][i] = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>。时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，相当于遍历了所有子区间，共有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>+</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><mn>1</mn><mo>=</mo><mstyle mathsize="1.2em"><mfrac><mrow><mi>n</mi><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><mn>2</mn></mfrac></mstyle></mrow><annotation encoding="application/x-tex">n + n - 1 + ... + 1 = \large\frac{n(n + 1)}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">...</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.586em;vertical-align:-0.414em;"></span><span class="mord sizing reset-size6 size7"><span class="mopen nulldelimiter sizing reset-size7 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9767em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4767em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size7 size6"></span></span></span></span></span>个子区间，空间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，维护了二维数组。</p><p>代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">stoneGameVII</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; stones)</span> </span>&#123;</span><br><span class="line">        vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;<span class="built_in">dp</span>(stones.<span class="built_in">size</span>(), <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(stones.<span class="built_in">size</span>(),<span class="number">0</span>));</span><br><span class="line">        vector&lt;<span class="type">int</span>&gt;<span class="built_in">sums</span>(stones.<span class="built_in">size</span>() + <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; stones.<span class="built_in">size</span>();++i)</span><br><span class="line">            sums[i + <span class="number">1</span>] = sums[i] + stones[i];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = dp.<span class="built_in">size</span>() - <span class="number">2</span>;i &gt;= <span class="number">0</span>;--i)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = i + <span class="number">1</span>;j &lt; dp[i].<span class="built_in">size</span>();++j)</span><br><span class="line">                dp[i][j] = <span class="built_in">max</span>(sums[j + <span class="number">1</span>] - sums[i + <span class="number">1</span>] - dp[i + <span class="number">1</span>][j], sums[j] - sums[i] - dp[i][j - <span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp.<span class="built_in">front</span>().<span class="built_in">back</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="D-堆叠长方体的最大高度">D-堆叠长方体的最大高度</h4><p>题目地址：<a href="https://leetcode-cn.com/problems/maximum-height-by-stacking-cuboids/">https://leetcode-cn.com/problems/maximum-height-by-stacking-cuboids/</a></p><p>题目描述：给你 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 个长方体 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mi>u</mi><mi>b</mi><mi>o</mi><mi>i</mi><mi>d</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">cuboids</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">u</span><span class="mord mathnormal">b</span><span class="mord mathnormal">o</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord mathnormal">s</span></span></span></span> ，其中第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 个长方体的长宽高表示为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mi>u</mi><mi>b</mi><mi>o</mi><mi>i</mi><mi>d</mi><mi>s</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>=</mo><mo stretchy="false">[</mo><mi>w</mi><mi>i</mi><mi>d</mi><mi>t</mi><mi>h</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo separator="true">,</mo><mi>l</mi><mi>e</mi><mi>n</mi><mi>g</mi><mi>t</mi><mi>h</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo separator="true">,</mo><mi>h</mi><mi>e</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">cuboids[i] = [width[i], length[i], height[i]]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">u</span><span class="mord mathnormal">b</span><span class="mord mathnormal">o</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord mathnormal">s</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">h</span><span class="mord mathnormal">t</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]]</span></span></span></span>（<strong>下标从 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span> 开始</strong>）。请你从 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mi>u</mi><mi>b</mi><mi>o</mi><mi>i</mi><mi>d</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">cuboids</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">u</span><span class="mord mathnormal">b</span><span class="mord mathnormal">o</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord mathnormal">s</span></span></span></span> 选出一个 <strong>子集</strong> ，并将它们堆叠起来。如果 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mi>i</mi><mi>d</mi><mi>t</mi><mi>h</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>≤</mo><mi>w</mi><mi>i</mi><mi>d</mi><mi>t</mi><mi>h</mi><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">width[i] ≤ width[j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span> 且 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mi>e</mi><mi>n</mi><mi>g</mi><mi>t</mi><mi>h</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>≤</mo><mi>l</mi><mi>e</mi><mi>n</mi><mi>g</mi><mi>t</mi><mi>h</mi><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">length[i] ≤ length[j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span> 且 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mi>e</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>≤</mo><mi>h</mi><mi>e</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">height[i] ≤ height[j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">h</span><span class="mord mathnormal">t</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">h</span><span class="mord mathnormal">t</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span> ，你就可以将长方体 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 堆叠在长方体 j 上。你可以通过旋转把长方体的长宽高重新排列，以将它放在另一个长方体上。返回 <strong>堆叠长方体</strong> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mi>u</mi><mi>b</mi><mi>o</mi><mi>i</mi><mi>d</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">cuboids</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">u</span><span class="mord mathnormal">b</span><span class="mord mathnormal">o</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord mathnormal">s</span></span></span></span> 可以得到的 <strong>最大高度</strong> 。</p><p>示例：</p><p><img src="https://imgbed.link/file/1342" alt=""></p><blockquote><p>输入：cuboids = [[50,45,20],[95,37,53],[45,23,12]]<br>输出：190<br>解释：<br>第 1 个长方体放在底部，53x37 的一面朝下，高度为 95 。<br>第 0 个长方体放在中间，45x20 的一面朝下，高度为 50 。<br>第 2 个长方体放在上面，23x12 的一面朝下，高度为 45 。<br>总高度是 95 + 50 + 45 = 190 。</p><p>输入：cuboids = [[38,25,45],[76,35,3]]<br>输出：76<br>解释：<br>无法将任何长方体放在另一个上面。<br>选择第 1 个长方体然后旋转它，使 35x3 的一面朝下，其高度为 76 。</p><p>输入：cuboids = [[7,11,17],[7,17,11],[11,7,17],[11,17,7],[17,7,11],[17,11,7]]<br>输出：102<br>解释：<br>重新排列长方体后，可以看到所有长方体的尺寸都相同。<br>你可以把 11x7 的一面朝下，这样它们的高度就是 17 。<br>堆叠长方体的最大高度为 6 * 17 = 102 。</p></blockquote><p>数值范围：</p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>=</mo><mo>=</mo><mi>c</mi><mi>u</mi><mi>b</mi><mi>o</mi><mi>i</mi><mi>d</mi><mi>s</mi><mi mathvariant="normal">.</mi><mi>l</mi><mi>e</mi><mi>n</mi><mi>g</mi><mi>t</mi><mi>h</mi></mrow><annotation encoding="application/x-tex">n == cuboids.length</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">==</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">u</span><span class="mord mathnormal">b</span><span class="mord mathnormal">o</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord mathnormal">s</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>n</mi><mo>≤</mo><mn>100</mn></mrow><annotation encoding="application/x-tex">1 ≤ n ≤ 100</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">100</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>w</mi><mi>i</mi><mi>d</mi><mi>t</mi><mi>h</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo separator="true">,</mo><mi>l</mi><mi>e</mi><mi>n</mi><mi>g</mi><mi>t</mi><mi>h</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo separator="true">,</mo><mi>h</mi><mi>e</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>≤</mo><mn>100</mn></mrow><annotation encoding="application/x-tex">1 ≤ width[i], length[i], height[i] ≤ 100</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">h</span><span class="mord mathnormal">t</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">100</span></span></span></span></li></ul><p>题解：</p><p>代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">maxHeight</span><span class="params">(vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&amp; a)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> len = a.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> &amp;cube : a) <span class="built_in">sort</span>(cube.<span class="built_in">begin</span>(),cube.<span class="built_in">end</span>());</span><br><span class="line">        <span class="built_in">sort</span>(a.<span class="built_in">begin</span>(),a.<span class="built_in">end</span>());</span><br><span class="line">        <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//int dp[len];</span></span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">dp</span><span class="params">(len)</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; len;i ++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>;j &lt; i;j ++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(a[j][<span class="number">2</span>] &lt;= a[i][<span class="number">2</span>] &amp;&amp; a[j][<span class="number">1</span>] &lt;= a[i][<span class="number">1</span>])&#123;</span><br><span class="line">                    dp[i] = <span class="built_in">max</span>(dp[i],dp[j]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            dp[i] += a[i][<span class="number">2</span>];</span><br><span class="line">            sum = <span class="built_in">max</span>(sum, dp[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> 贪心 </tag>
            
            <tag> DP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>牛客编程巅峰赛S2第7场</title>
      <link href="/2020/12/08/%E7%89%9B%E5%AE%A2%E7%BC%96%E7%A8%8B%E5%B7%85%E5%B3%B0%E8%B5%9BS2%E7%AC%AC7%E5%9C%BA/"/>
      <url>/2020/12/08/%E7%89%9B%E5%AE%A2%E7%BC%96%E7%A8%8B%E5%B7%85%E5%B3%B0%E8%B5%9BS2%E7%AC%AC7%E5%9C%BA/</url>
      
        <content type="html"><![CDATA[<h4 id="A-牛牛爱喝酒">A-牛牛爱喝酒</h4><p>题目地址：<a href="https://ac.nowcoder.com/acm/contest/9752/A">https://ac.nowcoder.com/acm/contest/9752/A</a></p><p>题目描述：牛牛是一个酒鬼，非常爱喝酒，一瓶酒 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span> 元钱，两个酒瓶可以换一瓶酒，四个瓶盖可以换一瓶酒，现在有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 元钱，求最多可以喝多少瓶酒？（注：没有借贷功能，即最终不允许借一瓶酒、喝完后拿酒瓶兑换归还的操作）</p><p>示例：</p><blockquote><p>输入：2，12</p><p>输出：19</p></blockquote><p>数值范围：</p><blockquote><p>0 &lt; m &lt; 100<br>0 &lt; n &lt; 2000</p></blockquote><p>代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可</span></span><br><span class="line"><span class="comment">     * 返回牛牛能喝的最多的酒</span></span><br><span class="line"><span class="comment">     * @param m int整型 酒单价</span></span><br><span class="line"><span class="comment">     * @param n int整型 牛牛的现金</span></span><br><span class="line"><span class="comment">     * @return int整型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">countWine</span><span class="params">(<span class="type">int</span> m, <span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// write code here</span></span><br><span class="line">        <span class="type">int</span> ans = <span class="number">0</span>, ping = <span class="number">0</span>, gai = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(m &gt; n) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        ans += n / m;</span><br><span class="line">        ping = ans;</span><br><span class="line">        gai = ans;</span><br><span class="line">        <span class="keyword">while</span>(ping &gt;= <span class="number">2</span> || gai &gt;= <span class="number">4</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(ping &gt;= <span class="number">2</span>)&#123;</span><br><span class="line">                <span class="type">int</span> temp = ping / <span class="number">2</span>;</span><br><span class="line">                ping %= <span class="number">2</span>;</span><br><span class="line">                ping += temp;</span><br><span class="line">                gai += temp;</span><br><span class="line">                ans += temp;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(gai &gt;= <span class="number">4</span>)&#123;</span><br><span class="line">                <span class="type">int</span> temp = gai / <span class="number">4</span>;</span><br><span class="line">                gai %= <span class="number">4</span>;</span><br><span class="line">                gai += temp;</span><br><span class="line">                ping += temp;</span><br><span class="line">                ans += temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="B-牛牛的独特子序列">B-牛牛的独特子序列</h4><p>题目地址：<a href="https://ac.nowcoder.com/acm/contest/9752/B">https://ac.nowcoder.com/acm/contest/9752/B</a></p><p>题目描述：牛牛现在有一个长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mi>e</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">len</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span></span></span></span> 只包含小写字母 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>−</mo><mi>z</mi></mrow><annotation encoding="application/x-tex">a-z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span> 的字符串 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> ，他现在想要一个特殊的子序列，这个子序列的长度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><mo>∗</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">3*n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>(n为非负整数)，子序列的第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>1</mn><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[1,n]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">]</span></span></span></span> 个字母全部为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span> ，子序列的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo>∗</mo><mi>n</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[n+1,2*n]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mclose">]</span></span></span></span>个字母全部为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span> ，子序列的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>2</mn><mo>∗</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo separator="true">,</mo><mn>3</mn><mo>∗</mo><mi>n</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[2*n+1,3*n]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mclose">]</span></span></span></span>个字母全部为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">c</span></span></span></span> ，牛牛想知道最长的符合条件的独特子序列的长度是多少。</p><p>示例：</p><blockquote><p>输入：“cbacb”</p><p>输出：0</p><p>输入：“abaabbcccc”</p><p>输出：6</p></blockquote><p>数值范围：</p><p>对于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>30</mn><mi mathvariant="normal">%</mi></mrow><annotation encoding="application/x-tex">30\%</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8056em;vertical-align:-0.0556em;"></span><span class="mord">30%</span></span></span></span> 的数据，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>l</mi><mi>e</mi><mi>n</mi><mo>≤</mo><mn>1000</mn></mrow><annotation encoding="application/x-tex">1≤len≤1000</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8304em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1000</span></span></span></span><br>对于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>100</mn><mi mathvariant="normal">%</mi></mrow><annotation encoding="application/x-tex">100\%</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8056em;vertical-align:-0.0556em;"></span><span class="mord">100%</span></span></span></span> 的数据，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>l</mi><mi>e</mi><mi>n</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>6</mn></msup></mrow><annotation encoding="application/x-tex">1≤len≤10^6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8304em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span></span></span></span></p><p>题解：注意是子序列，也就是分三段，ABC段，结果为min(na,nb,nc)(na:A段中’a’的个数，nb:B段中’b’的个数，nc:C段中’c’的个数)。由于这里的特殊性，我们可以用双指针。枚举a，c的个数。然后l，r指针向中间移动，直到’a’,'c’都加1，预处理出’b’的个数，在指针移动时更新nb。每次更新完求值即可。</p><p>代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> M =<span class="number">1e6</span>+<span class="number">7</span>; </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123; </span><br><span class="line"><span class="keyword">public</span>: </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * @param x string字符串 </span></span><br><span class="line"><span class="comment">     * @return int整型</span></span><br><span class="line"><span class="comment">     */</span> </span><br><span class="line">    <span class="type">int</span> a[M]; </span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">Maximumlength</span><span class="params">(string x)</span> </span>&#123; </span><br><span class="line">        <span class="comment">// write code here </span></span><br><span class="line">        <span class="type">int</span> n=x.<span class="built_in">length</span>(),mx=<span class="number">0</span>; </span><br><span class="line">        <span class="type">int</span> na=<span class="number">0</span>,nb=<span class="number">0</span>,nc=<span class="number">0</span>; </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(x[i]==<span class="string">&#x27;b&#x27;</span>)nb++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> l=<span class="number">0</span>,r=n<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">while</span>(l&lt;=r)&#123;</span><br><span class="line">            <span class="keyword">while</span>(x[l]!=<span class="string">&#x27;a&#x27;</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(x[l]==<span class="string">&#x27;b&#x27;</span>)nb--;</span><br><span class="line">                l++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span>(x[r]!=<span class="string">&#x27;c&#x27;</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(x[r]==<span class="string">&#x27;b&#x27;</span>)nb--;</span><br><span class="line">                r--;</span><br><span class="line">            &#125;</span><br><span class="line">            na++,nc++;</span><br><span class="line">            mx=<span class="built_in">max</span>(mx,<span class="built_in">min</span>(na,<span class="built_in">min</span>(nb,nc))*<span class="number">3</span>);</span><br><span class="line">            l++,r--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> mx;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="C-分贝壳游戏">C-分贝壳游戏</h4><p>题目地址：<a href="https://ac.nowcoder.com/acm/contest/9752/C">https://ac.nowcoder.com/acm/contest/9752/C</a></p><p>题目描述：现在牛牛和牛妹一起出去海滩游玩，由于他们两个都不会游泳，所以他们在海滩捡了很多好看的贝壳，可是捡着捡着他们就感觉无聊了，所以他们决定拿这些贝壳玩一些游戏。 他们一共捡了 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 个贝壳，现在他们这n个贝壳放成一堆。然后轮流取贝壳，牛牛先取。牛牛一次能取 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>1</mn><mo separator="true">,</mo><mi>p</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[1,p]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">p</span><span class="mclose">]</span></span></span></span> 个贝壳，牛妹一次能取 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>1</mn><mo separator="true">,</mo><mi>q</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[1,q]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mclose">]</span></span></span></span> 个贝壳,能拿到最后一个贝壳的人赢。问牛牛和牛妹都足够聪明的情况下，最后谁能取得胜利？如果牛牛必胜，返回 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> ；如果牛妹必胜，返回 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">−</span><span class="mord">1</span></span></span></span> ；如果没有人有必胜策略，返回 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span> 。</p><p>示例：</p><blockquote><p>输入：8, 3, 3</p><p>输出：-1</p><p>输入：3, 4, 2</p><p>输出：1</p><p>输入：6, 3, 2</p><p>输出：1</p><p>输入：6, 3, 5</p><p>输出：-1</p></blockquote><p>数值范围：</p><p>对于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>100</mn><mi mathvariant="normal">%</mi></mrow><annotation encoding="application/x-tex">100\%</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8056em;vertical-align:-0.0556em;"></span><span class="mord">100%</span></span></span></span> 的数据，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>n</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup></mrow><annotation encoding="application/x-tex">1≤n≤10^9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span></span></span></span>, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>q</mi><mo separator="true">,</mo><mi>p</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup></mrow><annotation encoding="application/x-tex">1≤q,p≤10^9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8304em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span></span></span></span>(其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>30</mn><mi mathvariant="normal">%</mi></mrow><annotation encoding="application/x-tex">30\%</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8056em;vertical-align:-0.0556em;"></span><span class="mord">30%</span></span></span></span> 的数据，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo>=</mo><mi>q</mi></mrow><annotation encoding="application/x-tex">p=q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span></span></span>)</p><p>题解：巴什博弈。具体问题分析：</p><ul><li>当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo>≥</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">p≥n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8304em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>时，牛牛一次可以取完；</li><li>当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo>&gt;</mo><mi>q</mi></mrow><annotation encoding="application/x-tex">p&gt;q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span></span></span> 时，牛牛可每次拿走贝壳，保证贝壳剩余量为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>q</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>∗</mo><mi>k</mi></mrow><annotation encoding="application/x-tex">(q+1)*k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>（即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>q</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">q+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 的倍数），则无论牛妹怎么取，牛牛总能取到。显然<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>q</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>∗</mo><mi>k</mi></mrow><annotation encoding="application/x-tex">(q+1)*k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 对牛妹来说是一个必败态。（当贝壳数是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>q</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">q+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 时，牛妹取多少贝壳都不能直接赢，而牛牛一定能直接赢;</li><li>当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>q</mi><mo>&gt;</mo><mi>p</mi></mrow><annotation encoding="application/x-tex">q&gt;p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span></span></span></span> 时，同上，牛牛第一次无论怎么取，牛妹总能取贝壳使得贝壳剩余量为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>p</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>∗</mo><mi>k</mi></mrow><annotation encoding="application/x-tex">(p+1)*k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> (即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">p+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 的倍数)。牛牛无法构造出牛妹的必败态，即使牛牛让贝壳变成 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>q</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">q+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> , 牛妹依然可以让贝壳变成 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo>+</mo><mn>1</mn><mo>&lt;</mo><mi>q</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">p+1 &lt; q+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6835em;vertical-align:-0.0391em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 使得牛牛必败;</li><li>当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo>=</mo><mo>=</mo><mi>q</mi></mrow><annotation encoding="application/x-tex">p==q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">==</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span></span></span> 时，根据上述分析，如果刚开始贝壳数不是 $(p+1) $的倍数，则牛牛必胜（每次构造出 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>p</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(p+1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span> 的倍数即可），否则牛牛必败。</li></ul><p>代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123; </span><br><span class="line"><span class="keyword">public</span>: </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 巴什博弈</span></span><br><span class="line"><span class="comment">     * @param n int整型 </span></span><br><span class="line"><span class="comment">     * @param p int整型 </span></span><br><span class="line"><span class="comment">     * @param q int整型 </span></span><br><span class="line"><span class="comment">     * @return int整型</span></span><br><span class="line"><span class="comment">     */</span> </span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">Gameresults</span><span class="params">(<span class="type">int</span> n, <span class="type">int</span> p, <span class="type">int</span> q)</span> </span>&#123; </span><br><span class="line">        <span class="comment">// write code here </span></span><br><span class="line">        <span class="keyword">if</span>(p&gt;=n || p&gt;q)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">if</span>(q&gt;p)<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">if</span>(p==q)&#123;</span><br><span class="line">            <span class="keyword">if</span>(n%(p+<span class="number">1</span>)==<span class="number">0</span>)<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;    </span><br><span class="line">        &#125; <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="D-经过直径的点">D-经过直径的点</h4><p>题目地址：<a href="https://ac.nowcoder.com/acm/contest/9753/C">https://ac.nowcoder.com/acm/contest/9753/C</a></p><p>题目描述：牛牛有一棵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 个点的无权无根树，他想知道有多少个点在树的直径上，你可以帮帮他吗？ 注意：树的直径可能不止一条。</p><p>示例：</p><blockquote><p>输入：3, [1,2], [2,3]</p><p>输出：3</p><p>说明：直径为1−2−3，三个节点均在直径上，故答案为3。</p></blockquote><p>数值范围：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mo>≤</mo><mi>n</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">2≤n≤10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span></p><p>题解1：先两次DFS求出直径mx，p，q。根据树上直径的性质，一个点x,树上距离其最远的点一定是直径的一个端点(任意直径的两个端点中必定至少有一个与x构成最远的距离，证明略)。然后以p为根，找出所有到根节点距离为mx的点，标记其到根节点的所有点。（记忆化一下，每个点最多标记一次是On的）以q为根同理做一次，（注意两次的标记要分开）最后统计所有被标记过的点就是答案。</p><p>根据树上直径的性质，一个点x,树上距离其最远的点一定是直径的一个端点(任意直径的两个端点中必定至少有一个与x构成最远的距离，证明略)。</p><p>代码1：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> M = <span class="number">1e5</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * @param n int整型 节点个数</span></span><br><span class="line"><span class="comment">     * @param u int整型vector </span></span><br><span class="line"><span class="comment">     * @param v int整型vector </span></span><br><span class="line"><span class="comment">     * @return int整型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    vector&lt;<span class="type">int</span>&gt;g[M];</span><br><span class="line">    <span class="type">int</span> p,q,mx,rt,f[M];</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> fa,<span class="type">int</span> dep)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(dep&gt;mx)p=x,mx=dep;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> y:g[x])&#123;</span><br><span class="line">            <span class="keyword">if</span>(y==fa)<span class="keyword">continue</span>;</span><br><span class="line">            <span class="built_in">dfs</span>(y,x,dep+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">pre</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> fa)</span></span>&#123;</span><br><span class="line">        f[x]=fa;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> y:g[x])&#123;</span><br><span class="line">            <span class="keyword">if</span>(y==fa)<span class="keyword">continue</span>;</span><br><span class="line">            <span class="built_in">pre</span>(y,x);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> vs[M],ts[M];</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">col</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line">        <span class="keyword">while</span>(x&amp;&amp;!vs[x])&#123;</span><br><span class="line">            vs[x]=<span class="number">1</span>;</span><br><span class="line">            x=f[x];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">gao</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> fa,<span class="type">int</span> dep)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(dep==mx)&#123;</span><br><span class="line">            <span class="built_in">col</span>(x);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> y:g[x])&#123;</span><br><span class="line">            <span class="keyword">if</span>(y==fa)<span class="keyword">continue</span>;</span><br><span class="line">            <span class="built_in">gao</span>(y,x,dep+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">PointsOnDiameter</span><span class="params">(<span class="type">int</span> n, vector&lt;<span class="type">int</span>&gt;&amp; u, vector&lt;<span class="type">int</span>&gt;&amp; v)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// write code here</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++)&#123;</span><br><span class="line">            g[u[i]].<span class="built_in">push_back</span>(v[i]);</span><br><span class="line">            g[v[i]].<span class="built_in">push_back</span>(u[i]);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">dfs</span>(<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">        q=p,mx=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">dfs</span>(p,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">        <span class="built_in">pre</span>(p,<span class="number">0</span>);</span><br><span class="line">        <span class="built_in">gao</span>(p,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)ts[i]=vs[i],vs[i]=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">pre</span>(q,<span class="number">0</span>);</span><br><span class="line">        <span class="built_in">gao</span>(q,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">        <span class="type">int</span> nm=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="keyword">if</span>(vs[i]||ts[i])nm++;</span><br><span class="line">        <span class="keyword">return</span> nm;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>题解2：树形DP求出距离每个点的不同子树内距离它最远点的距离和次远点的距离。两者的和如果等于直径长度，它就在直径上。两遍DFS即可。</p><p>代码2：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mk make_pair</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> o2(x) (x) * (x)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> eb emplace_back</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SZ(x) ((int)(x).size())</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> all(x) (x).begin(), (x).end()</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> clr(a, b) memset((a), (b), sizeof((a)))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GKD std::ios::sync_with_stdio(false);cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> rep(i, s, t) for(int i = (s), LIM=(t); i &lt; LIM; ++i)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> per(i, s, t) for(int i = (s), LIM=(t); i &gt;= LIM; --i)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> my_unique(x) sort(all(x)), x.erase(unique(all(x)), x.end())</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> int64;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> uint64;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; pii;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;<span class="comment">// 998244353</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MXN = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">ksm</span><span class="params">(<span class="type">int</span> a, int64 b, <span class="type">int</span> kmod = mod)</span> </span>&#123;<span class="type">int</span> res = <span class="number">1</span>;<span class="keyword">for</span>(;b &gt; <span class="number">0</span>;b &gt;&gt;= <span class="number">1</span>, a = (int64)a * a % kmod) <span class="keyword">if</span>(b &amp;<span class="number">1</span>) res = (int64)res * a % kmod;<span class="keyword">return</span> res;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * @param n int整型 节点个数</span></span><br><span class="line"><span class="comment">     * @param u int整型vector </span></span><br><span class="line"><span class="comment">     * @param v int整型vector </span></span><br><span class="line"><span class="comment">     * @return int整型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">int</span> dp[MXN][<span class="number">3</span>], fa[MXN];</span><br><span class="line">    vector&lt;pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; &gt; mp[MXN];</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">dfs1</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> Fa)</span></span>&#123;</span><br><span class="line">        <span class="type">int</span> len = mp[u].<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; ++i)&#123;</span><br><span class="line">            <span class="type">int</span> v = mp[u][i].fi;</span><br><span class="line">            <span class="keyword">if</span>(v == Fa)<span class="keyword">continue</span>;</span><br><span class="line">            <span class="built_in">dfs1</span>(v, u);</span><br><span class="line">            <span class="keyword">if</span>(dp[v][<span class="number">0</span>] + mp[u][i].se &gt; dp[u][<span class="number">0</span>])&#123;</span><br><span class="line">              fa[u] = v;</span><br><span class="line">              dp[u][<span class="number">1</span>] = dp[u][<span class="number">0</span>];</span><br><span class="line">              dp[u][<span class="number">0</span>] = dp[v][<span class="number">0</span>] + mp[u][i].se;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(dp[v][<span class="number">0</span>] + mp[u][i].se &gt; dp[u][<span class="number">1</span>])&#123;</span><br><span class="line">              dp[u][<span class="number">1</span>] = (dp[v][<span class="number">0</span>] + mp[u][i].se);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">dfs2</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> Fa)</span></span>&#123;</span><br><span class="line">        <span class="type">int</span> len = mp[u].<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; ++i)&#123;</span><br><span class="line">            <span class="type">int</span> v = mp[u][i].fi;</span><br><span class="line">            <span class="keyword">if</span>(v == Fa)<span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(fa[u] == v)&#123;</span><br><span class="line">              dp[v][<span class="number">2</span>] = <span class="built_in">max</span>(dp[u][<span class="number">2</span>], dp[u][<span class="number">1</span>])+mp[u][i].se;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">              dp[v][<span class="number">2</span>] = <span class="built_in">max</span>(dp[u][<span class="number">2</span>], dp[u][<span class="number">0</span>])+mp[u][i].se;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">dfs2</span>(v, u);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">PointsOnDiameter</span><span class="params">(<span class="type">int</span> n, vector&lt;<span class="type">int</span>&gt;&amp; u, vector&lt;<span class="type">int</span>&gt;&amp; v)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// write code here</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">            mp[i].<span class="built_in">clear</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; ++i) &#123;</span><br><span class="line">            mp[u[i]].<span class="built_in">eb</span>(<span class="built_in">mk</span>(v[i], <span class="number">1</span>));</span><br><span class="line">            mp[v[i]].<span class="built_in">eb</span>(<span class="built_in">mk</span>(u[i],<span class="number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">memset</span>(dp, <span class="number">0</span>, <span class="built_in">sizeof</span>(dp));</span><br><span class="line">        <span class="built_in">memset</span>(fa, <span class="number">0</span>, <span class="built_in">sizeof</span>(fa));</span><br><span class="line">        <span class="built_in">dfs1</span>(<span class="number">1</span>,<span class="number">-1</span>);</span><br><span class="line">        <span class="built_in">dfs2</span>(<span class="number">1</span>, <span class="number">-1</span>);</span><br><span class="line">        <span class="type">int</span> cnt = <span class="number">0</span>, Mx = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">            Mx = <span class="built_in">max</span>(Mx, <span class="built_in">max</span>(dp[i][<span class="number">0</span>], dp[i][<span class="number">2</span>]));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">            std::vector&lt;<span class="type">int</span>&gt; v = std::vector&lt;<span class="type">int</span>&gt; &#123;dp[i][<span class="number">0</span>], dp[i][<span class="number">1</span>], dp[i][<span class="number">2</span>]&#125;;</span><br><span class="line">            <span class="built_in">sort</span>(<span class="built_in">all</span>(v));</span><br><span class="line">            <span class="keyword">if</span>(v[<span class="number">1</span>] + v[<span class="number">2</span>] == Mx) ++ cnt;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> cnt;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * @param n int整型 节点个数</span></span><br><span class="line"><span class="comment">     * @param u int整型vector </span></span><br><span class="line"><span class="comment">     * @param v int整型vector </span></span><br><span class="line"><span class="comment">     * @return int整型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">int</span> nxt[<span class="number">200010</span>],fir[<span class="number">200010</span>],v[<span class="number">200010</span>],d[<span class="number">200010</span>],f[<span class="number">200010</span>],dd[<span class="number">200010</span>],vis[<span class="number">200010</span>],tot=<span class="number">0</span>,anss=<span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span>&#123;</span><br><span class="line">        nxt[++tot]=fir[x];</span><br><span class="line">        v[tot]=y;</span><br><span class="line">        fir[x]=tot;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=fir[x];i;i=nxt[i])&#123;</span><br><span class="line">            <span class="type">int</span> y=v[i];</span><br><span class="line">            <span class="built_in">dfs</span>(y);</span><br><span class="line">            f[x]=<span class="built_in">max</span>(f[x],d[x]+d[y]+<span class="number">1</span>);</span><br><span class="line">            anss=<span class="built_in">max</span>(anss,f[x]);</span><br><span class="line">            <span class="keyword">if</span>(d[y]+<span class="number">1</span>&gt;d[x])&#123;</span><br><span class="line">                dd[x]=d[x];</span><br><span class="line">                d[x]=d[y]+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(d[y]+<span class="number">1</span>&gt;dd[x])dd[x]=d[y]+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">dfs2</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> ye)</span></span>&#123;</span><br><span class="line">        vis[x]=<span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=fir[x];i;i=nxt[i])&#123;</span><br><span class="line">            <span class="type">int</span> y=v[i];</span><br><span class="line">            <span class="keyword">if</span>(ye&amp;&amp;(d[y]==d[x]<span class="number">-1</span>||d[y]==dd[x]<span class="number">-1</span>))<span class="built_in">dfs2</span>(y,<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">if</span>(!ye&amp;&amp;d[y]==d[x]<span class="number">-1</span>)<span class="built_in">dfs2</span>(y,<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">PointsOnDiameter</span><span class="params">(<span class="type">int</span> n, vector&lt;<span class="type">int</span>&gt;&amp; u, vector&lt;<span class="type">int</span>&gt;&amp; v)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++)&#123;</span><br><span class="line">            <span class="built_in">add</span>(u[i],v[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">dfs</span>(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(f[i]==anss)<span class="built_in">dfs2</span>(i,<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">            <span class="keyword">if</span>(vis[i])ans++;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 双指针 </tag>
            
            <tag> nowcoder </tag>
            
            <tag> 巴什博弈 </tag>
            
            <tag> 树形DP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>可见点的最大数目</title>
      <link href="/2020/12/06/1610-%E5%8F%AF%E8%A7%81%E7%82%B9%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E7%9B%AE/"/>
      <url>/2020/12/06/1610-%E5%8F%AF%E8%A7%81%E7%82%B9%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<p>给你一个点数组<code>points</code>和一个表示角度的整数<code>angle</code>，你的位置是<code>location</code>，其中<code>location = [posx, posy]</code>且<code>points[i] = [xi, yi] </code>都表示<code>X-Y</code>平面上的整数坐标。</p><p>最开始，你面向东方进行观测。你不能进行移动改变位置，但可以通过自转调整观测角度。换句话说，<code>posx</code>和<code>posy</code>不能改变。你的视野范围的角度用<code>angle</code>表示， 这决定了你观测任意方向时可以多宽。设<code>d</code>为逆时针旋转的度数，那么你的视野就是角度范围<code>[d - angle/2, d + angle/2]</code>所指示的那片区域。</p><p>对于每个点，如果由该点、你的位置以及从你的位置直接向东的方向形成的角度 位于你的视野中 ，那么你就可以看到它。同一个坐标上可以有多个点。你所在的位置也可能存在一些点，但不管你的怎么旋转，总是可以看到这些点。同时，点不会阻碍你看到其他点。返回你能看到的点的最大数目。</p><p>提示：</p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>&lt;</mo><mo>=</mo><mi>p</mi><mi>o</mi><mi>i</mi><mi>n</mi><mi>t</mi><mi>s</mi><mi mathvariant="normal">.</mi><mi>l</mi><mi>e</mi><mi>n</mi><mi>g</mi><mi>t</mi><mi>h</mi><mo>&lt;</mo><mo>=</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">1 &lt;= points.length &lt;= 10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6835em;vertical-align:-0.0391em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">o</span><span class="mord mathnormal">in</span><span class="mord mathnormal">t</span><span class="mord mathnormal">s</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mi>o</mi><mi>i</mi><mi>n</mi><mi>t</mi><mi>s</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mi mathvariant="normal">.</mi><mi>l</mi><mi>e</mi><mi>n</mi><mi>g</mi><mi>t</mi><mi>h</mi><mo>=</mo><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">points[i].length == 2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">o</span><span class="mord mathnormal">in</span><span class="mord mathnormal">t</span><span class="mord mathnormal">s</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">==</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mi>o</mi><mi>c</mi><mi>a</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mi mathvariant="normal">.</mi><mi>l</mi><mi>e</mi><mi>n</mi><mi>g</mi><mi>t</mi><mi>h</mi><mo>=</mo><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">location.length == 2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">oc</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">==</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>&lt;</mo><mo>=</mo><mi>a</mi><mi>n</mi><mi>g</mi><mi>l</mi><mi>e</mi><mo>&lt;</mo><mn>360</mn></mrow><annotation encoding="application/x-tex">0 &lt;= angle &lt; 360</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6835em;vertical-align:-0.0391em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">an</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">360</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>&lt;</mo><mo>=</mo><mi>p</mi><mi>o</mi><mi>s</mi><mi>x</mi><mo separator="true">,</mo><mi>p</mi><mi>o</mi><mi>s</mi><mi>y</mi><mo separator="true">,</mo><mi>x</mi><mi>i</mi><mo separator="true">,</mo><mi>y</mi><mi>i</mi><mo>&lt;</mo><mo>=</mo><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup></mrow><annotation encoding="application/x-tex">0 &lt;= posx, posy, xi, yi &lt;= 10^9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6835em;vertical-align:-0.0391em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">os</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.03588em;">osy</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span></span></span></span></li></ul><p>示例1：</p><p><img src="https://imgbed.link/file/1331" alt=""></p><blockquote><p>输入：points = [[2,1],[2,2],[3,3]], angle = 90, location = [1,1]<br>输出：3<br>解释：阴影区域代表你的视野。在你的视野中，所有的点都清晰可见，尽管 [2,2] 和 [3,3]在同一条直线上，你仍然可以看到 [3,3] 。</p></blockquote><p>示例2：</p><blockquote><p>输入：points = [[2,1],[2,2],[3,4],[1,1]], angle = 90, location = [1,1]<br>输出：4<br>解释：在你的视野中，所有的点都清晰可见，包括你所在位置的那个点。</p></blockquote><p>示例3：</p><p><img src="https://imgbed.link/file/1332" alt=""></p><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：points = [[0,1],[2,1]], angle = 13, location = [1,1]</span><br><span class="line">输出：1</span><br><span class="line">解释：如图所示，你只能看到两点之一。</span><br></pre></td></tr></table></figure></blockquote><p>考察点： <strong>atan2，排序</strong></p><p>atan2 取值范围为 (-π，+π](−<em>π</em>，+<em>π</em>]。当 atan2 的<code>返回值为正</code>表示从 X 轴<code>逆时针</code>旋转的角度，<code>返回值为负</code>表示从 X 轴<code>顺时针</code>旋转的角度。</p><p><img src="https://imgbed.link/file/1333" alt=""></p><p>atan2定义如下：</p><p><img src="https://imgbed.link/file/1334" alt=""></p><p>搞明白<code>atan2</code>之后，接下来看看如何将<code>atan2</code>应用到本题。</p><p>计算数组<code>points</code>中每个点到<code>location</code>的<code>atan2</code>值：</p><ul><li>x = points[i][0] - location[0];</li><li>y = points[i][1] - location[1];</li><li>angle[i] = atan2(y, x)</li></ul><p>将<code>angle</code>按照升序排序：即按照第三象限 -&gt; 第四象限 -&gt; 第一象限 -&gt; 第二象限的顺序，逆时排列。因为 angle 存储的是角度，所以将<code>angle</code>增加<code>2π</code>(转一圈)之后，并不会影响相对位置。所以可将<code>angle</code>增加<code>2π</code>然后接到<code>angle</code>后面。最后利用双指针找出<code>angle</code>中可<code>被视野覆盖的最大子区间</code>即可。</p><p>有老铁问为啥要增加<code>2π</code>然后接到<code>angle</code>后面，我来尝试解释一下。<strong>主要是为了双指针的代码易写。</strong></p><p>考虑下图中的情况，按<code>atan2</code>值排序后，显然<code>A</code>会在<code>B</code>前面，即<code>[A, B]</code>。如果以<code>A</code>为起点，显然视野无法覆盖<code>B</code>。而以<code>B</code>为起点时，因为数组<code>[A, B]</code>的限制，也访问不到<code>A</code>。所以通过拼接的方式将数组变为<code>[A, B, A+2π, B+2π]</code>。此时以<code>B</code>为起点时，可以覆盖到<code>A+2π</code>，即达到下图所示的效果。</p><p><img src="https://imgbed.link/file/1335" alt=""></p><p>代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">visiblePoints</span><span class="params">(List&lt;List&lt;Integer&gt;&gt; points, <span class="type">int</span> angle, List&lt;Integer&gt; location)</span> &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">ans</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            List&lt;Double&gt; angles = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(List&lt;Integer&gt; point : points) &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> location.get(<span class="number">0</span>) - point.get(<span class="number">0</span>);</span><br><span class="line">                <span class="type">int</span> <span class="variable">y</span> <span class="operator">=</span> location.get(<span class="number">1</span>) - point.get(<span class="number">1</span>);</span><br><span class="line">                <span class="keyword">if</span> (x == <span class="number">0</span> &amp;&amp; y == <span class="number">0</span>) &#123;</span><br><span class="line">                    ans++;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    angles.add(Math.atan2(y, x));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//sort</span></span><br><span class="line">            Collections.sort(angles);</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>, n = angles.size(); i &lt; n; i++) &#123;</span><br><span class="line">                angles.add(angles.get(i) + Math.acos(-<span class="number">1.0</span>)*<span class="number">2</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="type">int</span> <span class="variable">anw</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>, j = <span class="number">0</span>; i &lt; angles.size(); i++) &#123;</span><br><span class="line">                <span class="keyword">while</span>(j &lt; angles.size() &amp;&amp;</span><br><span class="line">                      (Math.abs(angles.get(j) - angles.get(i) - Math.acos(-<span class="number">1.0</span>)*angle/<span class="number">180</span>) &lt; <span class="number">1e-8</span> ||</span><br><span class="line">                      angles.get(j) - angles.get(i) &lt; Math.acos(-<span class="number">1.0</span>)*angle/<span class="number">180</span>)) &#123;</span><br><span class="line">                    j++;</span><br><span class="line">                &#125;</span><br><span class="line">                anw = Math.max(j - i + ans, anw);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> anw;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">visiblePoints</span><span class="params">(vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&amp; points, <span class="type">int</span> ang, vector&lt;<span class="type">int</span>&gt;&amp; location)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        vector&lt;<span class="type">double</span>&gt; angle;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">const</span> <span class="keyword">auto</span> &amp;point : points) &#123;</span><br><span class="line">            <span class="type">int</span> x = location[<span class="number">0</span>] - point[<span class="number">0</span>];</span><br><span class="line">            <span class="type">int</span> y = location[<span class="number">1</span>] - point[<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span> (x == <span class="number">0</span> &amp;&amp; y == <span class="number">0</span>) &#123;</span><br><span class="line">                ans++;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                angle.<span class="built_in">emplace_back</span>(<span class="built_in">atan2</span>(y, x));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">sort</span>(angle.<span class="built_in">begin</span>(), angle.<span class="built_in">end</span>());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>, n = angle.<span class="built_in">size</span>(); i &lt; n; i++) &#123;</span><br><span class="line">            angle.<span class="built_in">emplace_back</span>(angle[i] + <span class="built_in">acos</span>(<span class="number">-1.0</span>)*<span class="number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> anw = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>; i &lt; angle.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">            <span class="keyword">while</span>(j &lt; angle.<span class="built_in">size</span>() &amp;&amp;</span><br><span class="line">                (<span class="built_in">fabs</span>(angle[j] - angle[i] - <span class="built_in">acos</span>(<span class="number">-1.0</span>)*ang/<span class="number">180</span>) &lt; <span class="number">1e-8</span> || angle[j] - angle[i] &lt; <span class="built_in">acos</span>(<span class="number">-1.0</span>)*ang/<span class="number">180</span>)) &#123;</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">            anw = <span class="built_in">max</span>(j - i + ans, anw);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> anw;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> math </tag>
            
            <tag> atan2 </tag>
            
            <tag> 双指针 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>单链表中环问题</title>
      <link href="/2020/12/06/%E6%9C%89%E5%85%B3%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%8E%AF%E9%97%AE%E9%A2%98/"/>
      <url>/2020/12/06/%E6%9C%89%E5%85%B3%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%8E%AF%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>转自：<a href="https://www.cnblogs.com/dancingrain/p/3405197.html">https://www.cnblogs.com/dancingrain/p/3405197.html</a></p><p>首先，关于单链表中的环，一般涉及到一下问题：</p><ul><li>给一个单链表，判断其中是否有环的存在；</li><li>如果存在环，找出环的入口点；</li><li>如果存在环，求出环上节点的个数；</li><li>如果存在环，求出链表的长度；</li><li>如果存在环，求出环上距离任意一个节点最远的点（对面节点）；</li><li>(扩展)如何判断两个无环链表是否相交；</li><li>(扩展)如果相交，求出第一个相交的节点；</li></ul><p>下面，我将针对上面这七个问题一一给出解释和相应的代码。</p><p>####判断时候有环（链表头指针为head）</p><p>对于这个问题我们可以采用“快慢指针”的方法。就是有两个指针fast和slow，开始的时候两个指针都指向链表头head，然后在每一步操作中slow向前走一步即：slow = slow-&gt;next，而fast每一步向前两步即：fast = fast-&gt;next-&gt;next。由于fast要比slow移动的快，如果有环，fast一定会先进入环，而slow后进入环。当两个指针都进入环之后，经过一定步的操作之后，二者一定能够在环上相遇，并且此时slow还没有绕环一圈，也就是说一定是在slow走完第一圈之前相遇。证明可以看下图：</p><p><img src="https://imgbed.link/file/1336" alt=""></p><p>当slow刚进入环时每个指针可能处于上面的情况，接下来slow和fast分别向前走即：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (slow != <span class="literal">NULL</span> &amp;&amp; fast-&gt;next != <span class="literal">NULL</span>) </span><br><span class="line">&#123; </span><br><span class="line">         slow = slow -&gt; next ; </span><br><span class="line">         fast = fast -&gt; next -&gt; next ; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也就是说，slow每次向前走一步，fast向前追了两步，因此每一步操作后fast到slow的距离缩短了1步，这样继续下去就会使得两者之间的距离逐渐缩小：…、5、4、3、2、1、0 -&gt; 相遇。又因为在同一个环中fast和slow之间的距离不会大于换的长度，因此到二者相遇的时候slow一定还没有走完一周（或者正好走完以后，这种情况出现在开始的时候fast和slow都在环的入口处）。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">node</span>&#123; </span><br><span class="line">    <span class="type">char</span> data ; </span><br><span class="line">    node * next ; </span><br><span class="line">&#125;Node; </span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">exitLoop</span><span class="params">(Node *head)</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    Node *fast, *slow ; </span><br><span class="line">    slow = fast = head ; </span><br><span class="line">   </span><br><span class="line">    <span class="keyword">while</span> (slow != <span class="literal">NULL</span> &amp;&amp; fast -&gt; next != <span class="literal">NULL</span>) </span><br><span class="line">    &#123; </span><br><span class="line">        slow = slow -&gt; next ; </span><br><span class="line">        fast = fast -&gt; next -&gt; next ; </span><br><span class="line">        <span class="keyword">if</span> (slow == fast) </span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span> ; </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span> ; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>####找出环的入口点：</p><p>我结合着下图讲解一下：</p><p><img src="https://imgbed.link/file/1337" alt=""></p><p>从上面的分析知道，当<strong>fast</strong>和<strong>slow</strong>相遇时，<strong>slow</strong>还没有走完链表，假设<strong>fast</strong>已经在环内循环了<strong>n(1 ≤ n)<strong>圈。假设</strong>slow</strong>走了<strong>s</strong>步，则<strong>fast</strong>走了<strong>2s</strong>步，又由于</p><p><code>fast走过的步数 = s + n*r(s + 在环上多走的n圈)</code>，则有下面的等式：</p><p><code>2*s = s + n  * r ;</code> (1)</p><p>=&gt; <code>s = n*r ;</code>(2)</p><p>如果假设整个链表的长度是L，入口和相遇点的距离是x（如上图所示），起点到入口点的距离是a(如上图所示)，则有：</p><p><code>a + x = s = n * r; </code>(3)  由（2）推出</p><p><code>a + x = (n - 1) * r + r  = (n - 1) * r + (L - a); </code>(4) 由环的长度 = 链表总长度 - 起点到入口点的距离求出</p><p><code>a = (n - 1) * r + (L -a -x);</code> (5)</p><p>集合式子（5）以及上图我们可以看出，从链表起点head开始到入口点的距离a,与从slow和fast的相遇点（如图）到入口点的距离相等。</p><p>因此我们就可以分别用一个指针（ptr1, prt2），同时从head与slow和fast的相遇点出发，每一次操作走一步，直到ptr1 == ptr2，此时的位置也就是入口点！</p><p>到此第二个问题也已经解决。</p><p>下面给出示意性的简单代码（没有测试但是应该没有问题）：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Node* <span class="title">findLoopStart</span><span class="params">(Node *head)</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    Node *fast, *slow ; </span><br><span class="line">    slow = fast = head ; </span><br><span class="line">   </span><br><span class="line">    <span class="keyword">while</span> (slow != <span class="literal">NULL</span> &amp;&amp; fast -&gt; next != <span class="literal">NULL</span>) </span><br><span class="line">    &#123; </span><br><span class="line">        slow = slow -&gt; next ; </span><br><span class="line">        fast = fast -&gt; next -&gt; next ; </span><br><span class="line">        <span class="keyword">if</span> (slow == fast) <span class="keyword">break</span> ; </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">if</span> (slow == <span class="literal">NULL</span> || fast -&gt; next == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">NULL</span> ; <span class="comment">//没有环，返回NULL值 </span></span><br><span class="line">   </span><br><span class="line">    Node * ptr1 = head ; <span class="comment">//链表开始点 </span></span><br><span class="line">    Node * ptr2 = slow ; <span class="comment">//相遇点 </span></span><br><span class="line">    <span class="keyword">while</span> (ptr1 != ptr2)  </span><br><span class="line">    &#123; </span><br><span class="line">        ptr1 = ptr1 -&gt; next ; </span><br><span class="line">        ptr2 = ptr2 -&gt; next ; </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">return</span> ptr1 ; <span class="comment">//找到入口点 </span></span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>####如果存在环，求环上节点的个数：</p><p>对于这个问题，我这里有两个思路（肯定还有其它跟好的办法）：</p><p>思路1：记录下相遇节点存入临时变量tempPtr，然后让slow(或者fast，都一样)继续向前走slow = slow -&gt; next；一直到slow == tempPtr; 此时经过的步数就是环上节点的个数；</p><p>思路2： 从相遇点开始slow和fast继续按照原来的方式向前走slow = slow -&gt; next; fast = fast -&gt; next -&gt; next；直到二者再次项目，此时经过的步数就是环上节点的个数 。</p><p>第一种思路很简单，其实就是一次遍历链表的环，从而统计出点的个数，没有什么可以详细解释的了。对于第二种思路，我们可以这样想，结合上面的分析，fast和slow没一次操作都会使得两者之间的距离较少1。我们可以把两者相遇的时候看做两者之间的距离正好是整个环的长度r。因此，当再次相遇的时候所经过的步数正好是环上节点的数目。由于这两种思路都比较简单，代码也很容易实现，这里就不给出了。</p><h4 id="如果存在环，求出链表的长度：">如果存在环，求出链表的长度：</h4><p>到这里，问题已经简单的多了，因为我们在问题1、2、3中已经做得足够的”准备工作“。我们可以这样求出整个链表的长度：</p><p>链表长度L = 起点到入口点的距离 + 环的长度r;</p><p>已经知道了起点和入口点的位置，那么两者之间的距离很好求了吧！环的长度也已经知道了，因此该问题也就迎刃而解了！</p><p>####求出环上距离任意一个节点最远的点（对面节点）</p><p>如下图所示，点1和4、点2和5、点3和6分别互为”对面节点“ ，也就是换上最远的点，我们的要求是怎么求出换上任意一个点的最远点。</p><p><img src="https://imgbed.link/file/1338" alt="img"></p><p>对于换上任意的一个点ptr0, 我们要找到它的”对面点“，可以这样思考：同样使用上面的快慢指针的方法，让slow和fast都指向ptr0，每一步都执行与上面相同的操作（slow每次跳一步，fast每次跳两步），当fast = ptr0或者fast = prt0-&gt;next的时候slow所指向的节点就是ptr0的”对面节点“。为什么是这样呢？我们可以这样分析：</p><p><img src="https://imgbed.link/file/1339" alt="img"></p><p>如上图，我们想像一下，把环从ptro处展开，展开后可以是无限长的（如上在6后重复前面的内容）如上图。现在问题就简单了，由于slow移动的距离永远是fast的一般，因此当fast遍历玩整个环长度r个节点的时候slow正好遍历了r/2个节点，也就是说，此时正好指向距离ptr0最远的点。</p><p>对于问题6（扩展）如何判断两个无环链表是否相交，和7（扩展）如果相交，求出第一个相交的节点，其实就是做一个问题的转化：假设有连个链表listA和listB，如果两个链表都无环，并且有交点，那么我们可以让其中一个链表（不妨设是listA）的为节点连接到其头部，这样在listB中就一定会出现一个环。因此我们将问题6和7分别转化成了问题1和2.看看下图就会明白了：</p><p><img src="https://imgbed.link/file/1340" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> 单链表 </tag>
            
            <tag> 环 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA快捷键使用</title>
      <link href="/2020/10/26/IDEA%E5%BF%AB%E6%8D%B7%E9%94%AE%E4%BD%BF%E7%94%A8/"/>
      <url>/2020/10/26/IDEA%E5%BF%AB%E6%8D%B7%E9%94%AE%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h4 id="Idea常用快捷键">Idea常用快捷键</h4><h5 id="ctrl">ctrl</h5><table><thead><tr><th style="text-align:center">快捷键</th><th>功能与作用</th></tr></thead><tbody><tr><td style="text-align:center">ctrl + F</td><td>在当前文本文件中查找关键字</td></tr><tr><td style="text-align:center">ctrl + R</td><td>在当前文本文件中进行文本替换</td></tr><tr><td style="text-align:center">ctrl + Y</td><td>删除光标所在行或者删除选中的行</td></tr><tr><td style="text-align:center">ctrl + D</td><td>复制光标所在的行或复制选择的内容，并将复制的内容插入光标位置下面</td></tr><tr><td style="text-align:center">ctrl + W</td><td>递进式选择代码块。可选中光标所在的单词或段落，连续按会在原有选中的基础上再扩展选中的范围</td></tr><tr><td style="text-align:center">ctrl + O</td><td>选择可重写的方法</td></tr><tr><td style="text-align:center">ctrl + Tab</td><td>编辑窗口切换，如果在切换的过程中又加按上delete，则是关闭对应选中的窗口</td></tr><tr><td style="text-align:center">ctrl+左键单击</td><td>在打开的文件标题上，弹出该文件路径</td></tr><tr><td style="text-align:center">ctrl + 左方向</td><td>光标跳到当前单词/中文句的左侧开头位置</td></tr></tbody></table><h5 id="Alt">Alt</h5><table><thead><tr><th>快捷键</th><th>功能与作用</th></tr></thead><tbody><tr><td>Alt + Enter</td><td>idea根据光标所在问题，提供快速修复选择，光标放在的位置不同提示的结果不同</td></tr><tr><td>Alt + Insert</td><td>代码自动生成，如生成对象的set/get方法，构造函数。同String()等等</td></tr><tr><td>Alt + 左方向</td><td>按照左方向切换当前已经打开的文件视图</td></tr></tbody></table><h5 id="Shift">Shift</h5><table><thead><tr><th>快捷键</th><th>功能与作用</th></tr></thead><tbody><tr><td>Shift + Tab</td><td>取消缩进</td></tr><tr><td>Shift + 滚轮前后滚动</td><td>当前文件的横向滚动轴滚动</td></tr></tbody></table><h5 id="ctrl-Alt">ctrl + Alt</h5><table><thead><tr><th>快捷键</th><th>功能与作用</th></tr></thead><tbody><tr><td>ctrl + Alt + L</td><td>格式化代码，可以对当前文件和整个包目录使用</td></tr><tr><td>ctrl + Alt + O</td><td>优化导入的类，可以对当前文件和整个包目录使用</td></tr><tr><td>ctrl + Alt + V</td><td>快速引进变量</td></tr><tr><td>ctrl + Alt + 左方向键</td><td>退回到上一个操作的地方</td></tr><tr><td>ctrl + Alt + 右方向键</td><td>前进到上一个操作的地方</td></tr><tr><td>ctrl + Alt + 前方向键</td><td>在查找模式下，跳到上个查找的文件</td></tr><tr><td>ctrl + Alt + 后方向键</td><td>在查找模式下，跳到下个查找的文件</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> tool </category>
          
      </categories>
      
      
        <tags>
            
            <tag> idea </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>x的平方根</title>
      <link href="/2020/05/09/x%E7%9A%84%E5%B9%B3%E6%96%B9%E6%A0%B9/"/>
      <url>/2020/05/09/x%E7%9A%84%E5%B9%B3%E6%96%B9%E6%A0%B9/</url>
      
        <content type="html"><![CDATA[<h4 id="1-暴力解法">1. 暴力解法</h4><p>将整数的最大值(2147483647)的平方根直接用计算器计算出来，直接遍历暴搜到 $${i}*{i} \geq {x}$$ 停止，返回x或x-1，特殊处理一下0元素。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">    public int mySqrt(int x) &#123;</span><br><span class="line">        if(x == 0) return 0;</span><br><span class="line">        for(int i = 1;i &lt;= 46340;i ++)&#123;</span><br><span class="line">            if(i * i &gt; x)&#123;</span><br><span class="line">                return i - 1;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return 46340;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-二分法">2. 二分法</h4><p>使用二分法搜索平方根的思想很简单，就类似于小时候我们看的电视节目中的“猜价格”游戏，高了就往低了猜，低了就往高了猜，范围越来越小。因此，使用二分法猜算术平方根就很自然。</p><p>一个数的平方根肯定不会超过它自己，而且一个数的平方根最多不会超过它的一半。举个栗子，$$(\frac{8}{2})^2=4^2 \geq {8}$$</p><p>如果这个数越大越是如此，因此我们要计算一下，这个边界是多少。为此，解这个不等式：$$(\frac{a}{2})^2 \geq {a}$$</p><p>解以上不等式得：$${a \geq 4}$$ 或 $${a \leq 0}$$。于是边界值就是4，我们对0，1，2，3进行计算得到0，1，1，1。</p><p>注意：这 4 个特值如果没有考虑到，有可能导致你设置的搜索边界不正确。在使用二分法寻找平方根的时候，要特别注意边界值的选择。</p><p>代码一：所有的数都放在一起考虑，为了照顾到 0 把左边界设置为 0，为了照顾到 1 把右边界设置为：x / 2 + 1。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">mySqrt</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">        <span class="comment">// 注意：针对特殊测试用例，例如 2147395599</span></span><br><span class="line">        <span class="comment">// 要把搜索的范围设置成长整型</span></span><br><span class="line">        <span class="comment">// 为了照顾到 0 把左边界设置为 0</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// # 为了照顾到 1 把右边界设置为 x // 2 + 1</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">right</span> <span class="operator">=</span> x / <span class="number">2</span> + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (left &lt; right) &#123;</span><br><span class="line">            <span class="comment">// 注意：这里一定取右中位数，如果取左中位数，代码会进入死循环</span></span><br><span class="line">            <span class="comment">// long mid = left + (right - left + 1) / 2;</span></span><br><span class="line">            <span class="type">long</span> <span class="variable">mid</span> <span class="operator">=</span> (left + right + <span class="number">1</span>) &gt;&gt;&gt; <span class="number">1</span>;</span><br><span class="line">            <span class="type">long</span> <span class="variable">square</span> <span class="operator">=</span> mid * mid;</span><br><span class="line">            <span class="keyword">if</span> (square &gt; x) &#123;</span><br><span class="line">                right = mid - <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                left = mid;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 因为一定存在，因此无需后处理</span></span><br><span class="line">        <span class="keyword">return</span> (<span class="type">int</span>) left;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码二：特殊处理一下 0 就可以</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">mySqrt</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (x == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 注意：针对特殊测试用例，例如 2147395599</span></span><br><span class="line">        <span class="comment">// 要把搜索的范围设置成长整型</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="type">long</span> <span class="variable">right</span> <span class="operator">=</span> x / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">while</span> (left &lt; right) &#123;</span><br><span class="line">            <span class="comment">// 注意：这里一定取右中位数，如果取左中位数，代码会进入死循环</span></span><br><span class="line">            <span class="comment">// long mid = left + (right - left + 1) / 2;</span></span><br><span class="line">            <span class="type">long</span> <span class="variable">mid</span> <span class="operator">=</span> (left + right + <span class="number">1</span>) &gt;&gt;&gt; <span class="number">1</span>;</span><br><span class="line">            <span class="type">long</span> <span class="variable">square</span> <span class="operator">=</span> mid * mid;</span><br><span class="line">            <span class="keyword">if</span> (square &gt; x) &#123;</span><br><span class="line">                right = mid - <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                left = mid;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 因为一定存在，因此无需后处理</span></span><br><span class="line">        <span class="keyword">return</span> (<span class="type">int</span>) left;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-牛顿法">3. 牛顿法</h4><p>算法概念：在迭代过程中，<strong>以直线代替曲线</strong>，用一阶泰勒展式（即在当前点的切线）代替原曲线，求直线与 <strong>x</strong> 轴的交点，重复这个过程直到收敛。</p><p>注意：<strong>牛顿法得到的是平方根的浮点型精确值</strong>（可能会有一定误差），根据题目中的要求，把最后得到的这个数转换为 <code>int</code> 型，即去掉小数部分即可。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">mySqrt</span><span class="params">(<span class="type">int</span> a)</span> &#123;</span><br><span class="line">        <span class="type">long</span> <span class="variable">x</span> <span class="operator">=</span> a;</span><br><span class="line">        <span class="keyword">while</span> (x * x &gt; a) &#123;</span><br><span class="line">            x = (x + a / x) / <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (<span class="type">int</span>) x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>备注：参考部分题解：<a href="https://leetcode-cn.com/problems/sqrtx/solution/er-fen-cha-zhao-niu-dun-fa-python-dai-ma-by-liweiw/">https://leetcode-cn.com/problems/sqrtx/solution/er-fen-cha-zhao-niu-dun-fa-python-dai-ma-by-liweiw/</a></p>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> math </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux命令学习总结</title>
      <link href="/2020/02/26/Linux%E5%91%BD%E4%BB%A4%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
      <url>/2020/02/26/Linux%E5%91%BD%E4%BB%A4%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p>持续更新中。。。。。。</p><h5 id="1-tar打包">1. tar打包</h5><p>Linux tar命令用于备份文件。tar是用来建立，还原备份文件的工具程序，它可以加入，解开备份文件内的文件。</p><p>语法如下：</p><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar [-ABcdgGhiklmMoOpPrRsStuUvwWxzZ][-b &lt;区块数目&gt;][-C &lt;目的目录&gt;][-f &lt;备份文件&gt;][-F &lt;Script文件&gt;][-K &lt;文件&gt;][-L &lt;媒体容量&gt;][-N &lt;日期时间&gt;][-T &lt;范本文件&gt;][-V &lt;卷册名称&gt;][-X &lt;范本文件&gt;][-&lt;设备编号&gt;&lt;存储密度&gt;][--after-date=&lt;日期时间&gt;][--atime-preserve][--backuup=&lt;备份方式&gt;][--checkpoint][--concatenate][--confirmation][--delete][--exclude=&lt;范本样式&gt;][--force-local][--group=&lt;群组名称&gt;][--help][--ignore-failed-read][--new-volume-script=&lt;Script文件&gt;][--newer-mtime][--no-recursion][--null][--numeric-owner][--owner=&lt;用户名称&gt;][--posix][--erve][--preserve-order][--preserve-permissions][--record-size=&lt;区块数目&gt;][--recursive-unlink][--remove-files][--rsh-command=&lt;执行指令&gt;][--same-owner][--suffix=&lt;备份字尾字符串&gt;][--totals][--use-compress-program=&lt;执行指令&gt;][--version][--volno-file=&lt;编号文件&gt;][文件或目录...]</span><br></pre></td></tr></table></figure></blockquote><p>参数：</p><ul><li>-A或–catenate 新增文件到已存在的备份文件。</li><li>-b&lt;区块数目&gt;或–blocking-factor=&lt;区块数目&gt; 设置每笔记录的区块数目，每个区块大小为12Bytes。</li><li>-B或–read-full-records 读取数据时重设区块大小。</li><li>-c或–create 建立新的备份文件。</li><li>-C&lt;目的目录&gt;或–directory=&lt;目的目录&gt; 切换到指定的目录。</li><li>-d或–diff或–compare 对比备份文件内和文件系统上的文件的差异。</li><li>-f&lt;备份文件&gt;或–file=&lt;备份文件&gt; 指定备份文件。</li><li>-F&lt;Script文件&gt;或–info-script=&lt;Script文件&gt; 每次更换磁带时，就执行指定的Script文件。</li><li>-g或–listed-incremental 处理GNU格式的大量备份。</li><li>-G或–incremental 处理旧的GNU格式的大量备份。</li><li>-h或–dereference 不建立符号连接，直接复制该连接所指向的原始文件。</li><li>-i或–ignore-zeros 忽略备份文件中的0 Byte区块，也就是EOF。</li><li>-k或–keep-old-files 解开备份文件时，不覆盖已有的文件。</li><li>-K&lt;文件&gt;或–starting-file=&lt;文件&gt; 从指定的文件开始还原。</li><li>-l或–one-file-system 复制的文件或目录存放的文件系统，必须与tar指令执行时所处的文件系统相同，否则不予复制。</li><li>-L&lt;媒体容量&gt;或-tape-length=&lt;媒体容量&gt; 设置存放每体的容量，单位以1024 Bytes计算。</li><li>-m或–modification-time 还原文件时，不变更文件的更改时间。</li><li>-M或–multi-volume 在建立，还原备份文件或列出其中的内容时，采用多卷册模式。</li><li>-N&lt;日期格式&gt;或–newer=&lt;日期时间&gt; 只将较指定日期更新的文件保存到备份文件里。</li><li>-o或–old-archive或–portability 将资料写入备份文件时使用V7格式。</li><li>-O或–stdout 把从备份文件里还原的文件输出到标准输出设备。</li><li>-p或–same-permissions 用原来的文件权限还原文件。</li><li>-P或–absolute-names 文件名使用绝对名称，不移除文件名称前的&quot;/&quot;号。</li><li>-r或–append 新增文件到已存在的备份文件的结尾部分。</li><li>-R或–block-number 列出每个信息在备份文件中的区块编号。</li><li>-s或–same-order 还原文件的顺序和备份文件内的存放顺序相同。</li><li>-S或–sparse 倘若一个文件内含大量的连续0字节，则将此文件存成稀疏文件。</li><li>-t或–list 列出备份文件的内容。</li><li>-T&lt;范本文件&gt;或–files-from=&lt;范本文件&gt; 指定范本文件，其内含有一个或多个范本样式，让tar解开或建立符合设置条件的文件。</li><li>-u或–update 仅置换较备份文件内的文件更新的文件。</li><li>-U或–unlink-first 解开压缩文件还原文件之前，先解除文件的连接。</li><li>-v或–verbose 显示指令执行过程。</li><li>-V&lt;卷册名称&gt;或–label=&lt;卷册名称&gt; 建立使用指定的卷册名称的备份文件。</li><li>-w或–interactive 遭遇问题时先询问用户。</li><li>-W或–verify 写入备份文件后，确认文件正确无误。</li><li>-x或–extract或–get 从备份文件中还原文件。</li><li>-X&lt;范本文件&gt;或–exclude-from=&lt;范本文件&gt; 指定范本文件，其内含有一个或多个范本样式，让ar排除符合设置条件的文件。</li><li>-z或–gzip或–ungzip 通过gzip指令处理备份文件。</li><li>-Z或–compress或–uncompress 通过compress指令处理备份文件。</li><li>-&lt;设备编号&gt;&lt;存储密度&gt; 设置备份用的外围设备编号及存放数据的密度。</li><li>–after-date=&lt;日期时间&gt; 此参数的效果和指定&quot;-N&quot;参数相同。</li><li>–atime-preserve 不变更文件的存取时间。</li><li>–backup=&lt;备份方式&gt;或–backup 移除文件前先进行备份。</li><li>–checkpoint 读取备份文件时列出目录名称。</li><li>–concatenate 此参数的效果和指定&quot;-A&quot;参数相同。</li><li>–confirmation 此参数的效果和指定&quot;-w&quot;参数相同。</li><li>–delete 从备份文件中删除指定的文件。</li><li>–exclude=&lt;范本样式&gt; 排除符合范本样式的文件。</li><li>–group=&lt;群组名称&gt; 把加入设备文件中的文件的所属群组设成指定的群组。</li><li>–help 在线帮助。</li><li>–ignore-failed-read 忽略数据读取错误，不中断程序的执行。</li><li>–new-volume-script=&lt;Script文件&gt; 此参数的效果和指定&quot;-F&quot;参数相同。</li><li>–newer-mtime 只保存更改过的文件。</li><li>–no-recursion 不做递归处理，也就是指定目录下的所有文件及子目录不予处理。</li><li>–null 从null设备读取文件名称。</li><li>–numeric-owner 以用户识别码及群组识别码取代用户名称和群组名称。</li><li>–owner=&lt;用户名称&gt; 把加入备份文件中的文件的拥有者设成指定的用户。</li><li>–posix 将数据写入备份文件时使用POSIX格式。</li><li>–preserve 此参数的效果和指定&quot;-ps&quot;参数相同。</li><li>–preserve-order 此参数的效果和指定&quot;-A&quot;参数相同。</li><li>–preserve-permissions 此参数的效果和指定&quot;-p&quot;参数相同。</li><li>–record-size=&lt;区块数目&gt; 此参数的效果和指定&quot;-b&quot;参数相同。</li><li>–recursive-unlink 解开压缩文件还原目录之前，先解除整个目录下所有文件的连接。</li><li>–remove-files 文件加入备份文件后，就将其删除。</li><li>–rsh-command=&lt;执行指令&gt; 设置要在远端主机上执行的指令，以取代rsh指令。</li><li>–same-owner 尝试以相同的文件拥有者还原文件。</li><li>–suffix=&lt;备份字尾字符串&gt; 移除文件前先行备份。</li><li>–totals 备份文件建立后，列出文件大小。</li><li>–use-compress-program=&lt;执行指令&gt; 通过指定的指令处理备份文件。</li><li>–version 显示版本信息。</li><li>–volno-file=&lt;编号文件&gt; 使用指定文件内的编号取代预设的卷册编号。</li></ul><p>常用案例：</p><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tar -czvf test.tar.gz a.c   //压缩a.c文件为test.tar.gz</span><br><span class="line">tar -tzvf test.tar.gz       //列出压缩文件内容</span><br><span class="line">tar -xzvf test.tar.gz       //解压文件</span><br></pre></td></tr></table></figure></blockquote><h5 id="2-find查找">2. find查找</h5><p>Linux find命令用来在指定目录下查找文件。任何位于参数之前的字符串都将被视为欲查找的目录名。如果使用该命令时，不设置任何参数，则find命令将在当前目录下查找子目录与文件。并且将查找到的子目录和文件全部进行显示。</p><p>语法：</p><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find   path   -option   [   -print ]   [ -exec   -ok   command ]   &#123;&#125; \;</span><br></pre></td></tr></table></figure></blockquote><p>参数说明：</p><blockquote><p>find 根据下列规则判断 path 和 expression，在命令列上第一个 - ( ) , ! 之前的部份为 path，之后的是 expression。如果 path 是空字串则使用目前路径，如果 expression 是空字串则使用 -print 为预设 expression。</p><p>expression 中可使用的选项有二三十个之多，在此只介绍最常用的部份。</p><p>-mount, -xdev : 只检查和指定目录在同一个文件系统下的文件，避免列出其它文件系统中的文件</p><p>-amin n : 在过去 n 分钟内被读取过</p><p>-anewer file : 比文件 file 更晚被读取过的文件</p><p>-atime n : 在过去n天内被读取过的文件</p><p>-cmin n : 在过去 n 分钟内被修改过</p><p>-cnewer file :比文件 file 更新的文件</p><p>-ctime n : 在过去n天内被修改过的文件</p><p>-empty : 空的文件-gid n or -group name : gid 是 n 或是 group 名称是 name</p><p>-ipath p, -path p : 路径名称符合 p 的文件，ipath 会忽略大小写</p><p>-name name, -iname name : 文件名称符合 name 的文件。iname 会忽略大小写</p><p>-size n : 文件大小 是 n 单位，b 代表 512 位元组的区块，c 表示字元数，k 表示 kilo bytes，w 是二个位元组。-type c : 文件类型是 c 的文件。</p><p>d: 目录</p><p>c: 字型装置文件</p><p>b: 区块装置文件</p><p>p: 具名贮列</p><p>f: 一般文件</p><p>l: 符号连结</p><p>s: socket</p><p>-pid n : process id 是 n 的文件</p><p>你可以使用 ( ) 将运算式分隔，并使用下列运算。</p><p>exp1 -and exp2</p><p>! expr</p><p>-not expr</p><p>exp1 -or exp2</p><p>exp1, exp2</p></blockquote><p>常用命令案例：</p><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">//将当前目录及其子目录下所有延伸档名是 c 的文件列出来</span><br><span class="line">find . -name &quot;*.c&quot;</span><br><span class="line">//将当前目录其其下子目录中所有一般文件列出</span><br><span class="line">find . -type f</span><br><span class="line">//将当前目录及其子目录下所有最近 20 天内更新过的文件列出</span><br><span class="line">find . -ctime -20</span><br><span class="line">//查找/var/log目录中更改时间在7日以前的普通文件，并在删除之前询问它们</span><br><span class="line">find /var/log -type f -mtime +7 -ok rm &#123;&#125; \;</span><br><span class="line">//查找前目录中文件属主具有读、写权限，并且文件所属组的用户和其他用户具有读权限的文件</span><br><span class="line">find . -type f -perm 644 -exec ls -l &#123;&#125; \;</span><br><span class="line">//为了查找系统中所有文件长度为0的普通文件，并列出它们的完整路径</span><br><span class="line">find / -type f -size 0 -exec ls -l &#123;&#125; \;</span><br></pre></td></tr></table></figure></blockquote><p>#####3. sz下载，rz上传</p><p>rz，sz是<code>Linux/Unix</code>同<code>Windows</code>进行<code>ZModem</code>文件传输的命令行工具。<br>优点就是不用再开一个sftp工具登录上去上传下载文件。</p><p>sz：将选定的文件发送（send）到本地机器<br>rz：运行该命令会弹出一个文件选择窗口，从本地选择文件上传到Linux服务器</p><p>安装命令：</p><blockquote><p>yum install lrzsz</p></blockquote><p>从服务端发送文件到客户端：</p><blockquote><p>sz filename</p></blockquote><p>从客户端上传文件到服务端：</p><p>rz</p><p>在弹出的框中选择文件，上传文件的用户和组是当前登录的用户</p><p><code>SecureCRT</code>设置默认路径：</p><p>Options -&gt; Session Options -&gt; Terminal -&gt; Xmodem/Zmodem -&gt;Directories</p><p><code>Xshell</code>设置默认路径：</p><p>右键会话 -&gt; 属性 -&gt; ZMODEM -&gt; 接收文件夹</p><h5 id="4-mv命令">4. mv命令</h5><p>mv 命令用来为文件或目录改名、或将文件或目录移入其它位置。</p><p>语法：</p><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mv [options] source dest</span><br><span class="line">mv [options] source... directory</span><br></pre></td></tr></table></figure></blockquote><p>参数说明：</p><ul><li>-i: 若指定目录已有同名文件，则先询问是否覆盖旧文件;</li><li>-f: 在 mv 操作要覆盖某已有的目标文件时不给任何指示;</li></ul><p>参数设置和运行结果：</p><table><thead><tr><th>命令格式</th><th>运行结果</th></tr></thead><tbody><tr><td>mv 文件名 文件名</td><td>将源文件名改为目标文件名</td></tr><tr><td>mv 文件名 目录名</td><td>将文件移动到目标目录</td></tr><tr><td>mv 目录名 目录名</td><td>目标目录已存在，将源目录移动到目标目录；目标目录不存在则改名</td></tr><tr><td>mv 目录名 文件名</td><td>出错</td></tr></tbody></table><p>命令案例：</p><blockquote><p>mv a b //将文件a更名为b</p><p>mv info/ logs   //将info目录放入logs目录中。注意，如果logs目录不存在，则该命令将info改名为logs。</p><p>mv /home/img/*  .     //将/home/img下的所有文件和目录移到当前目录下</p></blockquote><p>注意：</p><blockquote><p>mv /home/a.txt  /home/b.txt      //目标目录与原目录一致，指定了新文件名，效果就是仅仅重命名。</p><p>//目标目录与原目录不一致，没有指定新文件名，效果就是仅仅移动。</p><p>mv /home/a.txt  /home/test/ 或者 mv /home/a.txt  /home/test</p><p>mv /home/a.txt  /home/test/b.txt     //目标目录与原目录一致, 指定了新文件名，效果就是：移动 + 重命名。</p></blockquote><h5 id="5-centos端口开放">5. centos端口开放</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=5672/tcp --permanent   # 开放5672端口</span><br><span class="line"></span><br><span class="line">firewall-cmd --zone=public --remove-port=5672/tcp --permanent  #关闭5672端口</span><br><span class="line"></span><br><span class="line">firewall-cmd --zone=public --list-ports   #查看防火墙所有开放的端口</span><br><span class="line"></span><br><span class="line">systemctl stop firewalld.service   #关闭防火墙</span><br><span class="line"></span><br><span class="line">firewall-cmd --state   #查看防火墙状态</span><br><span class="line"></span><br><span class="line">netstat -lnpt    #查看监听的端口</span><br><span class="line"></span><br><span class="line">netstat -lnpt |grep 5672  #检查端口被哪个进程占用</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
